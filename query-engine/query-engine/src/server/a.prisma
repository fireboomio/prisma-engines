datasource db {
  provider = "mysql"
  url      = "mysql://root:*@127.0.0.1:3306/db2"
}

model account {
  id             Int          @id @default(autoincrement())
  store_id       Int?
  member_id      Int?
  name           String?      @db.VarChar(255)
  account_type   String       @db.VarChar(50)
  real_name      String       @db.VarChar(255)
  bank_id        String?      @db.VarChar(255)
  bank           String?      @db.VarChar(255)
  card_type      Int?         @db.TinyInt
  id_card_number String?      @db.VarChar(50)
  remark         String?      @db.Text
  created_at     DateTime?    @default(now()) @db.Timestamp(0)
  updated_at     DateTime?    @default(now()) @db.Timestamp(0)
  dr             Int?         @db.TinyInt
  store_info     store_info?  @relation(fields: [store_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "account_ibfk_1")
  withdrawal     withdrawal[]

  @@index([member_id], map: "member_id")
  @@index([store_id], map: "store_id")
}

model account_record {
  id         Int       @id @default(autoincrement())
  account_id Int?
  price      Decimal?  @db.Decimal(10, 2)
  type       Int?      @db.TinyInt
  no         String?   @db.VarChar(255)
  order_id   Int?
  create_at  DateTime? @db.DateTime(0)
}

model activity_prd {
  id         Int       @id @default(autoincrement())
  prd_id     Int?      @unique(map: "prd_id")
  activity   Int?
  created_at DateTime? @db.Timestamp(0)
  type       Int?
}

model agent {
  id                Int            @id @default(autoincrement()) @db.UnsignedInt
  member_id         Int?
  agent_level_id    Int?           @db.UnsignedInt
  accumulated_bonus Decimal?       @default(0.00) @db.Decimal(10, 2)
  issued_bonus      Decimal?       @default(0.00) @db.Decimal(10, 2)
  no_bonus          Decimal?       @default(0.00) @db.Decimal(10, 2)
  status            Int?           @db.TinyInt
  dr                Int?           @db.UnsignedTinyInt
  created_at        DateTime?      @default(now()) @db.Timestamp(0)
  updated_at        DateTime?      @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?      @db.Timestamp(0)
  agent_level       agent_level?   @relation(fields: [agent_level_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "agent_ibfk_1")
  member            member?        @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "agent_ibfk_2")
  agent_area        agent_area[]
  agent_change      agent_change[]
  area_bonus        area_bonus[]

  @@index([agent_level_id], map: "agent_level_id")
  @@index([member_id], map: "member_id")
}

model agent_area {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  name       Int?      @db.TinyInt
  province   String?   @db.VarChar(255)
  city       String?   @db.VarChar(255)
  district   String?   @db.VarChar(255)
  agent_id   Int?      @db.UnsignedInt
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
  dr         Int?      @default(0) @db.UnsignedTinyInt
  agent      agent?    @relation(fields: [agent_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "agent_area_ibfk_1")

  @@index([agent_id], map: "agent_id")
}

model agent_change {
  id                                                   Int          @id @default(autoincrement()) @db.UnsignedInt
  agent_id                                             Int          @db.UnsignedInt
  previous_level                                       Int?         @db.UnsignedInt
  new_level                                            Int?         @db.UnsignedInt
  reason                                               String?      @db.VarChar(255)
  change_time                                          DateTime?    @db.DateTime(0)
  created_at                                           DateTime?    @default(now()) @db.DateTime(0)
  updated_at                                           DateTime?    @default(now()) @db.Timestamp(0)
  deleted_at                                           DateTime?    @db.Timestamp(0)
  agent                                                agent        @relation(fields: [agent_id], references: [id], onUpdate: Restrict, map: "agent_change_ibfk_1")
  agent_level_agent_change_previous_levelToagent_level agent_level? @relation("agent_change_previous_levelToagent_level", fields: [previous_level], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "agent_change_ibfk_2")
  agent_level_agent_change_new_levelToagent_level      agent_level? @relation("agent_change_new_levelToagent_level", fields: [new_level], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "agent_change_ibfk_3")

  @@index([agent_id], map: "agent_id")
  @@index([new_level], map: "new_level")
  @@index([previous_level], map: "previous_level")
}

model agent_level {
  id                                                    Int                   @id @default(autoincrement()) @db.UnsignedInt
  name                                                  String                @db.VarChar(50)
  province_bonus                                        Decimal?              @db.Decimal(10, 2)
  city_bonus                                            Decimal?              @db.Decimal(10, 2)
  district_bonus                                        Decimal?              @db.Decimal(10, 2)
  auto_upgrade                                          Int                   @default(1) @db.TinyInt
  required_type                                         Int                   @db.UnsignedTinyInt
  internalorder_money                                   Decimal?              @db.Decimal(10, 2)
  number1                                               Int?
  number2                                               Int?
  number3                                               Int?
  number4                                               Int?
  number5                                               Int?
  offline_number                                        Int?
  upgrade_level_id                                      Int?                  @db.UnsignedInt
  level_number                                          Int?
  order_money                                           Decimal?              @db.Decimal(10, 2)
  order_number                                          Int?
  selforder_money                                       Decimal?              @db.Decimal(10, 2)
  selforder_number                                      Int?
  my_selforder_money                                    Decimal?              @db.Decimal(10, 2)
  my_selforder_number                                   Int?
  upgrade_conditions                                    String?               @db.Text
  auto_downgrade                                        Int                   @default(1) @db.TinyInt
  downgrade_condition                                   Int?                  @db.TinyInt
  team_number_day                                       Int?
  team_number                                           Int?
  team_money_day                                        Int?
  team_money                                            Decimal?              @db.Decimal(10, 2)
  self_money                                            Decimal?              @db.Decimal(10, 2)
  self_money_day                                        Int?
  internal_day                                          Int?
  internal_money                                        Decimal?              @db.Decimal(10, 2)
  pre_status                                            Int?
  flag                                                  String?               @db.VarChar(255)
  downgrade_flag                                        String?               @db.VarChar(255)
  downgrade_conditions                                  String?               @db.Text
  weight                                                Int?
  dr                                                    Int?                  @default(0) @db.UnsignedTinyInt
  created_at                                            DateTime?             @default(now()) @db.Timestamp(0)
  updated_at                                            DateTime?             @default(now()) @db.Timestamp(0)
  deleted_at                                            DateTime?             @db.Timestamp(0)
  agent_level                                           agent_level?          @relation("agent_levelToagent_level", fields: [upgrade_level_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "agent_level_ibfk_1")
  agent                                                 agent[]
  agent_change_agent_change_previous_levelToagent_level agent_change[]        @relation("agent_change_previous_levelToagent_level")
  agent_change_agent_change_new_levelToagent_level      agent_change[]        @relation("agent_change_new_levelToagent_level")
  other_agent_level                                     agent_level[]         @relation("agent_levelToagent_level")
  agent_level_product                                   agent_level_product[]

  @@index([upgrade_level_id], map: "upgrade_level_id")
}

model agent_level_product {
  id             Int          @id @default(autoincrement())
  agent_level_id Int?         @db.UnsignedInt
  product_id     Int?         @default(0)
  created_time   DateTime?    @default(now()) @db.DateTime(0)
  updated_time   DateTime?    @default(now()) @db.DateTime(0)
  deleted_time   DateTime?    @db.DateTime(0)
  dr             Boolean?     @default(false)
  product        product?     @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "agent_level_product_ibfk_2")
  agent_level    agent_level? @relation(fields: [agent_level_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "agent_level_product_ibfk_3")

  @@index([agent_level_id], map: "agent_level_id")
  @@index([product_id], map: "product_id")
}

model album_photo {
  id          Int          @id @default(autoincrement())
  album_id    Int?
  image_name  String?      @db.VarChar(255)
  image_url   String?      @db.VarChar(255)
  created_at  DateTime?    @default(now()) @db.Timestamp(0)
  updated_at  DateTime?    @default(now()) @db.Timestamp(0)
  deleted_at  DateTime?    @db.Timestamp(0)
  dr          Boolean?
  media_album media_album? @relation(fields: [album_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "album_photo_ibfk_1")

  @@index([album_id], map: "idx_album_id")
}

model area_bonus {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  order_id    Int?      @db.UnsignedInt
  order_price Decimal?  @db.Decimal(10, 2)
  agent_id    Int?      @db.UnsignedInt
  bonus       Decimal?  @db.Decimal(10, 2)
  type        Int?      @default(3) @db.UnsignedTinyInt
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  agent       agent?    @relation(fields: [agent_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "area_bonus_ibfk_1")
  order       order?    @relation(fields: [order_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "area_bonus_ibfk_2")

  @@index([agent_id], map: "agent_id")
  @@index([order_id], map: "area_bonus_ibfk_2")
}

model article {
  id                  Int                   @id @default(autoincrement())
  store_id            Int?
  member_id           Int?
  status              Int?
  type                Int?
  display_type        Int?
  title               String?               @default("") @db.VarChar(255)
  category_id         Int?                  @default(0)
  cover_url           String?               @default("") @db.VarChar(255)
  content             String?               @db.Text
  addres              String?               @db.VarChar(255)
  lat                 Float?                @default(0.000000)
  lng                 Float?                @default(0.000000)
  sort                Int?                  @default(0)
  is_display          Int?                  @default(1) @db.TinyInt
  mobile_url          String?               @db.VarChar(255)
  pc_url              String?               @db.VarChar(255)
  mini_program_url    String?               @db.VarChar(255)
  read_count          Int?                  @default(0)
  collection_count    Int?                  @default(0)
  like_count          Int?                  @default(0)
  comment_count       Int?                  @default(0)
  created_time        DateTime?             @default(now()) @db.DateTime(0)
  updated_time        DateTime?             @default(now()) @db.DateTime(0)
  deleted_time        DateTime?             @db.DateTime(0)
  dr                  Int?                  @default(0) @db.TinyInt
  article_category    article_category?     @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "article_ibfk_1")
  store_info          store_info?           @relation(fields: [store_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "article_ibfk_2")
  member              member?               @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "article_ibfk_3")
  article_comment     article_comment[]
  article_images      article_images[]
  article_product     article_product[]
  member_article_like member_article_like[]

  @@index([category_id], map: "category_id")
  @@index([member_id], map: "member_id")
  @@index([store_id], map: "store_id")
}

model article_category {
  id           Int       @id @default(autoincrement())
  img          String?   @db.VarChar(255)
  type         Int?
  sort         Int?      @default(0)
  name         String?   @default("") @db.VarChar(50)
  is_display   Int?      @default(1) @db.TinyInt
  parent_id    Int?
  created_time DateTime? @default(now()) @db.DateTime(0)
  updated_time DateTime? @default(now()) @db.DateTime(0)
  deleted_time DateTime? @db.DateTime(0)
  dr           Int?      @default(0) @db.TinyInt
  store_id     Int
  article      article[]

  @@index([parent_id], map: "parent_id")
}

model article_comment {
  id                    Int                 @id @default(autoincrement())
  article_id            Int
  comment_id            Int?
  user_id               Int
  likes                 Int
  content               String              @db.Text
  created_time          DateTime            @default(now()) @db.DateTime(0)
  updated_time          DateTime?           @db.DateTime(0)
  deleted_time          DateTime?           @db.DateTime(0)
  dr                    Int                 @default(0) @db.TinyInt
  article               article             @relation(fields: [article_id], references: [id], onUpdate: Restrict, map: "article_comment_ibfk_1")
  article_comment       article_comment?    @relation("article_commentToarticle_comment", fields: [comment_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "article_comment_ibfk_2")
  member                member              @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "article_comment_ibfk_3")
  other_article_comment article_comment[]   @relation("article_commentToarticle_comment")
  violation_comment     violation_comment[]

  @@index([article_id], map: "article_id")
  @@index([comment_id], map: "comment_id")
  @@index([user_id], map: "user_id")
}

model article_images {
  id         Int       @id @default(autoincrement())
  article_id Int
  image_url  String?   @db.VarChar(255)
  created_at DateTime? @default(now()) @db.DateTime(0)
  updated_at DateTime? @default(now()) @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)
  is_deleted Int?      @default(0) @db.TinyInt
  article    article   @relation(fields: [article_id], references: [id], onUpdate: Restrict, map: "article_images_ibfk_1")

  @@index([article_id], map: "idx_article_id")
  @@index([is_deleted], map: "idx_is_deleted")
}

model article_product {
  id          Int       @id @default(autoincrement())
  article_id  Int
  product_id  Int
  create_time DateTime  @db.DateTime(0)
  update_time DateTime? @db.DateTime(0)
  delete_time DateTime? @db.DateTime(0)
  dr          Boolean   @default(false)
  article     article   @relation(fields: [article_id], references: [id], onUpdate: Restrict, map: "article_product_ibfk_1")
  product     product   @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "article_product_ibfk_2")

  @@index([article_id], map: "article_id")
  @@index([product_id], map: "product_id")
}

model bargain_activity {
  id                   Int              @id @default(autoincrement())
  label                String?          @default("") @db.VarChar(50)
  shop_id              Int?
  start_time           DateTime?        @db.DateTime(0)
  end_time             DateTime?        @db.DateTime(0)
  status               Int?             @default(0) @db.TinyInt
  product_id           Int?             @default(0)
  initial_price        Decimal?         @default(0.00) @db.Decimal(10, 2)
  lowest_price         Decimal?         @default(0.00) @db.Decimal(10, 2)
  first_cut_price      Decimal?         @default(0.00) @db.Decimal(10, 2)
  cut_type             Int?             @default(0) @db.TinyInt
  min_cut_price        Decimal?         @default(0.00) @db.Decimal(10, 2)
  max_cut_price        Decimal?         @default(0.00) @db.Decimal(10, 2)
  inventory            Int?             @default(0)
  limit_buy            Int?             @default(0)
  self_participate     Int?             @default(0) @db.TinyInt
  must_cut_to_lowest   Int?             @default(0) @db.TinyInt
  invalid_time_type    Int?             @default(0) @db.TinyInt
  independent_end_time Decimal?         @db.Decimal(10, 2)
  mobile_link          String?          @default("") @db.VarChar(255)
  pc_link              String?          @default("") @db.VarChar(255)
  mini_program_link    String?          @default("") @db.VarChar(255)
  created_time         DateTime?        @default(now()) @db.DateTime(0)
  updated_time         DateTime?        @default(now()) @db.DateTime(0)
  deleted_time         DateTime?        @db.DateTime(0)
  dr                   Int?             @default(0) @db.TinyInt
  product              product?         @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "bargain_activity_ibfk_1")
  bargain_record       bargain_record[]

  @@index([product_id], map: "product_id")
}

model bargain_record {
  id                  Int                   @id @default(autoincrement())
  bargain_id          Int
  member_id           Int
  order_id            Int?                  @db.UnsignedInt
  bargain_price       Decimal?              @db.Decimal(10, 2)
  original_price      Decimal               @db.Decimal(10, 2)
  helped_count        Int                   @default(0)
  current_price       Decimal?              @db.Decimal(10, 2)
  status              Int                   @default(0) @db.TinyInt
  created_time        DateTime              @default(now()) @db.DateTime(0)
  updated_time        DateTime              @default(now()) @db.DateTime(0)
  deleted_time        DateTime?             @db.DateTime(0)
  dr                  Int                   @default(0)
  bargain_activity    bargain_activity      @relation(fields: [bargain_id], references: [id], onUpdate: Restrict, map: "bargain_record_ibfk_1")
  member              member                @relation(fields: [member_id], references: [id], onUpdate: Restrict, map: "bargain_record_ibfk_2")
  order               order?                @relation(fields: [order_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "bargain_record_ibfk_3")
  bargain_record_user bargain_record_user[]

  @@index([bargain_id], map: "bargain_id_index")
  @@index([member_id], map: "member_id_index")
  @@index([order_id], map: "order_id")
}

model bargain_record_user {
  id                                          Int            @id @default(autoincrement())
  user_id                                     Int
  paren_id                                    Int
  bargain_id                                  Int?
  bargain_record_id                           Int
  price                                       Decimal?       @db.Decimal(10, 2)
  created_at                                  DateTime       @db.DateTime(0)
  dr                                          Int            @default(0)
  member_bargain_record_user_user_idTomember  member         @relation("bargain_record_user_user_idTomember", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bargain_record_user_ibfk_1")
  member_bargain_record_user_paren_idTomember member         @relation("bargain_record_user_paren_idTomember", fields: [paren_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bargain_record_user_ibfk_2")
  bargain_record                              bargain_record @relation(fields: [bargain_record_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bargain_record_user_ibfk_3")

  @@index([bargain_record_id], map: "bargain_record_id")
  @@index([paren_id], map: "paren_id")
  @@index([user_id], map: "user_id")
}

model basic_settings {
  id                                 Int      @id
  offline_pickup_enabled             Boolean
  store_inventory_type               Boolean
  cashier_commission_enabled         Boolean
  settlement_object                  Boolean
  cashier_commission_type            Boolean
  cashier_commission_percentage      Decimal? @db.Decimal(5, 2)
  cashier_commission_amount          Decimal? @db.Decimal(10, 2)
  verification_commission_type       Boolean
  verification_commission_percentage Decimal? @db.Decimal(5, 2)
  verification_commission_amount     Decimal? @db.Decimal(10, 2)
  created_at                         DateTime @default(now()) @db.Timestamp(0)
  updated_at                         DateTime @default(now()) @db.Timestamp(0)
  deleted_at                         DateTime @default(now()) @db.Timestamp(0)
}

model bonus_withdrawal {
  bonus_id           Int       @id @default(autoincrement()) @db.UnsignedInt
  no                 String?   @db.VarChar(255)
  member_id          Int
  shop_id            Int?
  website_id         Int?
  uid                Int?
  type               String    @db.VarChar(50)
  bank_name          String    @db.VarChar(50)
  withdrawal_account String    @db.VarChar(50)
  real_cash          Decimal   @db.Decimal(10, 2)
  real_name          String    @db.VarChar(50)
  tax                Decimal   @db.Decimal(10, 2)
  income_tax         Decimal   @db.Decimal(10, 2)
  payment_date       DateTime? @db.DateTime(0)
  status             String    @db.VarChar(50)
  remark             String?   @db.Text
  created_at         DateTime  @default(now()) @db.Timestamp(0)
  updated_at         DateTime  @db.DateTime(0)
  deleted_at         DateTime  @default(now()) @db.Timestamp(0)
}

model booking_configuration {
  id                      Int                       @id @default(autoincrement()) @db.UnsignedInt
  custom_name             String?                   @db.VarChar(255)
  advance_booking_days    Int?
  booking_days            Int?
  chk_value               String?                   @db.VarChar(255)
  book_schedule_start     DateTime?                 @db.Date
  book_schedule_end       DateTime?                 @db.Date
  edit                    Int?
  shop_id                 Int?
  website_id              Int?                      @db.UnsignedInt
  dr                      Int?                      @db.UnsignedTinyInt
  created_at              DateTime                  @default(now()) @db.Timestamp(0)
  updated_at              DateTime                  @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?                 @db.Timestamp(0)
  booking_slot_scheduling booking_slot_scheduling[]
}

model booking_slot_scheduling {
  id                       Int                    @id @default(autoincrement()) @db.UnsignedInt
  booking_configuration_id Int?                   @db.UnsignedInt
  day_of_week              String?                @db.VarChar(255)
  day_of_week_value        String?                @db.VarChar(255)
  time_slot                String?                @db.VarChar(255)
  booking_stock_quantity   Int?
  dr                       Int?                   @default(0) @db.UnsignedInt
  created_at               DateTime               @default(now()) @db.Timestamp(0)
  updated_at               DateTime               @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?              @db.Timestamp(0)
  booking_configuration    booking_configuration? @relation(fields: [booking_configuration_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "booking_slot_scheduling_ibfk_1")

  @@index([booking_configuration_id], map: "booking_configuration_id")
}

model captain {
  id                 Int              @id @default(autoincrement()) @db.UnsignedInt
  member_id          Int
  level_id           Int              @db.UnsignedInt
  accumulated_bonus  Decimal?         @default(0.00) @db.Decimal(10, 2)
  no_bonus           Decimal?         @default(0.00) @db.Decimal(10, 2)
  issued_bonus       Decimal?         @default(0.00) @db.Decimal(10, 2)
  status             Int?             @db.TinyInt
  dr                 Int?             @default(0) @db.UnsignedTinyInt
  created_at         DateTime?        @default(now()) @db.Timestamp(0)
  captain_created_at DateTime?        @default(now()) @db.Timestamp(0)
  updated_at         DateTime?        @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?        @db.Timestamp(0)
  member             member           @relation(fields: [member_id], references: [id], onUpdate: Restrict, map: "captain_ibfk_2")
  captain_level      captain_level    @relation(fields: [level_id], references: [id], onUpdate: Restrict, map: "captain_ibfk_3")
  captain_bonus      captain_bonus[]
  captain_change     captain_change[]

  @@index([level_id], map: "level_id")
  @@index([member_id], map: "member_id")
}

model captain_bonus {
  id           Int       @id @default(autoincrement()) @db.UnsignedInt
  captain_id   Int       @db.UnsignedInt
  order_id     Int       @db.UnsignedInt
  order_price  Decimal?  @db.Decimal(10, 2)
  bonus_type   Int?      @db.TinyInt
  bonus_amount Decimal?  @db.Decimal(10, 2)
  created_at   DateTime? @default(now()) @db.DateTime(0)
  updated_at   DateTime? @default(now()) @db.Timestamp(0)
  deleted_at   DateTime? @db.Timestamp(0)
  captain      captain   @relation(fields: [captain_id], references: [id], onUpdate: Restrict, map: "captain_bonus_ibfk_1")
  order        order     @relation(fields: [order_id], references: [id], onUpdate: Restrict, map: "captain_bonus_ibfk_2")

  @@index([order_id], map: "captain_bonus_ibfk_2")
  @@index([captain_id], map: "captain_id")
}

model captain_change {
  id                                                         Int            @id @default(autoincrement()) @db.UnsignedInt
  captain_id                                                 Int            @db.UnsignedInt
  previous_level                                             Int?           @db.UnsignedInt
  new_level                                                  Int?           @db.UnsignedInt
  reason                                                     String?        @db.VarChar(255)
  change_time                                                DateTime?      @db.DateTime(0)
  created_at                                                 DateTime?      @default(now()) @db.DateTime(0)
  updated_at                                                 DateTime?      @default(now()) @db.Timestamp(0)
  deleted_at                                                 DateTime?      @db.Timestamp(0)
  captain                                                    captain        @relation(fields: [captain_id], references: [id], onUpdate: Restrict, map: "captain_change_ibfk_1")
  captain_level_captain_change_previous_levelTocaptain_level captain_level? @relation("captain_change_previous_levelTocaptain_level", fields: [previous_level], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "captain_change_ibfk_2")
  captain_level_captain_change_new_levelTocaptain_level      captain_level? @relation("captain_change_new_levelTocaptain_level", fields: [new_level], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "captain_change_ibfk_3")

  @@index([captain_id], map: "captain_id")
  @@index([new_level], map: "new_level")
  @@index([previous_level], map: "previous_level")
}

model captain_level {
  id                                                          Int                     @id @default(autoincrement()) @db.UnsignedInt
  level_name                                                  String?                 @db.VarChar(255)
  bonus_type                                                  Int?
  bonus_ratio                                                 Decimal?                @db.Decimal(10, 2)
  level_award                                                 Decimal?                @db.Decimal(10, 2)
  level_award2                                                Decimal?                @db.Decimal(10, 2)
  level_award3                                                Decimal?                @db.Decimal(10, 2)
  auto_upgrade                                                Int                     @default(1) @db.TinyInt
  internalorder_money                                         Decimal?                @db.Decimal(10, 2)
  required_type                                               Int                     @db.UnsignedTinyInt
  number1                                                     Int?                    @default(0)
  number2                                                     Int?                    @default(0)
  number3                                                     Int?                    @default(0)
  number4                                                     Int?                    @default(0)
  number5                                                     Int?                    @default(0)
  offline_number                                              Int?                    @default(0)
  upgrade_level_id                                            Int?                    @db.UnsignedInt
  level_number                                                Int?                    @default(0)
  order_money                                                 Decimal?                @db.Decimal(10, 2)
  order_number                                                Int?                    @default(0)
  selforder_money                                             Decimal?                @db.Decimal(10, 2)
  selforder_number                                            Int?                    @default(0)
  my_selforder_money                                          Decimal?                @db.Decimal(10, 2)
  my_selforder_number                                         Int?                    @default(0)
  internal_day                                                Int?
  internal_money                                              Decimal?                @db.Decimal(10, 2)
  upgrade_conditions                                          String?                 @db.Text
  auto_downgrade                                              Int                     @default(1) @db.TinyInt
  downgrade_condition                                         Int?                    @default(0) @db.TinyInt
  team_number_day                                             Int?                    @default(0)
  team_number                                                 Int?                    @default(0)
  team_money_day                                              Int?
  team_money                                                  Decimal?                @db.Decimal(10, 2)
  self_money                                                  Decimal?                @db.Decimal(10, 2)
  self_money_day                                              Int?                    @default(0)
  downgrade_conditions                                        String?                 @db.Text
  weight                                                      Int?                    @default(0)
  pre_status                                                  Int?                    @default(0)
  flag                                                        String?                 @db.VarChar(255)
  downgrade_flag                                              String?                 @db.VarChar(255)
  dr                                                          Int?                    @default(0) @db.UnsignedTinyInt
  created_at                                                  DateTime?               @default(now()) @db.Timestamp(0)
  updated_at                                                  DateTime?               @default(now()) @db.Timestamp(0)
  deleted_at                                                  DateTime?               @db.Timestamp(0)
  captain_level                                               captain_level?          @relation("captain_levelTocaptain_level", fields: [upgrade_level_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "captain_level_ibfk_1")
  captain                                                     captain[]
  captain_change_captain_change_previous_levelTocaptain_level captain_change[]        @relation("captain_change_previous_levelTocaptain_level")
  captain_change_captain_change_new_levelTocaptain_level      captain_change[]        @relation("captain_change_new_levelTocaptain_level")
  other_captain_level                                         captain_level[]         @relation("captain_levelTocaptain_level")
  captain_level_product                                       captain_level_product[]

  @@index([upgrade_level_id], map: "upgrade_level_id")
}

model captain_level_product {
  id               Int            @id @default(autoincrement())
  captain_level_id Int?           @db.UnsignedInt
  product_id       Int?           @default(0)
  created_time     DateTime?      @default(now()) @db.DateTime(0)
  updated_time     DateTime?      @default(now()) @db.DateTime(0)
  deleted_time     DateTime?      @db.DateTime(0)
  dr               Boolean?       @default(false)
  product          product?       @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "captain_level_product_ibfk_2")
  captain_level    captain_level? @relation(fields: [captain_level_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "captain_level_product_ibfk_3")

  @@index([captain_level_id], map: "captain_level_id")
  @@index([product_id], map: "product_id")
}

model categories_image_middle {
  id                 Int                 @id @default(autoincrement())
  categories_id      Int?
  type               Int?
  html               String?             @db.VarChar(255)
  url                String?             @db.VarChar(255)
  creat_at           DateTime?           @db.Timestamp(0)
  update_at          DateTime?           @db.Timestamp(0)
  delect_at          DateTime?           @db.Timestamp(0)
  dr                 Int?                @default(0)
  product_categories product_categories? @relation(fields: [categories_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "categories_image_middle_ibfk_1")

  @@index([categories_id], map: "categories_id")
}

model category_attribute {
  id               Int               @id @default(autoincrement())
  category_id      Int?
  category_name    String?           @db.VarChar(255)
  type             Int?              @db.TinyInt
  attribute_values String?           @db.VarChar(255)
  attribute_id     Int?              @default(0)
  attribute_name   String?           @db.VarChar(255)
  sort             Int?
  created_at       DateTime?         @default(now()) @db.Timestamp(0)
  updated_at       DateTime?         @default(now()) @db.Timestamp(0)
  deleted_at       DateTime?         @db.Timestamp(0)
  dr               Int?              @default(0) @db.UnsignedTinyInt
  product_category product_category? @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "category_attribute_ibfk_3")

  @@index([attribute_id], map: "idx_attribute_id")
  @@index([category_id], map: "idx_category_id")
}

model category_brand {
  id               Int               @id @default(autoincrement())
  category_id      Int?
  brand_id         Int?
  created_at       DateTime?         @default(now()) @db.Timestamp(0)
  updated_at       DateTime?         @default(now()) @db.Timestamp(0)
  deleted_at       DateTime?         @db.Timestamp(0)
  dr               Boolean?          @default(false)
  product_category product_category? @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "category_brand_ibfk_3")
  product_brand    product_brand?    @relation(fields: [brand_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "category_brand_ibfk_4")

  @@index([brand_id], map: "idx_brand_id")
  @@index([category_id], map: "idx_category_id")
}

model category_classification {
  id                 Int                 @id @default(autoincrement())
  category_id        Int?
  classification_id  Int?
  created_at         DateTime?           @default(now()) @db.Timestamp(0)
  updated_at         DateTime?           @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?           @db.Timestamp(0)
  is_deleted         Int                 @db.TinyInt
  product_categories product_categories? @relation(fields: [classification_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "category_classification_ibfk_2")
  product_category   product_category?   @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "category_classification_ibfk_3")

  @@index([category_id], map: "category_id")
  @@index([classification_id], map: "classification_id")
}

model category_specification {
  id                 Int              @id @default(autoincrement())
  category_id        Int
  category_name      String           @db.VarChar(255)
  specification_id   Int
  specification_name String           @db.VarChar(255)
  created_at         DateTime?        @default(now()) @db.Timestamp(0)
  updated_at         DateTime?        @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?        @db.Timestamp(0)
  dr                 Boolean?         @default(false)
  product_category   product_category @relation(fields: [category_id], references: [id], onUpdate: Restrict, map: "category_specification_ibfk_2")
  specification      specification    @relation(fields: [specification_id], references: [id], onUpdate: Restrict, map: "category_specification_ibfk_3")

  @@index([specification_id], map: "category_specification_ibfk_1")
  @@index([category_id], map: "idx_category_id")
  @@index([deleted_at], map: "idx_deleted_at")
}

model channel_condition {
  id                      Int            @id @default(autoincrement()) @db.UnsignedInt
  channel_id              Int?           @db.UnsignedInt
  cross_level             Decimal?       @db.Decimal(10, 2)
  downgrade_condition     String?        @db.VarChar(255)
  downgrade_conditions    String?        @db.VarChar(255)
  downgrade_str           String?        @db.Text
  downgrade_val           String?        @db.Text
  flat_first              Decimal?       @db.Decimal(10, 2)
  flat_second             Decimal?       @db.Decimal(10, 2)
  flat_third              Decimal?       @db.Decimal(10, 2)
  is_default              Int            @db.UnsignedTinyInt
  minimum_purchase_amount Decimal?       @db.Decimal(10, 2)
  purchase_discount       String?        @db.VarChar(255)
  upgrade_condition       String?        @db.VarChar(255)
  upgrade_conditions      String?        @db.VarChar(255)
  upgrade_str             String?        @db.Text
  upgrade_val             String?        @db.Text
  website_id              Int?           @db.UnsignedInt
  weight                  Int?
  dr                      Int?           @db.UnsignedTinyInt
  created_at              DateTime       @default(now()) @db.Timestamp(0)
  updated_at              DateTime       @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?      @db.Timestamp(0)
  channel_grade           channel_grade? @relation(fields: [channel_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "channel_condition_ibfk_1")

  @@index([channel_id], map: "channel_id")
}

model channel_grade {
  id                 Int                 @id @default(autoincrement()) @db.UnsignedInt
  channel_grade_name String              @db.VarChar(255)
  auto_downgrade     Int                 @db.UnsignedTinyInt
  auto_upgrade       Int                 @db.UnsignedTinyInt
  dr                 Int?                @db.UnsignedTinyInt
  created_at         DateTime            @default(now()) @db.Timestamp(0)
  updated_at         DateTime            @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?           @db.Timestamp(0)
  channel_condition  channel_condition[]
  channel_partner    channel_partner[]
}

model channel_partner {
  id               Int              @id @default(autoincrement())
  user_id          Int?
  member_id        Int
  member_info      String?          @db.Text
  phone_number     String?          @db.VarChar(20)
  channel_id       Int?             @db.UnsignedInt
  status           Int?
  purchase_list_id Int?
  product_id       Int?
  dr               Int?             @db.UnsignedTinyInt
  created_at       DateTime         @default(now()) @db.Timestamp(0)
  updated_at       DateTime         @default(now()) @db.Timestamp(0)
  deleted_at       DateTime?        @db.Timestamp(0)
  channel_product  channel_product? @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "channel_partner_ibfk_1")
  channel_grade    channel_grade?   @relation(fields: [channel_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "channel_partner_ibfk_2")

  @@index([channel_id], map: "channel_id")
  @@index([product_id], map: "product_id")
}

model channel_product {
  id                   Int               @id @default(autoincrement())
  product_id           Int
  purchase_price       Decimal?          @db.Decimal(10, 2)
  stock                Int?
  accumulated_purchase Int?
  accumulated_sales    Int?
  dr                   Int?              @db.UnsignedTinyInt
  created_at           DateTime          @default(now()) @db.Timestamp(0)
  updated_at           DateTime          @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?         @db.Timestamp(0)
  channel_partner      channel_partner[]
}

model checkin_detail {
  id           Int       @id @default(autoincrement())
  user_id      Int
  type         Int       @db.TinyInt
  year         Int?
  month        Int?      @db.TinyInt
  day          Int?      @db.TinyInt
  number       Int?
  award        String?   @db.VarChar(255)
  created_time DateTime? @default(now()) @db.DateTime(0)
  updated_time DateTime? @default(now()) @db.DateTime(0)
  deleted_time DateTime? @db.DateTime(0)
  dr           Int       @default(0)
  member       member    @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "checkin_detail_ibfk_1")

  @@index([user_id], map: "user_id")
}

model consigner_template {
  id                Int      @id @default(autoincrement()) @db.UnsignedInt
  order_id          Int?     @db.UnsignedInt
  receiver_mobile   String   @db.VarChar(255)
  shipper_signature String?  @db.VarChar(255)
  shop_id           Int?     @db.UnsignedInt
  receiver_province Int?     @db.UnsignedInt
  receiver_city     Int?     @db.UnsignedInt
  receiver_district Int?     @db.UnsignedInt
  receiver_address  String   @db.VarChar(255)
  receiver_zip      String?  @db.VarChar(10)
  dr                String?  @default("0") @db.Char(1)
  created_at        DateTime @db.DateTime(0)
  updated_at        DateTime @db.DateTime(0)
  deleted_at        DateTime @default(now()) @db.Timestamp(0)

  @@index([order_id], map: "idx_order_id")
  @@index([receiver_city], map: "idx_receiver_city")
  @@index([receiver_district], map: "idx_receiver_district")
  @@index([receiver_province], map: "idx_receiver_province")
}

model content_table {
  id         Int       @id @default(autoincrement())
  title      String?   @db.VarChar(255)
  content    String?   @db.Text
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
}

model copywriting_style {
  id                      Int       @id @default(autoincrement())
  image_url               String?   @db.VarChar(255)
  product_identifier      Int?      @db.TinyInt
  distribution_center     String?   @db.VarChar(50)
  distributor_name        String?   @db.VarChar(50)
  commission              String?   @db.VarChar(50)
  distribution_commission String?   @db.VarChar(50)
  available_commission    String?   @db.VarChar(500)
  accumulated_commission  String?   @db.VarChar(50)
  withdrawn_commission    String?   @db.VarChar(50)
  frozen_commission       String?   @db.VarChar(50)
  pending_commission      String?   @db.VarChar(50)
  withdrawal_in_progress  String?   @db.VarChar(50)
  commission_details      String?   @db.VarChar(50)
  distribution_orders     String?   @db.VarChar(50)
  my_team                 String?   @db.VarChar(50)
  team_level_names        String?   @db.VarChar(100)
  direct_push             String?   @db.VarChar(50)
  indirect_push           String?   @db.VarChar(50)
  third_level_push        String?   @db.VarChar(50)
  my_customers            String?   @db.VarChar(50)
  promotion_code          String?   @db.VarChar(50)
  promotion_qr_code       String?   @db.VarChar(50)
  distribution_tips       String?   @db.VarChar(200)
  created_at              DateTime? @default(now()) @db.Timestamp(0)
  updated_at              DateTime? @default(now()) @db.Timestamp(0)
  deleted_at              DateTime? @db.Timestamp(0)
}

model country {
  id                   Int       @id @default(autoincrement()) @db.UnsignedInt
  chinese_country_name String?   @db.VarChar(255)
  english_country_name String?   @db.VarChar(255)
  english_short_name   String?   @db.VarChar(255)
  dr                   Int?      @db.UnsignedTinyInt
  created_at           DateTime  @default(now()) @db.Timestamp(0)
  updated_at           DateTime  @default(now()) @db.Timestamp(0)
  deleted_at           DateTime? @db.Timestamp(0)
}

model coupon {
  id                              Int                               @id @default(autoincrement())
  store_id                        Int?
  status                          Int?
  scope                           Int?                              @default(0) @db.TinyInt
  name                            String?                           @default("") @db.VarChar(50)
  img                             String?                           @db.VarChar(255)
  type                            Int?                              @default(0) @db.TinyInt
  min_amount                      Decimal?                          @default(0.00) @db.Decimal(10, 2)
  face_value                      Decimal?                          @default(0.00) @db.Decimal(10, 2)
  total                           Int?                              @default(0)
  limit_per_person                Int?                              @default(0)
  start_time                      DateTime                          @db.DateTime(0)
  end_time                        DateTime                          @db.DateTime(0)
  effective_start_time            DateTime                          @db.DateTime(0)
  effective_end_time              DateTime                          @db.DateTime(0)
  description                     String?                           @default("") @db.VarChar(255)
  passive_receive_enabled         Int?                              @default(0) @db.TinyInt
  gift_friends_enabled            Int?                              @default(0) @db.TinyInt
  gift_expiration_hours           Int?                              @default(0)
  participate_goods_enabled       Int?                              @default(0) @db.TinyInt
  mobile_url                      String?                           @default("") @db.VarChar(255)
  mini_program_url                String?                           @default("") @db.VarChar(255)
  prouduct_type                   Int?
  created_time                    DateTime?                         @default(now()) @db.DateTime(0)
  updated_time                    DateTime?                         @default(now()) @db.DateTime(0)
  deleted_time                    DateTime?                         @db.DateTime(0)
  dr                              Int?                              @default(0) @db.TinyInt
  store_info                      store_info?                       @relation(fields: [store_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "coupon_ibfk_1")
  coupon_package_list             coupon_package_list[]
  coupon_product                  coupon_product[]
  coupon_record                   coupon_record[]
  festival_activity               festival_activity[]
  follow_activity                 follow_activity[]
  member_coupon                   member_coupon[]
  member_ship_card_rights_details member_ship_card_rights_details[]
  package_coupons                 package_coupons[]
  payment_activity                payment_activity[]
  recharge_card_package_coupons   recharge_card_package_coupons[]
  task                            task[]

  @@index([store_id], map: "store_id")
}

model coupon_package_coupons {
  id                  Int                 @id @default(autoincrement())
  coupon_package_id   Int
  gift_id             Int?
  pre_type            Int?
  pre_id              Int?
  store_id            Int?
  num                 Int?
  created_time        DateTime?           @default(now()) @db.DateTime(0)
  updated_time        DateTime?           @default(now()) @db.DateTime(0)
  deleted_time        DateTime?           @db.DateTime(0)
  dr                  Int                 @default(0)
  coupon_package_list coupon_package_list @relation(fields: [coupon_package_id], references: [id], onUpdate: Restrict, map: "coupon_package_coupons_ibfk_1")
  gift_coupon         gift_coupon?        @relation(fields: [gift_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "coupon_package_coupons_ibfk_3")
  product             product?            @relation(fields: [pre_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "coupon_package_coupons_ibfk_4")

  @@index([coupon_package_id], map: "coupon_package_id")
  @@index([gift_id], map: "gift_id")
  @@index([pre_id], map: "pre_id")
}

model coupon_package_imgaer {
  id                     Int                  @id @default(autoincrement())
  coupon_package_list_id Int?
  image_name             String?              @db.VarChar(255)
  image_url              String?              @db.VarChar(255)
  created_at             DateTime?            @default(now()) @db.Timestamp(0)
  updated_at             DateTime?            @default(now()) @db.Timestamp(0)
  deleted_at             DateTime?            @db.Timestamp(0)
  dr                     Boolean?
  coupon_package_list    coupon_package_list? @relation(fields: [coupon_package_list_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "coupon_package_imgaer_ibfk_1")

  @@index([coupon_package_list_id], map: "idx_coupon_package_list_id")
}

model coupon_package_list {
  id                                                                  Int                                @id @default(autoincrement())
  coupon_package                                                      String                             @db.VarChar(50)
  status                                                              Int?
  type                                                                Int?                               @db.TinyInt
  img                                                                 String?                            @db.VarChar(255)
  listing_status                                                      Int?                               @default(1)
  total_quantity                                                      Int
  virtual_prices                                                      Decimal?                           @db.Decimal(10, 2)
  price                                                               Decimal?                           @db.Decimal(10, 2)
  bonus_type                                                          Int?                               @default(0) @db.TinyInt
  share_commissions                                                   Int?
  per_person_limit                                                    Int
  start_time                                                          DateTime                           @db.DateTime(0)
  end_time                                                            DateTime?                          @db.DateTime(0)
  totl                                                                Decimal?                           @db.Decimal(10, 2)
  coupon_package_description                                          String?                            @db.VarChar(255)
  mobile_link                                                         String?                            @db.VarChar(255)
  pc_link                                                             String?                            @db.VarChar(255)
  mini_program_link                                                   String?                            @db.VarChar(255)
  stor_id                                                             Int?
  share_id                                                            Int?
  coupon_id                                                           Int?
  primary_distribution                                                Decimal?                           @db.Decimal(10, 2)
  secondary_distribution                                              Decimal?                           @db.Decimal(10, 2)
  share_type                                                          Int?
  vocher_id                                                           Int?
  vocher_packer_id                                                    Int?
  instore_amount                                                      Decimal?                           @db.Decimal(10, 2)
  created_time                                                        DateTime?                          @default(now()) @db.DateTime(0)
  updated_time                                                        DateTime?                          @default(now()) @db.DateTime(0)
  deleted_time                                                        DateTime?                          @db.DateTime(0)
  dr                                                                  Int                                @default(0)
  store_info                                                          store_info?                        @relation(fields: [stor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "coupon_package list ibfk 1")
  coupon_package_list                                                 coupon_package_list?               @relation("coupon_package_listTocoupon_package_list", fields: [share_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "coupon_package list ibfk 2")
  coupon                                                              coupon?                            @relation(fields: [coupon_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "coupon_package list ibfk 3")
  voucher_coupon_coupon_package_list_vocher_idTovoucher_coupon        voucher_coupon?                    @relation("coupon_package_list_vocher_idTovoucher_coupon", fields: [vocher_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "coupon_package list ibfk 4")
  voucher_coupon_coupon_package_list_vocher_packer_idTovoucher_coupon voucher_coupon?                    @relation("coupon_package_list_vocher_packer_idTovoucher_coupon", fields: [vocher_packer_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "coupon_package list ibfk 5")
  coupon_package_coupons                                              coupon_package_coupons[]
  coupon_package_imgaer                                               coupon_package_imgaer[]
  other_coupon_package_list                                           coupon_package_list[]              @relation("coupon_package_listTocoupon_package_list")
  coupon_package_record                                               coupon_package_record[]
  gift_package_combination_coupons                                    gift_package_combination_coupons[]
  member_coupon_package_coupons                                       member_coupon_package_coupons[]
  order_package                                                       order_package[]
  recharge_card                                                       recharge_card[]
  recharge_card_package_coupons                                       recharge_card_package_coupons[]

  @@index([share_id], map: "coupon_package list ibfk 2")
  @@index([coupon_id], map: "coupon_package list ibfk 3")
  @@index([vocher_id], map: "coupon_package list ibfk 4")
  @@index([vocher_packer_id], map: "coupon_package list ibfk 5")
  @@index([stor_id], map: "coupon_package_list_stor_id")
}

model coupon_package_record {
  id                     Int                  @id @default(autoincrement())
  coupon_package_list_id Int?                 @default(0)
  user_id                Int?                 @default(0)
  type                   Int?
  created_time           DateTime?            @default(now()) @db.DateTime(0)
  member                 member?              @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "coupon_package_list_ibfk_1")
  coupon_package_list    coupon_package_list? @relation(fields: [coupon_package_list_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "coupon_package_list_ibfk_2")

  @@index([coupon_package_list_id], map: "coupon_package_list_id")
  @@index([user_id], map: "user_id")
}

model coupon_product {
  id                 Int                 @id @default(autoincrement())
  coupon_id          Int?
  product_id         Int?
  category_id        Int?
  created_time       DateTime?           @default(now()) @db.DateTime(0)
  updated_time       DateTime?           @default(now()) @db.DateTime(0)
  deleted_time       DateTime?           @db.DateTime(0)
  dr                 Int?                @default(0) @db.TinyInt
  coupon             coupon?             @relation(fields: [coupon_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "coupon_product_ibfk_1")
  product            product?            @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "coupon_product_ibfk_2")
  product_categories product_categories? @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "coupon_product_ibfk_3")

  @@index([category_id], map: "category_id")
  @@index([coupon_id], map: "coupon_id")
  @@index([product_id], map: "product_id")
}

model coupon_record {
  id              Int       @id @default(autoincrement())
  store_id        Int?      @default(0)
  order_id        Int?      @default(0) @db.UnsignedInt
  user_id         Int?      @default(0)
  coupon_id       Int?      @default(0)
  discount_amount Decimal?  @default(0.00) @db.Decimal(10, 2)
  created_time    DateTime? @default(now()) @db.DateTime(0)
  member          member?   @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "coupon_record_ibfk_1")
  coupon          coupon?   @relation(fields: [coupon_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "coupon_record_ibfk_2")
  order           order?    @relation(fields: [order_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "coupon_record_ibfk_3")

  @@index([coupon_id], map: "coupon_id")
  @@index([order_id], map: "order_id")
  @@index([user_id], map: "user_id")
}

model credential {
  id                Int              @id @db.UnsignedInt
  cred_type_id      Int?             @db.UnsignedInt
  cred_no           String?          @db.VarChar(255)
  comtent           String?          @db.Text
  is_default        Int?             @db.UnsignedTinyInt
  is_system_default Int?             @db.UnsignedTinyInt
  website_id        Int?             @db.UnsignedInt
  shop_id           Int?             @db.UnsignedInt
  dr                Int?             @db.UnsignedTinyInt
  created_at        DateTime         @default(now()) @db.Timestamp(0)
  updated_at        DateTime         @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?        @db.Timestamp(0)
  credential_type   credential_type? @relation(fields: [cred_type_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "credential_ibfk_1")

  @@index([cred_type_id], map: "cred_type_id")
}

model credential_type {
  id         Int          @id @default(autoincrement()) @db.UnsignedInt
  name       String?      @db.VarChar(255)
  dr         Int?         @db.UnsignedTinyInt
  created_at DateTime     @default(now()) @db.Timestamp(0)
  updated_at DateTime     @default(now()) @db.Timestamp(0)
  deleted_at DateTime?    @db.Timestamp(0)
  credential credential[]
}

model custom_template {
  id                     Int                      @id @default(autoincrement()) @db.UnsignedInt
  template_name          String?                  @db.VarChar(255)
  image_url              String?                  @db.VarChar(255)
  user_id                Int?                     @db.UnsignedInt
  type                   Int?                     @db.UnsignedInt
  dr                     Int?                     @db.UnsignedInt
  created_at             DateTime                 @default(now()) @db.Timestamp(0)
  updated_at             DateTime                 @default(now()) @db.Timestamp(0)
  deleted_at             DateTime?                @db.Timestamp(0)
  custom_template_fields custom_template_fields[]
}

model custom_template_fields {
  id              Int              @id @default(autoincrement()) @db.UnsignedInt
  template_id     Int?             @db.UnsignedInt
  shop_id         Int?             @db.UnsignedInt
  employee_id     Int?             @db.UnsignedInt
  tag             String?          @db.VarChar(255)
  name            String?          @db.VarChar(255)
  label           String?          @db.VarChar(255)
  required        Boolean?         @default(false)
  end_default     String?          @db.VarChar(255)
  end_type        Int?
  start_type      Int?
  start_default   String?          @db.VarChar(255)
  options         String?          @db.Text
  default_value   String?          @default("9") @db.VarChar(255)
  placeholder     String?          @default("6") @db.VarChar(255)
  type            Int?
  value           String?          @db.VarChar(255)
  dr              Int?             @db.UnsignedInt
  created_at      DateTime         @default(now()) @db.Timestamp(0)
  updated_at      DateTime         @default(now()) @db.Timestamp(0)
  deleted_at      DateTime?        @db.Timestamp(0)
  custom_template custom_template? @relation(fields: [template_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "custom_template_fields_ibfk_1")

  @@index([template_id], map: "template_id")
}

model delivery_template {
  id            Int       @id @default(autoincrement()) @db.UnsignedInt
  user_id       Int?      @db.UnsignedInt
  template_name String?   @db.VarChar(255)
  length        String?   @db.VarChar(255)
  width         String?   @db.VarChar(255)
  image         String?   @db.VarChar(255)
  content       String?   @db.Text
  is_default    Int?
  modify_time   Int?
  shop_id       Int?
  supplier_id   Int?
  website_id    Int?      @db.UnsignedInt
  created_at    DateTime  @default(now()) @db.Timestamp(0)
  updated_at    DateTime  @default(now()) @db.Timestamp(0)
  deleted_at    DateTime? @db.Timestamp(0)
}

model discount_activity {
  id               Int                @id @default(autoincrement())
  store_id         Int?
  name             String?            @default("") @db.VarChar(50)
  range            Int?               @default(0) @db.TinyInt
  status           Int?               @default(0) @db.TinyInt
  start_time       DateTime           @db.DateTime(0)
  end_time         DateTime           @db.DateTime(0)
  description      String?            @default("") @db.VarChar(255)
  priority         Int?               @default(0)
  product_type     Int?               @default(0) @db.TinyInt
  created_time     DateTime?          @default(now()) @db.DateTime(0)
  updated_time     DateTime?          @default(now()) @db.DateTime(0)
  deleted_time     DateTime?          @db.DateTime(0)
  dr               Int?               @default(0) @db.TinyInt
  store_info       store_info?        @relation(fields: [store_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "discount_activity_ibfk_1")
  discount_product discount_product[]
  discount_rule    discount_rule[]

  @@index([store_id], map: "store_id")
}

model discount_details {
  id               Int               @id @default(autoincrement())
  discount_id      Int?
  description      String            @db.VarChar(255)
  discount_value   Decimal           @db.Decimal(10, 2)
  round_decimal    Int               @default(0) @db.TinyInt
  created_at       DateTime          @default(now()) @db.DateTime(0)
  updated_at       DateTime          @default(now()) @db.DateTime(0)
  deleted_at       DateTime?         @db.DateTime(0)
  is_deleted       Int               @default(0) @db.TinyInt
  product_discount product_discount? @relation(fields: [discount_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "discount_details_ibfk_1")

  @@index([discount_id], map: "discount_id")
  @@index([is_deleted], map: "idx_is_deleted")
}

model discount_product {
  id                 Int                 @id @default(autoincrement())
  discount_id        Int?                @default(0)
  product_id         Int?                @default(0)
  category_id        Int?                @default(0)
  created_time       DateTime?           @default(now()) @db.DateTime(0)
  updated_time       DateTime?           @default(now()) @db.DateTime(0)
  deleted_time       DateTime?           @db.DateTime(0)
  dr                 Int?                @default(0) @db.TinyInt
  discount_activity  discount_activity?  @relation(fields: [discount_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "discount_product_ibfk_1")
  product_categories product_categories? @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "discount_product_ibfk_2")
  product            product?            @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "discount_product_ibfk_3")

  @@index([discount_id], map: "discount_product_ibfk_1")
  @@index([category_id], map: "discount_product_ibfk_2")
  @@index([product_id], map: "discount_product_ibfk_3")
}

model discount_rule {
  id                                                 Int                    @id @default(autoincrement())
  discount_activity                                  Int?
  rule                                               String                 @db.VarChar(255)
  rule_name                                          String                 @db.VarChar(50)
  threshold                                          Decimal                @db.Decimal(10, 2)
  created_time                                       DateTime               @default(now()) @db.DateTime(0)
  updated_time                                       DateTime?              @db.DateTime(0)
  deleted_time                                       DateTime?              @db.DateTime(0)
  dr                                                 Int                    @default(0) @db.TinyInt
  discount_activity_discount_activityTodiscount_rule discount_activity?     @relation(fields: [discount_activity], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "discount_rule_ibfk_1")
  discount_rule_detail                               discount_rule_detail[]

  @@index([discount_activity], map: "discount_activity")
  @@index([created_time], map: "idx_created_time")
  @@index([rule_name], map: "idx_rule_name")
  @@index([threshold], map: "idx_threshold")
}

model discount_rule_detail {
  id             Int           @id @default(autoincrement())
  rule_id        Int
  type           Int
  value          Decimal?      @db.Decimal(10, 2)
  coupon_id      Int?
  gift_id        Int?
  gift_coupon_id Int?
  created_time   DateTime?     @default(now()) @db.DateTime(0)
  updated_time   DateTime?     @default(now()) @db.DateTime(0)
  deleted_time   DateTime?     @db.DateTime(0)
  dr             Int           @default(0)
  discount_rule  discount_rule @relation(fields: [rule_id], references: [id], onUpdate: Restrict, map: "discount_rule_detail_ibfk_1")

  @@index([rule_id], map: "rule_id")
}

model dishes {
  id                  Int       @id @default(autoincrement())
  initial             String    @db.VarChar(10)
  name                String    @db.VarChar(255)
  number              String    @db.VarChar(50)
  market_price        Decimal   @db.Decimal(10, 2)
  selling_price       Decimal   @db.Decimal(10, 2)
  cost_price          Decimal   @db.Decimal(10, 2)
  group_type          Int?      @default(0) @db.TinyInt
  group_name          String?   @db.VarChar(20)
  group_img           String?   @db.VarChar(255)
  points              Int
  remark              String?   @db.Text
  status              Boolean
  staff_view_only     Boolean
  in_production_queue Boolean
  created_at          DateTime  @default(now()) @db.Timestamp(0)
  updated_at          DateTime  @default(now()) @db.Timestamp(0)
  deleted_at          DateTime? @db.Timestamp(0)
  dr                  Int       @default(0) @db.TinyInt
}

model distrbution {
  id                     Int                  @id @default(autoincrement())
  registration_time      DateTime?            @db.DateTime(0)
  distrbution_level_id   Int?                 @db.UnsignedInt
  agent_status           Boolean?             @default(false)
  captain_status         Boolean?             @default(false)
  channel_status         Boolean?             @default(false)
  commission_total       Decimal?             @default(0.00) @db.Decimal(10, 2)
  total                  Decimal?             @default(0.00) @db.Decimal(10, 2)
  shareholder_status     Boolean?             @default(false)
  shopkeeper_status      Boolean?             @default(false)
  status                 Int?                 @default(0)
  promotion_order_amount Decimal?             @default(0.00) @db.Decimal(10, 2)
  promotion_orders       Int?
  withdrawn_commission   Decimal?             @default(0.00) @db.Decimal(10, 2)
  dr                     Boolean?             @default(false)
  member_id              Int?
  parent_id              Int?
  created_at             DateTime?            @default(now()) @db.Timestamp(0)
  updated_at             DateTime?            @default(now()) @db.Timestamp(0)
  deleted_at             DateTime?            @db.Timestamp(0)
  member                 member?              @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "distrbution_ibfk_2")
  distrbution_level      distrbution_level?   @relation(fields: [distrbution_level_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "distrbution_ibfk_3")
  distrbution_change     distrbution_change[]
  distributor_bonus      distributor_bonus[]

  @@index([distrbution_level_id], map: "distrbution_level_id")
  @@index([member_id], map: "member_id")
}

model distrbution_change {
  id                                                                     Int                @id @default(autoincrement())
  distrbution_id                                                         Int
  previous_level                                                         Int?               @db.UnsignedInt
  new_level                                                              Int?               @db.UnsignedInt
  reason                                                                 String?            @db.VarChar(255)
  change_time                                                            DateTime?          @db.DateTime(0)
  created_at                                                             DateTime?          @default(now()) @db.DateTime(0)
  updated_at                                                             DateTime?          @default(now()) @db.Timestamp(0)
  deleted_at                                                             DateTime?          @db.Timestamp(0)
  distrbution                                                            distrbution        @relation(fields: [distrbution_id], references: [id], onUpdate: Restrict, map: "distrbution_change_ibfk_1")
  distrbution_level_distrbution_change_previous_levelTodistrbution_level distrbution_level? @relation("distrbution_change_previous_levelTodistrbution_level", fields: [previous_level], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "distrbution_change_ibfk_2")
  distrbution_level_distrbution_change_new_levelTodistrbution_level      distrbution_level? @relation("distrbution_change_new_levelTodistrbution_level", fields: [new_level], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "distrbution_change_ibfk_3")

  @@index([distrbution_id], map: "distrbution_id")
  @@index([new_level], map: "new_level")
  @@index([previous_level], map: "previous_level")
}

model distrbution_level {
  id                                                                      Int                   @id @default(autoincrement()) @db.UnsignedInt
  name                                                                    String                @db.VarChar(255)
  commission_type                                                         Int                   @default(0)
  commission1                                                             Decimal?              @db.Decimal(10, 2)
  commission2                                                             Decimal?              @db.Decimal(10, 2)
  commission11                                                            Decimal?              @db.Decimal(10, 2)
  commission22                                                            Decimal?              @db.Decimal(10, 2)
  commission33                                                            Decimal?              @db.Decimal(10, 2)
  commission3                                                             Decimal?              @db.Decimal(10, 2)
  buyagain                                                                Int                   @default(0)
  buyagain_commission1                                                    Decimal?              @db.Decimal(10, 2)
  buyagain_commission2                                                    Decimal?              @db.Decimal(10, 2)
  buyagain_commission11                                                   Decimal?              @db.Decimal(10, 2)
  buyagain_commission22                                                   Decimal?              @db.Decimal(10, 2)
  recommend1                                                              Decimal?              @db.Decimal(10, 2)
  recommend2                                                              Decimal?              @db.Decimal(10, 2)
  recommend_point1                                                        Decimal?              @db.Decimal(10, 2)
  recommend_point2                                                        Decimal?              @db.Decimal(10, 2)
  required_type                                                           Int                   @default(0)
  number1                                                                 Int?                  @default(0)
  number2                                                                 Int?                  @default(0)
  number3                                                                 Int?                  @default(0)
  number4                                                                 Int?                  @default(0)
  number5                                                                 Int?                  @default(0)
  offline_number                                                          Int?                  @default(0)
  upgrade_level_id                                                        Int?                  @db.UnsignedInt
  level_number                                                            Int?                  @default(0)
  order_money                                                             Decimal?              @db.Decimal(10, 2)
  order_number                                                            Int?                  @default(0)
  selforder_money                                                         Decimal?              @db.Decimal(10, 2)
  selforder_number                                                        Int?                  @default(0)
  my_selforder_money                                                      Decimal?              @db.Decimal(10, 2)
  my_selforder_number                                                     Int?                  @default(0)
  downgrade_condition                                                     Int?                  @default(0)
  downgrade_type                                                          Int?                  @default(0)
  upgrade_type                                                            Int?                  @default(0)
  recommend_point3                                                        Decimal?              @db.Decimal(10, 2)
  recommend3                                                              Decimal?              @db.Decimal(10, 2)
  buyagain_commission33                                                   Decimal?              @db.Decimal(10, 2)
  buyagain_commission3                                                    Decimal?              @db.Decimal(10, 2)
  buyagain_type                                                           Int?                  @default(0)
  team_number_day                                                         Int?                  @default(0)
  team_number                                                             Int?                  @default(0)
  team_money_day                                                          Int?                  @default(0)
  team_money                                                              Decimal?              @db.Decimal(10, 2)
  self_money                                                              Decimal?              @db.Decimal(10, 2)
  self_money_day                                                          Int?                  @default(0)
  pre_status                                                              Int?                  @default(0)
  flag                                                                    String?               @db.VarChar(255)
  downgrade_flag                                                          String?               @db.VarChar(255)
  weight                                                                  Int?                  @default(0)
  created_at                                                              DateTime?             @default(now()) @db.Timestamp(0)
  updated_at                                                              DateTime?             @default(now()) @db.Timestamp(0)
  deleted_at                                                              DateTime?             @db.Timestamp(0)
  dr                                                                      Boolean?              @default(false)
  distrbution_level                                                       distrbution_level?    @relation("distrbution_levelTodistrbution_level", fields: [upgrade_level_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "distrbution_level_ibfk_1")
  distrbution                                                             distrbution[]
  distrbution_change_distrbution_change_previous_levelTodistrbution_level distrbution_change[]  @relation("distrbution_change_previous_levelTodistrbution_level")
  distrbution_change_distrbution_change_new_levelTodistrbution_level      distrbution_change[]  @relation("distrbution_change_new_levelTodistrbution_level")
  other_distrbution_level                                                 distrbution_level[]   @relation("distrbution_levelTodistrbution_level")
  distrbution_product                                                     distrbution_product[]

  @@index([name], map: "name")
  @@index([upgrade_level_id], map: "upgrade_level_id")
}

model distrbution_product {
  id                   Int                @id @default(autoincrement())
  distrbution_level_id Int?               @db.UnsignedInt
  type                 Int?
  product_id           Int?               @default(0)
  created_time         DateTime?          @default(now()) @db.DateTime(0)
  updated_time         DateTime?          @default(now()) @db.DateTime(0)
  deleted_time         DateTime?          @db.DateTime(0)
  dr                   Boolean?           @default(false)
  product              product?           @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "distrbution_product_ibfk_2")
  distrbution_level    distrbution_level? @relation(fields: [distrbution_level_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "distrbution_product_ibfk_3")

  @@index([distrbution_level_id], map: "distrbution_level_id")
  @@index([product_id], map: "product_id")
}

model distributor_bonus {
  ID              Int          @id @default(autoincrement())
  type            Int?
  commission      Decimal?     @db.Decimal(10, 2)
  porint          Decimal?     @db.Decimal(10, 2)
  distribution_id Int?
  order_id        Int?         @db.UnsignedInt
  create_time     DateTime?    @db.DateTime(0)
  distrbution     distrbution? @relation(fields: [distribution_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "distributor_bonus_ibfk_1")
  order           order?       @relation(fields: [order_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "distributor_bonus_ibfk_2")

  @@index([distribution_id], map: "distribution_id")
  @@index([order_id], map: "order_id")
}

model dividend_details {
  id                      Int               @id @default(autoincrement())
  dividend_id             Int?
  detail_type             Int               @db.TinyInt
  enable_level_commission Int               @default(0) @db.TinyInt
  commission_type         Int               @db.TinyInt
  description             String            @db.VarChar(255)
  amount_or_percentage    Decimal           @db.Decimal(10, 2)
  created_at              DateTime          @default(now()) @db.DateTime(0)
  updated_at              DateTime          @default(now()) @db.DateTime(0)
  deleted_at              DateTime?         @db.DateTime(0)
  is_deleted              Int               @db.TinyInt
  product_dividend        product_dividend? @relation(fields: [dividend_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "dividend_details_ibfk_1")

  @@index([dividend_id], map: "dividend_id")
  @@index([detail_type], map: "idx_detail_type")
  @@index([is_deleted], map: "idx_is_deleted")
}

model employee {
  id                                 Int                    @id @default(autoincrement())
  type                               Int?                   @db.TinyInt
  name                               String                 @db.VarChar(255)
  avatar                             String?                @db.VarChar(255)
  shop_id                            BigInt?
  position_id                        Int
  phone                              String                 @db.VarChar(20)
  pwd                                String                 @db.VarChar(255)
  price                              Decimal?               @db.Decimal(10, 2)
  cashier_commission_enabled         Boolean?
  cashier_commission_type            Boolean
  cashier_commission_percentage      Decimal?               @db.Decimal(5, 2)
  cashier_commission_amount          Decimal?               @db.Decimal(10, 2)
  verification_commission_type       Boolean?
  verification_commission_percentage Decimal?               @db.Decimal(5, 2)
  verification_commission_amount     Decimal?               @db.Decimal(10, 2)
  status                             Boolean?
  created_at                         DateTime?              @default(now()) @db.Timestamp(0)
  updated_at                         DateTime?              @default(now()) @db.Timestamp(0)
  deleted_at                         DateTime?              @default(now()) @db.Timestamp(0)
  dr                                 Boolean?               @default(false)
  positions                          positions              @relation(fields: [position_id], references: [id], onUpdate: Restrict, map: "employee_ibfk_2")
  shop                               shop?                  @relation(fields: [shop_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "employee_ibfk_3")
  employee_shop                      employee_shop[]
  gift_coupon_record                 gift_coupon_record[]
  shop_employee_middle               shop_employee_middle[]
  withdrawal                         withdrawal[]

  @@index([position_id], map: "position_id")
  @@index([shop_id], map: "shop_id")
}

model employee_shop {
  id          Int         @id @default(autoincrement())
  employee_id Int?
  shop_id     Int?
  created_at  DateTime?   @db.Timestamp(0)
  dr          Boolean?    @default(false)
  employee    employee?   @relation(fields: [employee_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "employee_shop_ibfk_1")
  store_info  store_info? @relation(fields: [shop_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "employee_shop_ibfk_2")

  @@index([employee_id], map: "employee_id")
  @@index([shop_id], map: "shop_id")
}

model expenditure {
  id                      Int       @id @default(autoincrement()) @db.UnsignedInt
  external_transaction_id String    @db.VarChar(255)
  withdrawal_type         Int       @db.TinyInt
  expenditure_type        Int       @db.TinyInt
  expenditure_platform    Int       @db.TinyInt
  payment_method          Int       @db.TinyInt
  withdrawal_amount       Decimal   @default(0.00) @db.Decimal(10, 2)
  fee                     Decimal   @default(0.00) @db.Decimal(10, 2)
  actual_amount           Decimal   @default(0.00) @db.Decimal(10, 2)
  created_at              DateTime? @default(now()) @db.Timestamp(0)
  dr                      Boolean?
}

model express_template {
  id                   Int             @id @default(autoincrement()) @db.UnsignedInt
  co_id                Int?
  express_company_name String?         @db.VarChar(255)
  length               String?         @db.VarChar(255)
  width                String?         @db.VarChar(255)
  image                String?         @db.VarChar(255)
  content              String?         @db.Text
  is_default           Int?
  shop_id              Int?
  supplier_id          Int?
  website_id           Int?            @db.UnsignedInt
  dr                   Int?            @db.UnsignedTinyInt
  created_at           DateTime        @default(now()) @db.Timestamp(0)
  updated_at           DateTime        @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?       @db.Timestamp(0)
  form_template        form_template[]
}

model festival_activity {
  id                     Int                      @id @default(autoincrement())
  store_id               Int?
  status                 Int?
  activity_name          String                   @db.VarChar(50)
  start_time             DateTime                 @db.DateTime(0)
  end_time               DateTime                 @db.DateTime(0)
  member_tag_id          Int?
  push_content           String?                  @db.VarChar(255)
  priority               Int                      @default(0) @db.TinyInt
  prize_type             Int                      @db.TinyInt
  prize_name             String?                  @db.VarChar(50)
  balance                Decimal?                 @db.Decimal(10, 2)
  points                 Int?
  product_id             Int?
  coupon_id              Int?
  gift_card_id           Int?
  prize_image            String?                  @db.VarChar(255)
  prize_expired_time     DateTime                 @db.DateTime(0)
  no_prize_message       String?                  @db.VarChar(255)
  create_time            DateTime?                @db.DateTime(0)
  updated_time           DateTime                 @default(now()) @db.DateTime(0)
  deleted_time           DateTime?                @db.DateTime(0)
  dr                     Int                      @default(0) @db.TinyInt
  product                product?                 @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "festival_activity_ibfk_2")
  coupon                 coupon?                  @relation(fields: [coupon_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "festival_activity_ibfk_3")
  gift_coupon            gift_coupon?             @relation(fields: [gift_card_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "festival_activity_ibfk_4")
  store_info             store_info?              @relation(fields: [store_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "festival_activity_ibfk_5")
  member_festival_record member_festival_record[]

  @@index([coupon_id], map: "coupon_id")
  @@index([gift_card_id], map: "gift_card_id")
  @@index([member_tag_id], map: "member_tag_id")
  @@index([product_id], map: "product_id")
  @@index([store_id], map: "store_id")
}

model follow_activity {
  id                     Int                      @id @default(autoincrement())
  store_id               Int?
  status                 Int?
  activity_name          String                   @db.VarChar(50)
  start_time             DateTime                 @db.DateTime(0)
  end_time               DateTime                 @db.DateTime(0)
  follow_type            Int                      @default(0) @db.TinyInt
  push_content           String?                  @db.VarChar(255)
  priority               Int                      @default(0)
  prize_type             Int                      @db.TinyInt
  prize_name             String?                  @db.VarChar(50)
  balance                Decimal                  @default(0.00) @db.Decimal(10, 2)
  integral               Int                      @default(0)
  goods_id               Int?
  coupon_id              Int?
  giftcard_id            Int?
  prize_image            String?                  @db.VarChar(255)
  prize_expire_time      DateTime                 @db.DateTime(0)
  no_prize_tip           String?                  @db.VarChar(255)
  created_time           DateTime                 @default(now()) @db.DateTime(0)
  updated_time           DateTime                 @default(now()) @db.DateTime(0)
  deleted_time           DateTime?                @db.DateTime(0)
  dr                     Int                      @default(0) @db.TinyInt
  product                product?                 @relation(fields: [goods_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "follow_activity_ibfk_1")
  coupon                 coupon?                  @relation(fields: [coupon_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "follow_activity_ibfk_2")
  gift_coupon            gift_coupon?             @relation(fields: [giftcard_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "follow_activity_ibfk_3")
  store_info             store_info?              @relation(fields: [store_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "follow_activity_ibfk_4")
  follow_activity_record follow_activity_record[]

  @@index([coupon_id], map: "coupon_id")
  @@index([giftcard_id], map: "giftcard_id")
  @@index([goods_id], map: "goods_id")
  @@index([store_id], map: "store_id")
}

model follow_activity_record {
  id              Int             @id @default(autoincrement())
  user_id         Int
  activity_id     Int
  prize_level     String?         @db.VarChar(50)
  prize_name      String?         @db.VarChar(50)
  status          Int             @default(0) @db.TinyInt
  created_time    DateTime        @default(now()) @db.DateTime(0)
  member          member          @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "follow_activity_record_ibfk_1")
  follow_activity follow_activity @relation(fields: [activity_id], references: [id], onUpdate: Restrict, map: "follow_activity_record_ibfk_2")

  @@index([activity_id], map: "activity_id")
  @@index([user_id], map: "user_id")
}

model form_template {
  id                          Int               @id @default(autoincrement()) @db.UnsignedInt
  name                        String?           @db.VarChar(255)
  express_company_id          Int?              @db.UnsignedInt
  print_style_id              Int?              @db.UnsignedInt
  outlet_name                 String?           @db.VarChar(255)
  outlet_code                 String?           @db.VarChar(255)
  payment_method              Int?              @db.UnsignedInt
  customer_id                 Int?              @db.UnsignedInt
  interface_password          String?           @db.VarChar(255)
  monthly_code                String?           @db.VarChar(255)
  notify_courier              Int?              @db.UnsignedTinyInt
  auto_modify_delivery_status Int?              @db.UnsignedTinyInt
  is_default                  Int?              @db.UnsignedTinyInt
  dr                          Int?              @db.UnsignedTinyInt
  created_at                  DateTime          @default(now()) @db.Timestamp(0)
  updated_at                  DateTime          @default(now()) @db.Timestamp(0)
  deleted_at                  DateTime?         @db.Timestamp(0)
  express_template            express_template? @relation(fields: [express_company_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "form_template_ibfk_1")
  print_style                 print_style?      @relation(fields: [print_style_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "form_template_ibfk_2")

  @@index([express_company_id], map: "express_company_id")
  @@index([print_style_id], map: "print_style_id")
}

model generation_order {
  id                           Int                           @id @default(autoincrement()) @db.UnsignedInt
  member_id                    Int?                          @db.UnsignedInt
  shipping_method              Int?                          @db.TinyInt
  recipient_id                 Int?                          @db.UnsignedInt
  selecting_id                 Int?                          @db.UnsignedInt
  shipping_cost                Decimal?                      @db.Decimal(10, 2)
  created_at                   DateTime                      @default(now()) @db.Timestamp(0)
  updated_at                   DateTime                      @default(now()) @db.Timestamp(0)
  deleted_at                   DateTime?                     @db.Timestamp(0)
  generation_selecting_product generation_selecting_product? @relation(fields: [selecting_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "generation_order_ibfk_1")

  @@index([selecting_id], map: "selecting_id")
}

model generation_selecting_product {
  id               Int                @id @default(autoincrement()) @db.UnsignedInt
  product_id       Int?
  amount           Decimal?           @db.Decimal(10, 2)
  price            Decimal?           @db.Decimal(10, 2)
  created_at       DateTime           @default(now()) @db.Timestamp(0)
  updated_at       DateTime           @default(now()) @db.Timestamp(0)
  deleted_at       DateTime?          @db.Timestamp(0)
  generation_order generation_order[]
}

model gift {
  id            Int           @id @default(autoincrement())
  name          String?       @db.VarChar(255)
  store_info_id Int?
  product_id    Int?
  price         Decimal?      @db.Decimal(10, 2)
  stock         Int
  gift_image1   String?       @db.VarChar(100)
  gift_image2   String?       @db.VarChar(100)
  gift_image3   String?       @db.VarChar(100)
  gift_image4   String?       @db.VarChar(100)
  gift_image5   String?       @db.VarChar(100)
  gift_detail   String?       @db.Text
  created_time  DateTime      @default(now()) @db.DateTime(0)
  updated_time  DateTime?     @db.DateTime(0)
  deleted_time  DateTime?     @db.DateTime(0)
  dr            Int           @default(0) @db.TinyInt
  product       product?      @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "gift_ibfk_1")
  store_info    store_info?   @relation(fields: [store_info_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "gift_ibfk_2")
  gift_coupon   gift_coupon[]
  gift_record   gift_record[]
  member_gift   member_gift[]

  @@index([product_id], map: "product_id")
  @@index([store_info_id], map: "store_info_id")
}

model gift_coupon {
  id                            Int                             @id @default(autoincrement())
  name                          String                          @db.VarChar(50)
  status                        Int?
  store_id                      Int?
  gift_id                       Int
  quantity                      Int?
  limit_per_person              Int?
  receive_start_time            DateTime?                       @db.DateTime(0)
  receive_end_time              DateTime?                       @db.DateTime(0)
  effect_start_time             DateTime?                       @db.DateTime(0)
  effect_end_time               DateTime?                       @db.DateTime(0)
  description                   String?                         @db.Text
  mobile_link                   String?                         @db.VarChar(255)
  miniapp_link                  String?                         @db.VarChar(255)
  created_time                  DateTime?                       @default(now()) @db.DateTime(0)
  updated_time                  DateTime?                       @default(now()) @db.DateTime(0)
  deleted_time                  DateTime?                       @db.DateTime(0)
  dr                            Int                             @default(0)
  gift                          gift                            @relation(fields: [gift_id], references: [id], onUpdate: Restrict, map: "gift_coupon_ibfk_1")
  store_info                    store_info?                     @relation(fields: [store_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "gift_coupon_ibfk_2")
  coupon_package_coupons        coupon_package_coupons[]
  festival_activity             festival_activity[]
  follow_activity               follow_activity[]
  gift_coupon_record            gift_coupon_record[]
  member_gift                   member_gift[]
  package_coupons               package_coupons[]
  payment_activity              payment_activity[]
  recharge_card_package_coupons recharge_card_package_coupons[]
  task                          task[]

  @@index([gift_id], map: "gift_coupon_ibfk_1")
  @@index([store_id], map: "store_id")
}

model gift_coupon_record {
  id           Int         @id @default(autoincrement())
  store_id     BigInt
  staff_id     Int
  member_id    Int
  coupon_id    Int
  created_time DateTime?   @default(now()) @db.DateTime(0)
  member       member      @relation(fields: [member_id], references: [id], onUpdate: Restrict, map: "gift_coupon_record_ibfk_2")
  gift_coupon  gift_coupon @relation(fields: [coupon_id], references: [id], onUpdate: Restrict, map: "gift_coupon_record_ibfk_3")
  shop         shop        @relation(fields: [store_id], references: [id], onUpdate: Restrict, map: "gift_coupon_record_ibfk_5")
  employee     employee    @relation(fields: [staff_id], references: [id], onUpdate: Restrict, map: "gift_coupon_record_ibfk_6")

  @@index([coupon_id], map: "idx_coupon_id")
  @@index([member_id], map: "idx_member_id")
  @@index([staff_id], map: "idx_staff_id")
  @@index([store_id], map: "idx_store_id")
}

model gift_coupon_send {
  id           Int       @id @default(autoincrement())
  send_id      Int
  type         Int       @db.TinyInt
  coupon_id    Int?
  gift_id      Int?
  created_time DateTime  @default(now()) @db.DateTime(0)
  updated_time DateTime? @db.DateTime(0)
  dr           Int       @default(0) @db.TinyInt
}

model gift_member {
  id           Int         @id @default(autoincrement())
  gift_id      Int
  member_id    Int
  created_time DateTime    @default(now()) @db.DateTime(0)
  gift_record  gift_record @relation(fields: [gift_id], references: [id], onDelete: Cascade, map: "fk_gift_id")
  member       member      @relation(fields: [member_id], references: [id], onDelete: Cascade, map: "fk_member_id")

  @@index([gift_id], map: "gift_id")
  @@index([member_id], map: "member_id")
}

model gift_package_combination {
  id                               Int                                @id @default(autoincrement())
  store_id                         Int?
  name                             String                             @db.VarChar(50)
  start_time                       DateTime                           @db.DateTime(0)
  end_time                         DateTime                           @db.DateTime(0)
  description                      String?                            @db.Text
  store_num                        Int?
  price                            Decimal?                           @db.Decimal(10, 2)
  market_price                     Decimal?                           @db.Decimal(10, 2)
  platform_commission_amount       Decimal                            @db.Decimal(10, 2)
  sales_commission                 Decimal                            @db.Decimal(10, 2)
  owner_commission_amount          Decimal                            @db.Decimal(10, 2)
  created_time                     DateTime?                          @default(now()) @db.DateTime(0)
  updated_time                     DateTime?                          @default(now()) @db.DateTime(0)
  deleted_time                     DateTime?                          @db.DateTime(0)
  dr                               Int                                @default(0)
  mobile_link                      String?                            @db.VarChar(255)
  pc_link                          String?                            @db.VarChar(255)
  mini_program_link                String?                            @db.VarChar(255)
  store_info                       store_info?                        @relation(fields: [store_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "gift_package_combination_ibfk_1")
  gift_package_combination_coupons gift_package_combination_coupons[]
  order_package                    order_package[]

  @@index([store_id], map: "store_id")
}

model gift_package_combination_coupons {
  id                          Int                       @id @default(autoincrement())
  gift_package_combination_id Int?
  coupon_package_id           Int?
  created_time                DateTime?                 @default(now()) @db.DateTime(0)
  updated_time                DateTime?                 @default(now()) @db.DateTime(0)
  deleted_time                DateTime?                 @db.DateTime(0)
  dr                          Int                       @default(0)
  coupon_package_list         coupon_package_list?      @relation(fields: [coupon_package_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "gift_package_combination_coupons_ibfk_1")
  gift_package_combination    gift_package_combination? @relation(fields: [gift_package_combination_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "gift_package_combination_coupons_ibfk_5")

  @@index([coupon_package_id], map: "coupon_package_id")
  @@index([gift_package_combination_id], map: "gift_package_combination_id")
}

model gift_record {
  id           Int           @id @default(autoincrement())
  gift_id      Int?          @default(0)
  order_id     Int?          @db.UnsignedInt
  gift_type    Int?          @default(0) @db.TinyInt
  user_id      Int?          @default(0)
  count        Int?          @default(0)
  gift_time    DateTime?     @db.DateTime(0)
  created_time DateTime?     @default(now()) @db.DateTime(0)
  updated_time DateTime?     @default(now()) @db.DateTime(0)
  deleted_time DateTime?     @db.DateTime(0)
  dr           Int?          @default(0) @db.TinyInt
  gift         gift?         @relation(fields: [gift_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "gift_record_ibfk_1")
  order        order?        @relation(fields: [order_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "gift_record_ibfk_2")
  member       member?       @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "gift_record_ibfk_3")
  gift_member  gift_member[]

  @@index([gift_id], map: "gift_id")
  @@index([order_id], map: "order_id")
  @@index([user_id], map: "user_id")
}

model gift_send {
  id               Int                @id @default(autoincrement())
  redeem_code      String             @db.VarChar(50)
  send_method      Int                @db.TinyInt
  created_time     DateTime           @default(now()) @db.DateTime(0)
  updated_time     DateTime?          @db.DateTime(0)
  deleted_time     DateTime?          @db.DateTime(0)
  dr               Int                @default(0) @db.TinyInt
  gift_send_method gift_send_method[]
}

model gift_send_log {
  id             Int       @id @default(autoincrement())
  send_coupon_id Int
  send_method_id Int
  send_count     Int
  created_time   DateTime  @default(now()) @db.DateTime(0)
  updated_time   DateTime? @db.DateTime(0)
  deleted_time   DateTime? @db.DateTime(0)
  dr             Int       @default(0) @db.TinyInt

  @@index([created_time], map: "idx_created_time")
  @@index([send_coupon_id], map: "idx_send_coupon_id")
  @@index([send_method_id], map: "idx_send_method_id")
}

model gift_send_method {
  id                Int           @id @default(autoincrement())
  gift_send_id      Int?
  level_id          Int?
  tag_id            Int?
  distributor_level Int?
  member_id         Int?
  send_all_members  Int?          @db.TinyInt
  created_time      DateTime      @default(now()) @db.DateTime(0)
  updated_time      DateTime?     @db.DateTime(0)
  deleted_time      DateTime?     @db.DateTime(0)
  dr                Int           @default(0) @db.TinyInt
  member_level      member_level? @relation(fields: [level_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "gift_send_method_ibfk_1")
  member_tag        member_tag?   @relation(fields: [tag_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "gift_send_method_ibfk_2")
  gift_send         gift_send?    @relation(fields: [gift_send_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "gift_send_method_ibfk_3")

  @@index([gift_send_id], map: "gift_send_id")
  @@index([level_id], map: "level_id")
  @@index([tag_id], map: "tag_id")
}

model give_recol {
  id          Int       @id @default(autoincrement())
  store_id    Int?
  redeem_code String?   @db.VarChar(255)
  give_coupon String?   @db.VarChar(255)
  give_type   Int?      @db.TinyInt
  give_member String?   @db.Text
  give_num    Int?
  create_at   DateTime? @db.DateTime(0)
}

model global {
  id                Int             @id @default(autoincrement()) @db.UnsignedInt
  member_id         Int?
  global_level_id   Int?            @db.UnsignedInt
  type              Int?            @db.TinyInt
  store_id          Int?
  accumulated_bonus Decimal?        @default(0.00) @db.Decimal(10, 2)
  issued_bonus      Decimal?        @default(0.00) @db.Decimal(10, 2)
  no_bonus          Decimal?        @default(0.00) @db.Decimal(10, 2)
  status            Int?            @default(0) @db.TinyInt
  dr                Int?            @default(0) @db.UnsignedTinyInt
  created_at        DateTime?       @default(now()) @db.Timestamp(0)
  updated_at        DateTime?       @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?       @db.Timestamp(0)
  global_level      global_level?   @relation(fields: [global_level_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "global_ibfk_1")
  member            member?         @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "global_ibfk_2")
  store_info        store_info?     @relation(fields: [store_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "global_ibfk_3")
  global_bonus      global_bonus[]
  global_change     global_change[]

  @@index([global_level_id], map: "global_level_id")
  @@index([member_id], map: "member_id")
  @@index([store_id], map: "store_id")
}

model global_bonus {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  order_id    Int?      @db.UnsignedInt
  global_id   Int?      @db.UnsignedInt
  order_price Decimal?  @db.Decimal(10, 2)
  bonus       Decimal?  @db.Decimal(10, 2)
  type        Int?      @db.UnsignedTinyInt
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  global      global?   @relation(fields: [global_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "global_bonus_ibfk_1")
  order       order?    @relation(fields: [order_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "global_bonus_ibfk_2")

  @@index([global_id], map: "global_id")
  @@index([order_id], map: "order_id")
}

model global_change {
  id                                                      Int           @id @default(autoincrement()) @db.UnsignedInt
  global_id                                               Int           @db.UnsignedInt
  previous_level                                          Int?          @db.UnsignedInt
  new_level                                               Int?          @db.UnsignedInt
  reason                                                  String?       @db.VarChar(255)
  change_time                                             DateTime?     @db.DateTime(0)
  created_at                                              DateTime?     @default(now()) @db.DateTime(0)
  updated_at                                              DateTime?     @default(now()) @db.Timestamp(0)
  deleted_at                                              DateTime?     @db.Timestamp(0)
  global                                                  global        @relation(fields: [global_id], references: [id], onUpdate: Restrict, map: "global_change_ibfk_1")
  global_level_global_change_previous_levelToglobal_level global_level? @relation("global_change_previous_levelToglobal_level", fields: [previous_level], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "global_change_ibfk_2")
  global_level_global_change_new_levelToglobal_level      global_level? @relation("global_change_new_levelToglobal_level", fields: [new_level], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "global_change_ibfk_3")

  @@index([global_id], map: "global_id")
  @@index([new_level], map: "new_level")
  @@index([previous_level], map: "previous_level")
}

model global_level {
  id                                                       Int                    @id @default(autoincrement()) @db.UnsignedInt
  name                                                     String                 @db.VarChar(50)
  type                                                     Int?                   @db.TinyInt
  bonus_percentage                                         Decimal                @db.Decimal(5, 2)
  auto_upgrade                                             Int                    @default(1) @db.TinyInt
  required_type                                            Int                    @db.UnsignedTinyInt
  number1                                                  Int?
  number2                                                  Int?
  number3                                                  Int?
  number4                                                  Int?
  number5                                                  Int?
  offline_number                                           Int?
  upgrade_level_id                                         Int?                   @db.UnsignedInt
  internalorder_money                                      Decimal?               @db.Decimal(10, 2)
  level_number                                             Int?
  order_money                                              Decimal?               @db.Decimal(10, 2)
  order_number                                             Int?
  selforder_money                                          Decimal?               @db.Decimal(10, 2)
  selforder_number                                         Int?
  my_selforder_money                                       Decimal?               @db.Decimal(10, 2)
  my_selforder_number                                      Int?
  upgrade_conditions                                       String?                @db.Text
  auto_downgrade                                           Int?                   @default(1) @db.TinyInt
  downgrade_condition                                      Int?                   @db.TinyInt
  team_number_day                                          Int?
  team_number                                              Int?
  team_money_day                                           Int?
  team_money                                               Decimal?               @db.Decimal(10, 2)
  self_money                                               Decimal?               @db.Decimal(10, 2)
  self_money_day                                           Int?
  internal_day                                             Int?
  internal_money                                           Decimal?               @db.Decimal(10, 2)
  downgrade_conditions                                     String?                @db.Text
  weight                                                   Int?
  pre_status                                               Int?
  flag                                                     String?                @db.VarChar(255)
  downgrade_flag                                           String?                @db.VarChar(255)
  dr                                                       Int?                   @default(0) @db.UnsignedTinyInt
  created_at                                               DateTime?              @default(now()) @db.Timestamp(0)
  updated_at                                               DateTime?              @default(now()) @db.Timestamp(0)
  deleted_at                                               DateTime?              @db.Timestamp(0)
  global_level                                             global_level?          @relation("global_levelToglobal_level", fields: [upgrade_level_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "global_level_ibfk_1")
  global                                                   global[]
  global_change_global_change_previous_levelToglobal_level global_change[]        @relation("global_change_previous_levelToglobal_level")
  global_change_global_change_new_levelToglobal_level      global_change[]        @relation("global_change_new_levelToglobal_level")
  other_global_level                                       global_level[]         @relation("global_levelToglobal_level")
  global_level_product                                     global_level_product[]

  @@index([upgrade_level_id], map: "upgrade_level_id")
}

model global_level_product {
  id              Int           @id @default(autoincrement())
  global_level_id Int?          @db.UnsignedInt
  type            Int?
  product_id      Int?          @default(0)
  created_time    DateTime?     @default(now()) @db.DateTime(0)
  updated_time    DateTime?     @default(now()) @db.DateTime(0)
  deleted_time    DateTime?     @db.DateTime(0)
  dr              Boolean?      @default(false)
  product         product?      @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "global_level_product_ibfk_2")
  global_level    global_level? @relation(fields: [global_level_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "global_level_product_ibfk_3")

  @@index([global_level_id], map: "global_level_id")
  @@index([product_id], map: "product_id")
}

model group_buying {
  id                           Int                            @id @default(autoincrement())
  activity_tag                 String                         @db.VarChar(50)
  activity_status              Int                            @db.TinyInt
  group_size                   Int
  grouped_num                  Int
  product_id                   Int
  shop_id                      Int?
  group_price                  Decimal?                       @db.Decimal(10, 2)
  purchase_limit               Int?
  fail_reward                  Int                            @db.TinyInt
  reward_method                Int                            @db.TinyInt
  reward_price                 Decimal?                       @db.Decimal(10, 2)
  threshold                    Int                            @db.TinyInt
  points_threshold             Int?
  virtual_group_times          Int
  time_limit                   Int?
  mobile_link                  String?                        @db.VarChar(200)
  pc_link                      String?                        @db.VarChar(200)
  mini_program_link            String?                        @db.VarChar(200)
  created_time                 DateTime                       @default(now()) @db.DateTime(0)
  updated_time                 DateTime?                      @db.DateTime(0)
  deleted_time                 DateTime?                      @db.DateTime(0)
  dr                           Int                            @default(0) @db.TinyInt
  product                      product                        @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "group_buying_ibfk_1")
  group_buying_record          group_buying_record[]
  product_price_group_purchase product_price_group_purchase[]

  @@index([product_id], map: "product_id")
}

model group_buying_member_record {
  id                  Int                 @id @default(autoincrement())
  user_id             Int
  group_id            Int
  order_id            Int                 @db.UnsignedInt
  group_price         Decimal             @db.Decimal(10, 2)
  purchase_num        Int
  actual_price        Decimal             @db.Decimal(10, 2)
  group_status        Int                 @db.TinyInt
  created_time        DateTime            @default(now()) @db.DateTime(0)
  remark              String?             @db.VarChar(200)
  order               order               @relation(fields: [order_id], references: [id], onUpdate: Restrict, map: "group_buying_member_record_ibfk_1")
  group_buying_record group_buying_record @relation(fields: [group_id], references: [id], onUpdate: Restrict, map: "group_buying_member_record_ibfk_2")
  member              member              @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "group_buying_member_record_ibfk_3")

  @@index([group_id], map: "group_id")
  @@index([order_id], map: "order_id")
  @@index([user_id], map: "user_id")
}

model group_buying_record {
  id                         Int                          @id @default(autoincrement())
  group_buying_id            Int?                         @default(0)
  group_purchase_list_id     Int?
  group_leader_id            Int?                         @default(0)
  participant_number         Int?                         @default(0)
  created_time               DateTime?                    @default(now()) @db.DateTime(0)
  status                     Int?                         @default(0) @db.TinyInt
  group_buying               group_buying?                @relation(fields: [group_buying_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "group_buying_record_ibfk_1")
  member                     member?                      @relation(fields: [group_leader_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "group_buying_record_ibfk_2")
  group_purchase_list        group_purchase_list?         @relation(fields: [group_purchase_list_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "group_buying_record_ibfk_3")
  group_buying_member_record group_buying_member_record[]

  @@index([group_buying_id], map: "group_buying_id")
  @@index([group_purchase_list_id], map: "group_buying_record_ibfk_3")
  @@index([group_leader_id], map: "group_leader_id")
}

model group_purchase_list {
  id                           Int                            @id @default(autoincrement())
  activity_label               String                         @db.VarChar(50)
  activity_status              Int                            @db.TinyInt
  shop_id                      Int?
  group_member_number          Int
  group_member_time            Int
  minimum_purchase             Decimal                        @db.Decimal(10, 2)
  product_id                   Int?
  mobile_link                  String?                        @db.VarChar(255)
  pc_link                      String?                        @db.VarChar(255)
  mini_program_link            String?                        @db.VarChar(255)
  created_time                 DateTime?                      @default(now()) @db.DateTime(0)
  updated_time                 DateTime?                      @default(now()) @db.DateTime(0)
  deleted_time                 DateTime?                      @db.DateTime(0)
  dr                           Int                            @default(0)
  group_price                  Decimal?                       @db.Decimal(10, 2)
  purchase_limit               Int?
  product                      product?                       @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "group_purchase_list_ibfk_1")
  group_buying_record          group_buying_record[]
  product_price_group_purchase product_price_group_purchase[]

  @@index([product_id], map: "product_id")
}

model growth_config {
  id                    Int       @id @default(autoincrement())
  order_growth_value    Int
  recharge_amount       Decimal?  @db.Decimal(10, 2)
  recharge_growth_value Int?
  recharge_status       Int?
  recharge_rule         String?   @db.VarChar(255)
  consume_amount        Decimal?  @db.Decimal(10, 2)
  consume_growth_value  Int?
  consume_status        Int?
  consume_rule          String?   @db.VarChar(255)
  create_at             DateTime  @db.DateTime(0)
  update_at             DateTime? @db.DateTime(0)
  deleted_at            DateTime? @db.DateTime(0)
  dr                    Boolean?  @default(false)
}

model interface_logs {
  id              Int       @id @default(autoincrement())
  timestamp       DateTime? @default(now()) @db.Timestamp(0)
  request_id      String?   @db.VarChar(255)
  endpoint        String?   @db.VarChar(255)
  method          String?   @db.VarChar(10)
  status_code     Int?
  response_time   Int?
  result          String?   @db.Text
  error_message   String?   @db.Text
  additional_info String?   @db.Text
}

model invoices {
  id                             Int       @id @default(autoincrement()) @db.UnsignedInt
  order_id                       Int?      @db.UnsignedInt
  invoice_type                   Int?
  invoice_title                  String?   @db.VarChar(255)
  title_name                     String?   @db.VarChar(255)
  taxpayer_no                    String?   @db.VarChar(255)
  company_name                   String?   @db.VarChar(255)
  taxpayer_identification_number String?   @db.VarChar(255)
  registered_address             String?   @db.VarChar(255)
  registered_phone               String?   @db.VarChar(255)
  bank_name                      String?   @db.VarChar(255)
  bank_account                   String?   @db.VarChar(255)
  invoice_content                String?   @db.Text
  is_upload                      Int?
  status                         Int?      @default(0)
  dr                             Int?      @db.UnsignedTinyInt
  created_at                     DateTime  @default(now()) @db.Timestamp(0)
  updated_at                     DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime? @db.Timestamp(0)
  order                          order?    @relation(fields: [order_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "invoices_ibfk_1")

  @@index([order_id], map: "order_id")
}

model kamilib {
  id               Int               @id @default(autoincrement())
  name             String            @db.VarChar(50)
  category_id      Int?
  remark           String?           @db.VarChar(255)
  instructions     String?           @db.Text
  create_time      DateTime          @db.DateTime(0)
  update_time      DateTime?         @db.DateTime(0)
  delete_time      DateTime?         @db.DateTime(0)
  dr               Boolean           @default(false)
  kamilib_category kamilib_category? @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "category_id_fk")
  kamilib_detail   kamilib_detail[]

  @@index([category_id], map: "category_id_fk")
}

model kamilib_category {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(50)
  create_time DateTime  @db.DateTime(0)
  update_time DateTime? @db.DateTime(0)
  delete_time DateTime? @db.DateTime(0)
  dr          Boolean   @default(false)
  kamilib     kamilib[]
}

model kamilib_data {
  id             Int            @id @default(autoincrement())
  detail_id      Int
  data           String         @db.VarChar(255)
  create_time    DateTime       @db.DateTime(0)
  update_time    DateTime?      @db.DateTime(0)
  delete_time    DateTime?      @db.DateTime(0)
  dr             Boolean        @default(false)
  kamilib_detail kamilib_detail @relation(fields: [detail_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "detail_id_fk")

  @@index([data], map: "data_unique_idx")
  @@index([detail_id], map: "detail_id_fk")
}

model kamilib_detail {
  id           Int            @id @default(autoincrement())
  kamilib_id   Int
  type         Boolean
  name         String         @db.VarChar(50)
  create_time  DateTime       @db.DateTime(0)
  update_time  DateTime?      @db.DateTime(0)
  delete_time  DateTime?      @db.DateTime(0)
  dr           Boolean        @default(false)
  kamilib      kamilib        @relation(fields: [kamilib_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "kamilib_id_fk")
  kamilib_data kamilib_data[]

  @@index([kamilib_id], map: "kamilib_id_fk")
}

model level {
  id                                           Int                  @id @default(autoincrement()) @db.UnsignedInt
  name                                         String               @db.VarChar(50)
  number                                       Int                  @db.UnsignedInt
  upgrade_type                                 Int                  @default(0) @db.UnsignedTinyInt
  upgrade_conditions                           String?              @db.VarChar(255)
  downgrade_type                               Int                  @default(0) @db.UnsignedTinyInt
  downgrade_conditions                         String?              @db.VarChar(255)
  created_at                                   DateTime?            @default(now()) @db.Timestamp(0)
  updated_at                                   DateTime?            @default(now()) @db.Timestamp(0)
  deleted_at                                   DateTime?            @db.Timestamp(0)
  upgrade_conditions_levelToupgrade_conditions upgrade_conditions[]
}

model level_package {
  id               Int               @id @default(autoincrement())
  total_weight     Int?
  sales_level_id   Int?
  level_name       String?           @db.VarChar(255)
  granularity      Int?
  validity_period  Int?
  price            Decimal?          @db.Decimal(10, 2)
  market_price     Decimal?          @db.Decimal(10, 2)
  created_time     DateTime?         @db.DateTime(0)
  modified_time    DateTime?         @db.DateTime(0)
  dr               Int?              @default(0)
  sales_level_list sales_level_list? @relation(fields: [sales_level_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "level_package_ibfk_1")

  @@index([sales_level_id], map: "sales_level_id")
}

model limited_time_activity {
  id                   Int                    @id @default(autoincrement())
  scope                Int                    @db.TinyInt
  shop_id              Int?
  name                 String                 @db.VarChar(50)
  status               Int                    @db.TinyInt
  start_time           DateTime               @db.DateTime(0)
  end_time             DateTime               @db.DateTime(0)
  description          String?                @db.VarChar(255)
  discount_type        Int                    @db.TinyInt
  uniform_discount     Int                    @db.TinyInt
  discount_rate        Decimal?               @db.Decimal(10, 2)
  decimal_truncation   Int                    @db.TinyInt
  participate_type     Int                    @db.TinyInt
  created_time         DateTime?              @default(now()) @db.DateTime(0)
  updated_time         DateTime?              @default(now()) @db.DateTime(0)
  deleted_time         DateTime?              @db.DateTime(0)
  dr                   Int                    @default(0)
  store_info           store_info?            @relation(fields: [shop_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "limited_time_activity_ibfk_1")
  limited_time_product limited_time_product[]

  @@index([shop_id], map: "shop_id")
}

model limited_time_product {
  id                    Int                    @id @default(autoincrement())
  discount_activity_id  Int?                   @default(0)
  product_id            Int?
  category_id           Int?
  created_time          DateTime?              @default(now()) @db.DateTime(0)
  discount_rate         Decimal?               @db.Decimal(10, 2)
  updated_time          DateTime?              @default(now()) @db.DateTime(0)
  deleted_time          DateTime?              @db.DateTime(0)
  dr                    Int?                   @default(0) @db.TinyInt
  limited_time_activity limited_time_activity? @relation(fields: [discount_activity_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "limited_time_product_ibfk_1")
  product               product?               @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "limited_time_product_ibfk_2")
  product_categories    product_categories?    @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "limited_time_product_ibfk_3")

  @@index([category_id], map: "category_id")
  @@index([discount_activity_id], map: "discount_activity_id")
  @@index([product_id], map: "product_id")
}

model live_room {
  id                   Int                @id @default(autoincrement()) @db.UnsignedInt
  live_type            Int?               @default(0)
  room_title           String?            @db.VarChar(255)
  start_time           DateTime?          @db.Date
  anchor_nickname      String?            @db.VarChar(255)
  anchor_wechat        String?            @db.VarChar(255)
  anchor_assistant     String?            @db.VarChar(255)
  official_included    Int?
  share_card_cover_url String?            @db.VarChar(255)
  background_wall_url  String?            @db.VarChar(255)
  live_card_cover_url  String?            @db.VarChar(255)
  room_functions       String?            @db.VarChar(255)
  website_id           Int?               @db.UnsignedInt
  dr                   Int?               @db.UnsignedTinyInt
  live_room_product_id Int?               @db.UnsignedInt
  created_at           DateTime           @default(now()) @db.Timestamp(0)
  updated_at           DateTime           @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?          @db.Timestamp(0)
  live_room_product    live_room_product? @relation(fields: [live_room_product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "live_room_ibfk_1")

  @@index([live_room_product_id], map: "live_room_product_id")
}

model live_room_product {
  id             Int         @id @default(autoincrement()) @db.UnsignedInt
  product_id     Int?        @db.UnsignedInt
  img_url        String?     @db.VarChar(255)
  name           String?     @db.VarChar(255)
  price_form     Int?
  discount_price Decimal?    @db.Decimal(10, 2)
  price_min      Decimal?    @db.Decimal(10, 2)
  price_max      Decimal?    @db.Decimal(10, 2)
  original_price Decimal?    @db.Decimal(10, 2)
  current_price  Decimal?    @db.Decimal(10, 2)
  website_id     Int?        @db.UnsignedInt
  dr             Int?        @db.UnsignedTinyInt
  created_at     DateTime    @default(now()) @db.Timestamp(0)
  updated_at     DateTime    @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?   @db.Timestamp(0)
  live_room      live_room[]
}

model loginrecords {
  ID          Int       @id @default(autoincrement())
  MemberID    Int
  LoginTime   DateTime? @default(now()) @db.Timestamp(0)
  LoginIP     String?   @db.VarChar(50)
  LoginDevice String?   @db.VarChar(100)
}

model logistics_template {
  id                        Int                         @id @default(autoincrement())
  name                      String                      @db.VarChar(255)
  express_company_id        Int?
  express_company_name      String?                     @db.VarChar(255)
  billing_method            Int
  is_active                 Boolean
  created_at                DateTime?                   @default(now()) @db.Timestamp(0)
  updated_at                DateTime?                   @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?                   @db.Timestamp(0)
  dr                        Boolean?                    @default(false)
  default_template          Int                         @default(0)
  mall_logistics_company    mall_logistics_company?     @relation(fields: [express_company_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "logistics_template_ibfk_1")
  logistics_template_detail logistics_template_detail[]
  product_details           product_details[]

  @@index([deleted_at], map: "idx_deleted_at")
  @@index([express_company_id], map: "idx_express_company_id")
}

model logistics_template_detail {
  id                 Int                @id @default(autoincrement())
  template_id        Int
  region             String             @db.VarChar(255)
  first_weight       Decimal            @db.Decimal(10, 2)
  first_fee          Decimal            @db.Decimal(10, 2)
  additional_weight  Decimal?           @db.Decimal(10, 2)
  additional_fee     Decimal?           @db.Decimal(10, 2)
  created_at         DateTime?          @default(now()) @db.Timestamp(0)
  updated_at         DateTime?          @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?          @db.Timestamp(0)
  dr                 Boolean?           @default(false)
  logistics_template logistics_template @relation(fields: [template_id], references: [id], onUpdate: Restrict, map: "logistics_template_detail_ibfk_1")

  @@index([deleted_at], map: "idx_deleted_at")
  @@index([template_id], map: "idx_template_id")
}

model lucky_activity {
  id                      Int                    @id @default(autoincrement()) @db.UnsignedInt
  type                    Int?                   @db.UnsignedInt
  name                    String?                @db.VarChar(255)
  status                  Int?                   @db.UnsignedInt
  start_time              DateTime?              @db.DateTime(0)
  end_time                DateTime?              @db.DateTime(0)
  limit_per_day           Int?                   @db.UnsignedInt
  limit_per_user          Int?                   @db.UnsignedInt
  points_per_play         Int?                   @db.UnsignedInt
  description             String?                @db.Text
  roulette_background_url String?                @db.VarChar(255)
  pointer_image_url       String?                @db.VarChar(255)
  mobile_link             String?                @db.VarChar(255)
  pc_link                 String?                @db.VarChar(255)
  store_id                Int?
  mini_program_link       String?                @db.VarChar(255)
  create_time             DateTime?              @db.DateTime(0)
  update_time             DateTime?              @db.DateTime(0)
  delete_time             DateTime?              @db.DateTime(0)
  dr                      Int?                   @default(0) @db.UnsignedInt
  store_info              store_info?            @relation(fields: [store_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "lucky_activity_ibfk_1")
  member_activity_list    member_activity_list[]
  prize                   prize[]

  @@index([store_id], map: "store_id")
}

model mall_config {
  id                                     Int       @id @default(autoincrement())
  is_mobile_mall_enabled                 Boolean   @default(false)
  logo                                   String?   @db.VarChar(255)
  register_ad_pic_url                    String?   @db.VarChar(255)
  register_ad_pic_link                   String?   @db.VarChar(255)
  login_ad_pic_url                       String?   @db.VarChar(255)
  login_ad_pic_link                      String?   @db.VarChar(255)
  mall_name                              String?   @db.VarChar(50)
  is_register_agreement_enabled          Boolean   @default(false)
  register_agreement_template_id         Int?
  is_purchase_agreement_enabled          Boolean   @default(false)
  purchase_agreement_template_id         Int?
  domain                                 String?   @db.VarChar(50)
  ssl_pem                                String?   @db.VarChar(255)
  ssl_key                                String?   @db.VarChar(255)
  is_express_delivery_enabled            Boolean   @default(false)
  store_pickup_config_id                 Int?
  auto_close_order_time                  Int       @default(30)
  auto_confirm_receive_time              Int       @default(7)
  auto_complete_time                     Int       @default(7)
  is_cancellation_enabled                Boolean   @default(false)
  cancellation_time_limit                Int       @default(7)
  is_auto_evaluation_enabled             Boolean   @default(false)
  auto_evaluation_time                   Int       @default(7)
  evaluation_content                     String?   @db.VarChar(500)
  is_good_evaluation_points_enabled      Boolean   @default(false)
  good_evaluation_points                 Int       @default(10)
  is_payment_password_enabled            Boolean   @default(false)
  password_type                          Boolean   @default(false)
  points_exchange_rate                   Decimal   @default(1.00) @db.Decimal(10, 2)
  is_shopping_points_enabled             Boolean   @default(false)
  points_calculation_method              Boolean   @default(false)
  shopping_points_ratio                  Decimal   @default(0.00) @db.Decimal(5, 2)
  shopping_points_node                   Boolean   @default(false)
  is_points_offset_enabled               Boolean   @default(false)
  offset_calculation_method              Boolean   @default(false)
  max_offset_ratio                       Decimal   @default(0.00) @db.Decimal(5, 2)
  is_balance_transfer_enabled            Boolean   @default(false)
  is_transfer_fee_enabled                Boolean   @default(false)
  transfer_fee_type                      Boolean   @default(false)
  transfer_fee_ratio                     Decimal   @default(0.00) @db.Decimal(5, 2)
  min_transfer_fee                       Decimal   @default(0.00) @db.Decimal(10, 2)
  is_points_exchange_enabled             Boolean   @default(false)
  is_exchange_fee_enabled                Boolean   @default(false)
  exchange_fee_type                      Boolean   @default(false)
  exchange_fee_ratio                     Decimal   @default(0.00) @db.Decimal(5, 2)
  min_exchange_fee                       Decimal   @default(0.00) @db.Decimal(10, 2)
  is_withdrawal_enabled                  Boolean   @default(false)
  min_withdrawal_amount                  Decimal   @default(0.00) @db.Decimal(10, 2)
  is_withdrawal_auto_review_enabled      Boolean   @default(false)
  is_withdrawal_auto_pay_enabled         Boolean   @default(false)
  is_withdrawal_alipay_enabled           Boolean   @default(false)
  is_withdrawal_wechat_enabled           Boolean   @default(false)
  is_withdrawal_bank_card_manual_enabled Boolean   @default(false)
  is_withdrawal_bank_card_auto_enabled   Boolean   @default(false)
  store_withdrawal_fee_rate              Decimal   @default(0.00) @db.Decimal(5, 2)
  member_withdrawal_fee_rate             Decimal   @default(0.00) @db.Decimal(5, 2)
  free_withdrawal_start_amount           Decimal   @default(0.00) @db.Decimal(10, 2)
  free_withdrawal_end_amount             Decimal   @default(0.00) @db.Decimal(10, 2)
  mall_payment_config_id                 Int?
  balance_text_style                     String?   @db.VarChar(20)
  points_text_style                      String?   @db.VarChar(20)
  phone_type                             Int       @default(0)
  login_type                             Int       @default(0)
  created_time                           DateTime? @db.DateTime(0)
  updated_time                           DateTime? @db.DateTime(0)
  deleted_time                           DateTime? @db.DateTime(0)
}

model mall_logistics_company {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar(50)
  code               String               @db.VarChar(20)
  is_enabled         Boolean              @default(false)
  dr                 Int                  @default(0)
  logistics_template logistics_template[]
}

model mall_seller_delivery_address {
  id            Int       @id @default(autoincrement())
  mall_id       Int
  consignee     String    @db.VarChar(50)
  contact       String    @db.VarChar(20)
  province_name String    @db.VarChar(20)
  city_name     String    @db.VarChar(20)
  district_name String    @db.VarChar(20)
  address       String    @db.VarChar(100)
  zip_code      String    @db.VarChar(20)
  is_default    Boolean   @default(false)
  created_time  DateTime? @db.DateTime(0)
  updated_time  DateTime? @db.DateTime(0)
  deleted_time  DateTime? @db.DateTime(0)
  dr            Int?      @default(0) @db.TinyInt
}

model mass_message {
  id                   Int                   @id @default(autoincrement()) @db.UnsignedInt
  send_type            Int?                  @db.UnsignedInt
  send_type_id         Int?                  @db.UnsignedInt
  value                String?               @db.Text
  url                  String?               @db.VarChar(255)
  send_count           Int?                  @db.UnsignedInt
  user_count           Int?                  @db.UnsignedInt
  status               Int?                  @db.UnsignedInt
  website_id           Int?                  @db.UnsignedInt
  mass_template_id     Int?                  @db.UnsignedInt
  dr                   Int?                  @db.UnsignedTinyInt
  created_at           DateTime              @default(now()) @db.Timestamp(0)
  updated_at           DateTime              @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?             @db.Timestamp(0)
  member_mass_template member_mass_template? @relation(fields: [mass_template_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "mass_message_ibfk_1")

  @@index([mass_template_id], map: "mass_template_id")
}

model material {
  id                   Int                @id @default(autoincrement()) @db.UnsignedInt
  category_id          Int?               @db.UnsignedInt
  member_id            Int?
  content              String?            @db.Text
  goods_id             Int?
  distributor_level_id String?            @db.Text
  member_level_id      String?            @db.Text
  member_tag_id        String?            @db.Text
  dr                   Int?               @db.UnsignedTinyInt
  created_at           DateTime           @default(now()) @db.Timestamp(0)
  updated_at           DateTime           @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?          @db.Timestamp(0)
  material_category    material_category? @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "material_ibfk_1")
  member               member?            @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "material_ibfk_2")
  product              product?           @relation(fields: [goods_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "material_ibfk_3")
  material_image       material_image[]

  @@index([category_id], map: "category_id")
  @@index([goods_id], map: "goods_id")
  @@index([member_id], map: "member_id")
}

model material_category {
  id         Int        @id @default(autoincrement()) @db.UnsignedInt
  name       String?    @db.VarChar(255)
  is_default Int?       @db.UnsignedTinyInt
  sort       Int?       @db.UnsignedInt
  status     Int?       @db.UnsignedTinyInt
  website_id Int?       @db.UnsignedInt
  dr         Int?       @db.UnsignedTinyInt
  created_at DateTime   @default(now()) @db.Timestamp(0)
  updated_at DateTime   @default(now()) @db.Timestamp(0)
  deleted_at DateTime?  @db.Timestamp(0)
  material   material[]
}

model material_image {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  material_id Int?      @db.UnsignedInt
  url         String?   @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(0)
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.Timestamp(0)
  dr          Int?      @default(0)
  material    material? @relation(fields: [material_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "material_image_ibfk_1")

  @@index([material_id], map: "material_id")
}

model media_album {
  id                Int           @id @default(autoincrement())
  album_name        String?       @db.VarChar(255)
  album_display_url String?       @db.VarChar(255)
  album_sort        Int?
  created_at        DateTime?     @default(now()) @db.Timestamp(0)
  updated_at        DateTime?     @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?     @db.Timestamp(0)
  dr                Boolean?      @default(false)
  album_photo       album_photo[]
}

model member {
  id                                                       Int                              @id @default(autoincrement())
  level_id                                                 Int?
  shop_id                                                  Int?
  identity                                                 String?                          @db.VarChar(255)
  company_name                                             String?                          @db.VarChar(255)
  member_department_id                                     Int?
  status                                                   Boolean
  recommender_id                                           Int?
  recommender_name                                         String                           @db.VarChar(50)
  recommender_phone                                        String?                          @db.VarChar(255)
  recommender_avatar                                       String?                          @db.VarChar(255)
  nickname                                                 String                           @db.VarChar(50)
  avatar                                                   String?                          @db.VarChar(500)
  wx_resp                                                  String?                          @db.VarChar(255)
  open_id                                                  String?                          @db.VarChar(255)
  phone_number                                             String                           @unique(map: "phone_number") @db.VarChar(20)
  password                                                 String                           @db.VarChar(100)
  pay_password                                             String?                          @db.VarChar(255)
  balance                                                  Decimal?                         @default(0.00) @db.Decimal(10, 2)
  total_consume                                            Decimal?                         @default(0.00) @db.Decimal(10, 2)
  point                                                    Int?                             @default(0)
  growth_value                                             Int?                             @default(0)
  copon_package_num                                        Int?
  order_count                                              Int?                             @default(0)
  three_mony_status                                        Int?
  three_mony_pay_created_at                                DateTime?                        @db.DateTime(0)
  agent_num                                                Int?
  created_at                                               DateTime                         @db.DateTime(0)
  updated_at                                               DateTime?                        @db.DateTime(0)
  deleted_at                                               DateTime?                        @db.DateTime(0)
  dr                                                       Boolean?                         @default(false)
  member_level                                             member_level?                    @relation(fields: [level_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_ibfk_1")
  member_department                                        member_department?               @relation(fields: [member_department_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_ibfk_2")
  agent                                                    agent[]
  article                                                  article[]
  article_comment                                          article_comment[]
  bargain_record                                           bargain_record[]
  bargain_record_user_bargain_record_user_user_idTomember  bargain_record_user[]            @relation("bargain_record_user_user_idTomember")
  bargain_record_user_bargain_record_user_paren_idTomember bargain_record_user[]            @relation("bargain_record_user_paren_idTomember")
  captain                                                  captain[]
  checkin_detail                                           checkin_detail[]
  coupon_package_record                                    coupon_package_record[]
  coupon_record                                            coupon_record[]
  distrbution                                              distrbution[]
  follow_activity_record                                   follow_activity_record[]
  gift_coupon_record                                       gift_coupon_record[]
  gift_member                                              gift_member[]
  gift_record                                              gift_record[]
  global                                                   global[]
  group_buying_member_record                               group_buying_member_record[]
  group_buying_record                                      group_buying_record[]
  material                                                 material[]
  member_activity_list                                     member_activity_list[]
  member_address                                           member_address[]
  member_article_memberTomember_article_member_id          member_article[]                 @relation("memberTomember_article_member_id")
  member_article_memberTomember_article_parent_id          member_article[]                 @relation("memberTomember_article_parent_id")
  member_article_like                                      member_article_like[]
  member_cart                                              member_cart[]
  member_contacts                                          member_contacts[]
  member_coupon                                            member_coupon[]
  member_coupon_package_coupons                            member_coupon_package_coupons[]
  member_favorite                                          member_favorite[]
  member_festival_record                                   member_festival_record[]
  member_gift                                              member_gift[]
  member_payment_activity_record                           member_payment_activity_record[]
  member_product                                           member_product[]
  member_ship_record                                       member_ship_record[]
  member_shop_cart                                         member_shop_cart[]
  member_store_info                                        member_store_info[]
  member_system_template_recold                            member_system_template_recold[]
  member_tag_middle                                        member_tag_middle[]
  member_text                                              member_text[]
  member_vip                                               member_vip[]
  member_voucher                                           member_voucher[]
  memebr_recharge_card                                     memebr_recharge_card[]
  order                                                    order[]
  order_package                                            order_package[]
  product_review                                           product_review[]
  sales_level_list_record                                  sales_level_list_record[]
  shop_action                                              shop_action[]
  shopkeeper                                               shopkeeper[]
  statement                                                statement[]
  store_info                                               store_info[]
  store_info_action                                        store_info_action[]
  store_meber_bonus                                        store_meber_bonus[]
  violation_comment_memberToviolation_comment_comment_id   violation_comment[]              @relation("memberToviolation_comment_comment_id")
  violation_comment_memberToviolation_comment_user_id      violation_comment[]              @relation("memberToviolation_comment_user_id")
  voucher_coupon_record                                    voucher_coupon_record[]
  withdrawal                                               withdrawal[]
  violation_comment                                        violation_comment[]
  violation_comment                                        violation_comment[]

  @@index([id], map: "id")
  @@index([id], map: "id_2")
  @@index([level_id], map: "level_id")
  @@index([member_department_id], map: "member_department_id")
  @@index([shop_id], map: "shop_id")
}

model member_activity_list {
  id             Int            @id @default(autoincrement())
  activity_id    Int            @db.UnsignedInt
  user_id        Int
  award          String?        @db.VarChar(50)
  prize          String?        @db.VarChar(255)
  status         Int            @default(0) @db.TinyInt
  created_time   DateTime       @default(now()) @db.DateTime(0)
  member         member         @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "member_activity_list_ibfk_2")
  lucky_activity lucky_activity @relation(fields: [activity_id], references: [id], onUpdate: Restrict, map: "member_activity_list_ibfk_3")

  @@index([activity_id], map: "activity_id_index")
  @@index([user_id], map: "user_id_index")
}

model member_address {
  id            Int       @id @default(autoincrement())
  member_id     Int
  status        Boolean
  consignee     String    @db.VarChar(50)
  contact       String    @db.VarChar(20)
  province_name String    @db.VarChar(20)
  city_name     String    @db.VarChar(20)
  district_name String    @db.VarChar(20)
  address       String    @db.VarChar(100)
  zip_code      String    @db.VarChar(20)
  dr            Boolean   @default(false)
  created_time  DateTime? @db.DateTime(0)
  updated_time  DateTime? @db.DateTime(0)
  deleted_time  DateTime? @db.DateTime(0)
  member        member    @relation(fields: [member_id], references: [id], onUpdate: Restrict, map: "member_address_ibfk_1")

  @@index([member_id], map: "member_id")
}

model member_article {
  id                                      Int         @id @default(autoincrement())
  member_id                               Int
  stroe_id                                Int?
  parent_id                               Int?
  create_at                               DateTime?   @default(now()) @db.Timestamp(0)
  dr                                      Int?        @default(0) @db.TinyInt
  member_memberTomember_article_member_id member      @relation("memberTomember_article_member_id", fields: [member_id], references: [id], onUpdate: Restrict, map: "member_article_ibfk_1")
  store_info                              store_info? @relation(fields: [stroe_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_article_ibfk_2")
  member_memberTomember_article_parent_id member?     @relation("memberTomember_article_parent_id", fields: [parent_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_article_ibfk_3")

  @@index([member_id], map: "member_id")
  @@index([parent_id], map: "parent_id")
  @@index([stroe_id], map: "stroe_id")
}

model member_article_like {
  id         Int       @id @default(autoincrement())
  member_id  Int
  article_id Int?
  type       Int?
  create_at  DateTime? @default(now()) @db.Timestamp(0)
  dr         Int?      @default(0) @db.TinyInt
  member     member    @relation(fields: [member_id], references: [id], onUpdate: Restrict, map: "member_article_like_ibfk_1")
  article    article?  @relation(fields: [article_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_article_like_ibfk_2")

  @@index([article_id], map: "article_id")
  @@index([member_id], map: "member_id")
}

model member_cart {
  id                                    Int                                 @id @default(autoincrement())
  member_id                             Int
  product_specification_middle_price_id Int?
  product_id                            Int?
  num                                   Int?
  type                                  Int?
  selected                              Boolean?                            @default(false)
  price                                 Decimal?                            @db.Decimal(10, 2)
  preferential_price                    Decimal?                            @db.Decimal(10, 2)
  points_deduction                      String?                             @db.VarChar(255)
  freight                               String?                             @db.VarChar(255)
  created_time                          DateTime?                           @default(now()) @db.DateTime(0)
  dr                                    Int?                                @default(0)
  product_specification_middle_price    product_specification_middle_price? @relation(fields: [product_specification_middle_price_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cart_product_ibfk_2")
  product                               product?                            @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cart_product_ibfk_3")
  member                                member                              @relation(fields: [member_id], references: [id], onUpdate: Restrict, map: "member_cart_ibfk_1")

  @@index([product_specification_middle_price_id], map: "cart_product_ibfk_2")
  @@index([product_id], map: "cart_product_ibfk_3")
  @@index([member_id], map: "idx_member_id")
}

model member_contacts {
  id             Int          @id @default(autoincrement())
  member_id      Int?
  member_text_id Int?
  create_at      DateTime?    @db.DateTime(0)
  update_at      DateTime?    @db.DateTime(0)
  dr             Int?         @db.TinyInt
  member         member?      @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_contacts_ibfk_1")
  member_text    member_text? @relation(fields: [member_text_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_contacts_ibfk_2")

  @@index([member_id], map: "member_id")
  @@index([member_text_id], map: "member_text_id")
}

model member_coupon {
  id           Int            @id @default(autoincrement())
  member_id    Int?
  coupon_id    Int?
  status       Boolean?       @default(false)
  open_status  Boolean?
  open_info    String?        @db.VarChar(255)
  creatad_at   DateTime?      @default(now()) @db.DateTime(0)
  dr           Int?           @default(0) @db.TinyInt
  member       member?        @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_coupon_ibfk_1")
  coupon       coupon?        @relation(fields: [coupon_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_coupon_ibfk_2")
  order_coupon order_coupon[]

  @@index([coupon_id], map: "coupon_id")
  @@index([id], map: "id")
  @@index([id], map: "id_2")
  @@index([member_id], map: "member_id")
}

model member_coupon_package_coupons {
  id                        Int                  @id @default(autoincrement())
  member_id                 Int?
  coupon_package_coupons_id Int?
  type                      Int?
  creatad_at                DateTime?            @default(now()) @db.DateTime(0)
  dr                        Int?                 @default(0) @db.TinyInt
  member                    member?              @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_coupon_package_coupons_ibfk_1")
  coupon_package_list       coupon_package_list? @relation(fields: [coupon_package_coupons_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_coupon_package_coupons_ibfk_2")

  @@index([coupon_package_coupons_id], map: "coupon_package_coupons_id")
  @@index([member_id], map: "member_id")
}

model member_department {
  id            Int       @id
  name          String?   @db.VarChar(255)
  parent_id     Int?
  description   String?   @db.Text
  created_time  DateTime? @db.DateTime(0)
  modified_time DateTime? @db.DateTime(0)
  dr            Int?
  member        member[]
}

model member_favorite {
  id            Int         @id @default(autoincrement())
  member_id     Int
  type          Boolean?
  product_id    Int?
  short_id      Int?
  created_time  DateTime?   @default(now()) @db.DateTime(0)
  modified_time DateTime?   @default(now()) @db.DateTime(0)
  dr            Int?        @default(0)
  member        member      @relation(fields: [member_id], references: [id], onUpdate: Restrict, map: "member_favorite_ibfk_1")
  product       product?    @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_favorite_ibfk_2")
  store_info    store_info? @relation(fields: [short_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_favorite_ibfk_3")

  @@index([member_id], map: "member_id")
  @@index([product_id], map: "product_id")
  @@index([short_id], map: "short_id")
}

model member_festival_record {
  id                Int               @id @default(autoincrement())
  user_id           Int
  festival_id       Int
  status            Int               @db.TinyInt
  created_time      DateTime          @default(now()) @db.DateTime(0)
  member            member            @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "member_festival_record_ibfk_1")
  festival_activity festival_activity @relation(fields: [festival_id], references: [id], onUpdate: Restrict, map: "member_festival_record_ibfk_2")

  @@index([festival_id], map: "festival_id")
  @@index([user_id], map: "user_id")
}

model member_gift {
  id          Int          @id @default(autoincrement())
  member_id   Int?
  gift_id     Int?
  gitf_prd    Int?
  status      Boolean?     @default(false)
  open_status Boolean?
  open_info   String?      @db.VarChar(255)
  creatad_at  DateTime?    @default(now()) @db.DateTime(0)
  dr          Int?         @default(0) @db.TinyInt
  member      member?      @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_gift_ibfk_1")
  gift_coupon gift_coupon? @relation(fields: [gift_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_gift_ibfk_2")
  gift        gift?        @relation(fields: [gitf_prd], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_gift_ibfk_3")

  @@index([gift_id], map: "gift_id")
  @@index([gitf_prd], map: "gitf_prd")
  @@index([member_id], map: "member_id")
}

model member_gift_package_combination {
  id                          Int       @id
  member_id                   Int?
  gift_package_combination_id Int?
  create_at                   DateTime? @db.DateTime(0)
  update_at                   DateTime? @db.DateTime(0)
  deleled_at                  String?   @db.VarChar(255)
  dr                          Int?      @db.TinyInt
}

model member_level {
  id                Int                @id @default(autoincrement())
  level_name        String             @db.VarChar(50)
  upgrade_condition Int
  discount          Decimal?           @db.Decimal(4, 2)
  status            Boolean
  create_at         DateTime?          @db.DateTime(0)
  update_at         DateTime?          @db.DateTime(0)
  deleted_at        DateTime?          @db.DateTime(0)
  dr                Boolean?           @default(false)
  gift_send_method  gift_send_method[]
  member            member[]

  @@index([level_name], map: "level_name")
}

model member_mass_template {
  id                       Int                        @id @default(autoincrement()) @db.UnsignedInt
  template_name            String?                    @db.VarChar(255)
  official_accounts_id     Int?                       @db.UnsignedInt
  first_data               String?                    @db.Text
  first_data_colour        String?                    @db.VarChar(255)
  detail_data              String?                    @db.Text
  remark_data              String?                    @db.VarChar(255)
  remark_data_colour       String?                    @db.VarChar(255)
  link_id                  String?                    @db.VarChar(255)
  member_id                Int?                       @db.UnsignedInt
  dr                       Int?                       @default(0) @db.UnsignedTinyInt
  created_at               DateTime                   @default(now()) @db.Timestamp(0)
  updated_at               DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?                  @db.Timestamp(0)
  mass_message             mass_message[]
  member_mass_template_key member_mass_template_key[]
}

model member_mass_template_key {
  id                              Int                               @id @default(autoincrement()) @db.UnsignedInt
  member_mass_template_id         Int?                              @db.UnsignedInt
  name                            String?                           @db.VarChar(255)
  value                           String?                           @db.VarChar(255)
  color                           String?                           @db.VarChar(255)
  dr                              Int?                              @default(0) @db.UnsignedInt
  created_at                      DateTime                          @default(now()) @db.Timestamp(0)
  updated_at                      DateTime                          @default(now()) @db.Timestamp(0)
  deleted_at                      DateTime?                         @db.Timestamp(0)
  member_mass_template            member_mass_template?             @relation(fields: [member_mass_template_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_mass_template_key_ibfk_1")
  member_mass_template_key_mod    member_mass_template_key_mod[]
  member_mass_template_key_record member_mass_template_key_record[]

  @@index([member_mass_template_id], map: "member_mass_template_id")
}

model member_mass_template_key_mod {
  id                              Int                               @id @default(autoincrement())
  member_mass_template_key_id     Int?                              @db.UnsignedInt
  type                            Int?
  person                          String?                           @db.Text
  member_mass_template_key        member_mass_template_key?         @relation(fields: [member_mass_template_key_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_mass_template_key_mod_ibfk_1")
  member_mass_template_key_record member_mass_template_key_record[]

  @@index([member_mass_template_key_id], map: "member_mass_template_key_id")
}

model member_mass_template_key_record {
  id                              Int                           @id @default(autoincrement())
  member_mass_template_key_mod_id Int?
  member_mass_template_key_id     Int?                          @db.UnsignedInt
  content                         String?                       @db.Text
  num                             Int?
  create_at                       DateTime?                     @db.DateTime(0)
  member_mass_template_key        member_mass_template_key?     @relation(fields: [member_mass_template_key_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_mass_template_key_record_ibfk_1")
  member_mass_template_key_mod    member_mass_template_key_mod? @relation(fields: [member_mass_template_key_mod_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_mass_template_key_record_ibfk_2")

  @@index([member_mass_template_key_id], map: "member_mass_template_key_id")
  @@index([member_mass_template_key_mod_id], map: "member_mass_template_key_mod_id")
}

model member_payment_activity_record {
  id                  Int              @id @default(autoincrement())
  user_id             Int
  payment_activity_id Int
  status              Int              @default(0) @db.TinyInt
  created_time        DateTime         @default(now()) @db.DateTime(0)
  member              member           @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "member_payment_activity_record_ibfk_1")
  payment_activity    payment_activity @relation(fields: [payment_activity_id], references: [id], onUpdate: Restrict, map: "member_payment_activity_record_ibfk_2")

  @@index([payment_activity_id], map: "payment_activity_id")
  @@index([user_id], map: "user_id")
}

model member_product {
  id         Int       @id @default(autoincrement())
  member_id  Int?
  prdouct_id Int?
  create_at  DateTime? @db.DateTime(0)
  member     member?   @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_product_ibfk_1")
  product    product?  @relation(fields: [prdouct_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_product_ibfk_2")

  @@index([member_id], map: "member_id")
  @@index([prdouct_id], map: "prdouct_id")
}

model member_ship_basic_settings {
  id                  Int       @id @default(autoincrement())
  is_enabled          Int       @default(0) @db.TinyInt
  logo_url            String    @db.VarChar(255)
  card_prefix         String?   @db.VarChar(10)
  is_protocol_enabled Int       @default(0) @db.TinyInt
  protocol_name       String?   @db.VarChar(50)
  protocol_content    String?   @db.Text
  card_style          String    @db.VarChar(20)
  plus_style          String    @db.VarChar(20)
  created_time        DateTime  @default(now()) @db.DateTime(0)
  updated_time        DateTime? @db.DateTime(0)
  deleted_time        DateTime? @db.DateTime(0)
  dr                  Int       @default(0) @db.TinyInt

  @@index([card_prefix], map: "idx_card_prefix")
  @@index([card_style], map: "idx_card_style")
  @@index([created_time], map: "idx_created_time")
  @@index([is_enabled], map: "idx_is_enabled")
  @@index([is_protocol_enabled], map: "idx_is_protocol_enabled")
  @@index([plus_style], map: "idx_plus_style")
}

model member_ship_card_price {
  id                   Int       @id @default(autoincrement())
  card_id              Int
  granularity          Int       @db.TinyInt
  validity_period      Int       @db.SmallInt
  price                Decimal   @db.Decimal(10, 2)
  line_price           Decimal   @db.Decimal(10, 2)
  first_purchase_price Decimal   @db.Decimal(10, 2)
  created_time         DateTime  @default(now()) @db.DateTime(0)
  updated_time         DateTime? @db.DateTime(0)
  deleted_time         DateTime? @db.DateTime(0)
  dr                   Int       @default(0) @db.TinyInt
  vip_card             vip_card  @relation(fields: [card_id], references: [id], onDelete: Cascade, map: "fk_membership_card_id")

  @@index([card_id], map: "card_id")
}

model member_ship_card_rights {
  id                              Int                               @id @default(autoincrement())
  card_id                         Int
  type                            String                            @db.VarChar(50)
  created_time                    DateTime                          @default(now()) @db.DateTime(0)
  updated_time                    DateTime?                         @db.DateTime(0)
  deleted_time                    DateTime?                         @db.DateTime(0)
  dr                              Int                               @default(0) @db.TinyInt
  vip_card                        vip_card                          @relation(fields: [card_id], references: [id], onUpdate: Restrict, map: "member_ship_card_rights_ibfk_1")
  member_ship_card_rights_details member_ship_card_rights_details[]

  @@index([card_id], map: "card_id")
}

model member_ship_card_rights_details {
  id                      Int                     @id @default(autoincrement())
  rights_id               Int
  coupon_id               Int?
  type                    String                  @db.VarChar(50)
  name                    String                  @db.VarChar(50)
  description             String?                 @db.Text
  created_time            DateTime                @default(now()) @db.DateTime(0)
  updated_time            DateTime?               @db.DateTime(0)
  deleted_time            DateTime?               @db.DateTime(0)
  dr                      Int                     @default(0) @db.TinyInt
  coupon                  coupon?                 @relation(fields: [coupon_id], references: [id], onDelete: Cascade, map: "fk_coupon_id")
  member_ship_card_rights member_ship_card_rights @relation(fields: [rights_id], references: [id], onDelete: Cascade, map: "fk_membership_rights_id")

  @@index([coupon_id], map: "coupon_id")
  @@index([rights_id], map: "rights_id")
}

model member_ship_price_spec {
  id              Int       @id @default(autoincrement())
  membership_id   Int
  granularity     Int       @db.TinyInt
  validity_period Int
  sell_price      Decimal   @db.Decimal(10, 2)
  market_price    Decimal   @db.Decimal(10, 2)
  first_buy_price Decimal   @db.Decimal(10, 2)
  balance         Decimal   @db.Decimal(10, 2)
  total_amount    Decimal   @db.Decimal(10, 2)
  created_time    DateTime  @default(now()) @db.DateTime(0)
  updated_time    DateTime? @db.DateTime(0)
  deleted_time    DateTime? @db.DateTime(0)
  dr              Int       @default(0) @db.TinyInt

  @@index([created_time], map: "idx_created_time")
  @@index([granularity, validity_period], map: "idx_granularity_validity_period")
  @@index([membership_id], map: "idx_membership_id")
  @@index([sell_price], map: "idx_sell_price")
}

model member_ship_record {
  id           Int       @id @default(autoincrement())
  member_id    Int
  card_id      Int
  balance      Decimal   @default(0.00) @db.Decimal(10, 2)
  no           String?   @db.VarChar(255)
  created_time DateTime  @default(now()) @db.DateTime(0)
  updated_time DateTime? @db.DateTime(0)
  deleted_time DateTime? @db.DateTime(0)
  dr           Int       @default(0) @db.TinyInt
  vip_card     vip_card  @relation(fields: [card_id], references: [id], onDelete: Cascade, map: "fk_card_id_2")
  member       member    @relation(fields: [member_id], references: [id], onDelete: Cascade, map: "fk_member_id_2")

  @@index([card_id], map: "card_id")
  @@index([member_id], map: "member_id")
}

model member_shop_cart {
  id                                    Int                                 @id @default(autoincrement())
  member_id                             Int
  shop_id                               BigInt?
  product_specification_middle_price_id Int?
  product_id                            Int?
  num                                   Int?
  type                                  Int?
  selected                              Boolean?                            @default(false)
  price                                 Decimal?                            @db.Decimal(10, 2)
  discount                              Decimal?                            @db.Decimal(10, 2)
  amount_off                            Decimal?                            @db.Decimal(10, 2)
  preferential_price                    Decimal?                            @db.Decimal(10, 2)
  points_deduction                      Int?
  renter_points                         Int?
  freight                               String?                             @db.VarChar(255)
  created_time                          DateTime?                           @default(now()) @db.DateTime(0)
  dr                                    Int?                                @default(0)
  member                                member                              @relation(fields: [member_id], references: [id], onUpdate: Restrict, map: "member_shop_cart_ibfk_1")
  product_specification_middle_price    product_specification_middle_price? @relation(fields: [product_specification_middle_price_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_shop_cart_ibfk_2")
  product                               product?                            @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_shop_cart_ibfk_3")
  shop                                  shop?                               @relation(fields: [shop_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_shop_cart_ibfk_4")

  @@index([member_id], map: "idx_member_id")
  @@index([product_specification_middle_price_id], map: "member_shop_cart_ibfk_2")
  @@index([product_id], map: "member_shop_cart_ibfk_3")
  @@index([shop_id], map: "member_shop_cart_ibfk_4")
}

model member_store_info {
  id            Int         @id @default(autoincrement())
  member_id     Int?
  store_info_id Int?
  balance       Decimal?    @db.Decimal(10, 2)
  create_at     DateTime?   @db.DateTime(0)
  update_at     DateTime?   @db.DateTime(0)
  deleted_at    DateTime?   @db.DateTime(0)
  dr            Int?        @default(0) @db.TinyInt
  member        member?     @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_store_info_ibfk_1")
  store_info    store_info? @relation(fields: [store_info_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_store_info_ibfk_2")

  @@index([member_id], map: "member_id")
  @@index([store_info_id], map: "store_info_id")
}

model member_system_template_recold {
  id                                    Int                                     @id @default(autoincrement())
  member_id                             Int?
  system_template_id                    Int?                                    @db.UnsignedInt
  create_at                             DateTime?                               @db.DateTime(0)
  dr                                    Int?                                    @db.TinyInt
  member                                member?                                 @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_system_template_recold_ibfk_1")
  system_template                       system_template?                        @relation(fields: [system_template_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_system_template_recold_ibfk_2")
  member_system_template_recold_details member_system_template_recold_details[]

  @@index([member_id], map: "member_id")
  @@index([system_template_id], map: "system_template_id")
}

model member_system_template_recold_details {
  id                               Int                            @id @default(autoincrement())
  member_system_template_recold_id Int?
  system_template_fields_id        Int?                           @db.UnsignedInt
  contoc                           String?                        @db.Text
  create_at                        Int?
  dr                               Int?                           @db.TinyInt
  member_system_template_recold    member_system_template_recold? @relation(fields: [member_system_template_recold_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_system_template_recold_details_ibfk_1")
  system_template_fields           system_template_fields?        @relation(fields: [system_template_fields_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_system_template_recold_details_ibfk_2")

  @@index([member_system_template_recold_id], map: "member_system_template_recold_id")
  @@index([system_template_fields_id], map: "system_template_fields_id")
}

model member_tag {
  id                Int                 @id @default(autoincrement())
  tag_config_status Boolean
  tag_name          String              @db.VarChar(50)
  count             Int?
  tag_status        Int?
  total_amount      Decimal?            @db.Decimal(10, 2)
  total_orders      Int?
  points            Int?
  balance           Decimal?            @db.Decimal(10, 2)
  purchased_items   Int?
  create_at         DateTime?           @db.DateTime(0)
  update_at         DateTime?           @db.DateTime(0)
  deleted_at        DateTime?           @db.DateTime(0)
  dr                Boolean?            @default(false)
  gift_send_method  gift_send_method[]
  member_tag_middle member_tag_middle[]

  @@index([tag_name], map: "tag_name")
}

model member_tag_middle {
  id         Int        @id @default(autoincrement())
  member_id  Int
  tag_id     Int
  tag_name   String     @db.VarChar(50)
  create_at  DateTime   @db.DateTime(0)
  update_at  DateTime?  @db.DateTime(0)
  deleted_at DateTime?  @db.DateTime(0)
  dr         Boolean?   @default(false)
  member     member     @relation(fields: [member_id], references: [id], onUpdate: Restrict, map: "member_tag_middle_ibfk_1")
  member_tag member_tag @relation(fields: [tag_id], references: [id], onUpdate: Restrict, map: "member_tag_middle_ibfk_2")

  @@index([tag_id], map: "idx_label_id")
  @@index([member_id], map: "idx_member_id")
  @@index([tag_name], map: "tag_name")
}

model member_text {
  id              Int               @id @default(autoincrement())
  member_id       Int?
  status          Int?              @db.TinyInt
  text            String?           @db.Text
  create_at       DateTime?         @db.DateTime(0)
  update_at       DateTime?         @db.DateTime(0)
  dr              Int?              @db.TinyInt
  member          member?           @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_text_ibfk_1")
  member_contacts member_contacts[]

  @@index([member_id], map: "member_id")
}

model member_vip {
  id          Int      @id @default(autoincrement())
  member_id   Int
  vip_card_id Int
  created_at  DateTime @default(now()) @db.DateTime(0)
  updated_at  DateTime @default(now()) @db.DateTime(0)
  dr          Int      @default(0)
  member      member   @relation(fields: [member_id], references: [id], onUpdate: Restrict, map: "member_vip_ibfk_1")
  vip_card    vip_card @relation(fields: [vip_card_id], references: [id], onUpdate: Restrict, map: "member_vip_ibfk_2")

  @@index([member_id], map: "idx_member_id")
  @@index([vip_card_id], map: "idx_vip_card_id")
}

model member_vip_mony {
  id              Int       @id @default(autoincrement())
  recharge_amount Decimal?  @db.Decimal(10, 2)
  gift_amount     Decimal?  @db.Decimal(10, 2)
  create_time     DateTime? @db.DateTime(0)
  modify_time     DateTime? @db.DateTime(0)
  dr              Int?      @default(0)
}

model member_voucher {
  id             Int             @id @default(autoincrement())
  member_id      Int?
  voucher_id     Int?
  status         Boolean?        @default(false)
  price          Decimal?        @default(0.00) @db.Decimal(10, 2)
  open_status    Boolean?        @default(false)
  open_info      String?         @db.VarChar(255)
  creatad_at     DateTime?       @default(now()) @db.DateTime(0)
  end_at         DateTime?       @db.DateTime(0)
  dr             Int?            @default(0) @db.TinyInt
  member         member?         @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_voucher_ibfk_1")
  voucher_coupon voucher_coupon? @relation(fields: [voucher_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "member_voucher_ibfk_2")
  order_voucher  order_voucher[]

  @@index([member_id], map: "member_id")
  @@index([voucher_id], map: "voucher_id")
}

model memebr_recharge_card {
  id               Int            @id @default(autoincrement())
  member_id        Int?
  recharge_card_id Int?
  created_at       DateTime?      @db.DateTime(0)
  update_at        DateTime?      @db.DateTime(0)
  deleted_at       DateTime?      @db.DateTime(0)
  dr               Int?           @db.TinyInt
  recharge_card    recharge_card? @relation(fields: [recharge_card_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "memebr_recharge_card_ibfk_1")
  member           member?        @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "memebr_recharge_card_ibfk_2")

  @@index([member_id], map: "member_id")
  @@index([recharge_card_id], map: "recharge_card_id")
}

model mp_link {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  link_name  String?   @db.VarChar(255)
  link_url   String?   @db.VarChar(255)
  url_link   String?   @db.VarChar(255)
  url_scheme String?   @db.VarChar(255)
  valid_type Int?      @db.TinyInt
  add_time   Int?      @db.UnsignedInt
  times      Int?      @db.UnsignedInt
  day_type   Int?      @db.TinyInt
  days       Int?      @db.UnsignedInt
  time_str   String?   @db.VarChar(255)
  dr         Int?      @db.UnsignedTinyInt
  website_id Int?      @db.UnsignedInt
  shop_id    Int?      @db.UnsignedInt
  created_at DateTime  @default(now()) @db.Timestamp(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
}

model oder_commission {
  id                                  Int     @id @default(autoincrement())
  oder_id                             Int?    @db.UnsignedInt
  distrbution_commission_bonus        String? @db.VarChar(255)
  distrbution_member_commission_bonus String? @db.VarChar(255)
  agent_commission_bonus              String? @db.VarChar(255)
  agent_member_commission_bonus       String? @db.VarChar(255)
  captain_commission_bonus            String? @db.VarChar(255)
  captain_member__commission_bonus    String? @db.VarChar(255)
  global_commission_bonus             String? @db.VarChar(255)
  global_member_commission_bonus      String? @db.VarChar(255)
  dr                                  Int?    @default(0) @db.TinyInt
  order                               order?  @relation(fields: [oder_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "oder_commission_ibfk_1")

  @@index([oder_id], map: "oder_id")
}

model order {
  id                         Int                          @id @default(autoincrement()) @db.UnsignedInt
  address                    String?                      @db.VarChar(255)
  out_trade_no               String?                      @db.VarChar(255)
  order_status_type          Int                          @db.TinyInt
  payment_method             Int?                         @db.TinyInt
  apply_id                   Int?
  order_type                 Int?                         @db.TinyInt
  after_type                 Int?                         @default(5) @db.TinyInt
  after_status               Int?                         @db.TinyInt
  remark                     String?                      @db.VarChar(100)
  order_payment_voucher      String?                      @db.VarChar(255)
  parent_status              Int?                         @db.TinyInt
  parent_id                  String?                      @db.VarChar(255)
  uuid                       String?                      @unique(map: "uuid") @db.VarChar(255)
  member_id                  Int?
  distrbution_id             Int?
  order_date                 DateTime                     @default(now()) @db.Timestamp(0)
  payment_date               DateTime?                    @db.Timestamp(0)
  shipping_date              DateTime?                    @db.Timestamp(0)
  shipping_end_date          DateTime?                    @db.Timestamp(0)
  shipping_method            Int?
  completion_date            DateTime?                    @db.Timestamp(0)
  order_status               Int                          @default(0)
  total_merchandise          Decimal?                     @db.Decimal(10, 2)
  total_product_deduction    Decimal?                     @db.Decimal(10, 2)
  points_deduction           Decimal?                     @db.Decimal(10, 2)
  freight                    Decimal?                     @db.Decimal(10, 2)
  amount_received            Decimal?                     @db.Decimal(10, 2)
  pay_balance                Decimal?                     @db.Decimal(10, 2)
  pay_point                  Int?
  pay_mony                   Decimal?                     @db.Decimal(10, 2)
  pay_vocher_num             Decimal?                     @db.Decimal(10, 0)
  pay_ho_num                 Decimal?                     @db.Decimal(10, 0)
  pay_coupon_num             Decimal?                     @db.Decimal(10, 0)
  dr                         Boolean?                     @default(false)
  created_at                 DateTime?                    @default(now()) @db.Timestamp(0)
  updated_at                 DateTime?                    @default(now()) @db.Timestamp(0)
  updated_by                 Int?                         @db.UnsignedInt
  deleted_at                 DateTime?                    @default(now()) @db.Timestamp(0)
  receiver_mobile            String?                      @db.VarChar(255)
  receiver_province          String?                      @db.VarChar(255)
  receiver_city              String?                      @db.VarChar(255)
  receiver_district          String?                      @db.VarChar(255)
  receiver_address           String?                      @db.VarChar(255)
  receiver_zip               String?                      @db.VarChar(10)
  receiver_name              String?                      @db.VarChar(255)
  operator                   String?                      @db.VarChar(255)
  member                     member?                      @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "order_ibfk_1")
  area_bonus                 area_bonus[]
  bargain_record             bargain_record[]
  captain_bonus              captain_bonus[]
  coupon_record              coupon_record[]
  distributor_bonus          distributor_bonus[]
  gift_record                gift_record[]
  global_bonus               global_bonus[]
  group_buying_member_record group_buying_member_record[]
  invoices                   invoices[]
  oder_commission            oder_commission[]
  order_coupon               order_coupon[]
  order_log                  order_log[]
  order_note                 order_note[]
  order_products             order_products[]
  order_voucher              order_voucher[]
  presale_record             presale_record[]
  purchase_order             purchase_order[]
  refund_log                 refund_log[]
  voucher_coupon_record      voucher_coupon_record[]

  @@index([member_id], map: "order_ibfk_1")
}

model order_barrage {
  id                 Int                  @id @default(autoincrement()) @db.UnsignedInt
  order_barrage      Int?                 @db.TinyInt
  barrage_type       Int?                 @db.TinyInt
  display_module     Int?                 @db.TinyInt
  barrage_duration   Int?
  loop_delivery      Int?                 @db.TinyInt
  created_at         DateTime             @default(now()) @db.Timestamp(0)
  updated_at         DateTime             @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?            @db.Timestamp(0)
  order_barrage_rule order_barrage_rule[]
}

model order_barrage_rule {
  id                Int            @id @default(autoincrement()) @db.UnsignedInt
  order_barrage_id  Int?           @db.UnsignedInt
  time_period       String?        @db.VarChar(255)
  delivery_amount   Int?
  delivery_interval String?        @db.VarChar(255)
  created_at        DateTime       @default(now()) @db.Timestamp(0)
  updated_at        DateTime       @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?      @db.Timestamp(0)
  order_barrage     order_barrage? @relation(fields: [order_barrage_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "order_barrage_rule_ibfk_1")

  @@index([order_barrage_id], map: "order_barrage_id")
}

model order_coupon {
  id            Int            @id @default(autoincrement())
  order_id      Int?           @db.UnsignedInt
  status        Int?
  store_id      Int?
  coupon_id     Int?
  create_at     DateTime?      @db.DateTime(0)
  dr            Int?           @db.TinyInt
  member_coupon member_coupon? @relation(fields: [coupon_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "order_coupon_ibfk_1")
  order         order?         @relation(fields: [order_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "order_coupon_ibfk_2")

  @@index([coupon_id], map: "coupon_id")
  @@index([order_id], map: "order_id")
}

model order_log {
  id             Int      @id @default(autoincrement()) @db.UnsignedInt
  order_id       Int      @db.UnsignedInt
  order_status   String?  @db.VarChar(255)
  action         String?  @db.VarChar(255)
  operation_time DateTime @db.DateTime(0)
  created_at     DateTime @db.DateTime(0)
  updated_at     DateTime @db.DateTime(0)
  deleted_at     DateTime @default(now()) @db.Timestamp(0)
  order          order    @relation(fields: [order_id], references: [id], onDelete: Cascade, map: "order_log")

  @@index([order_id], map: "order_log")
}

model order_note {
  id             Int      @id @default(autoincrement()) @db.UnsignedInt
  order_id       Int      @db.UnsignedInt
  note_content   String   @db.VarChar(255)
  operator       String?  @db.VarChar(255)
  operation_time DateTime @db.DateTime(0)
  created_at     DateTime @db.DateTime(0)
  updated_at     DateTime @db.DateTime(0)
  deleted_at     DateTime @default(now()) @db.Timestamp(0)
  order          order    @relation(fields: [order_id], references: [id], onDelete: Cascade, map: "order_note")

  @@index([order_id], map: "order_note")
}

model order_package {
  order_id                 Int                       @id @default(autoincrement())
  user_id                  Int
  gift_id                  Int?
  coupon_pack_id           Int?
  recharge_card_id         Int?
  store_info_id            Int?
  price                    Decimal?                  @db.Decimal(10, 2)
  created_at               DateTime?                 @default(now()) @db.DateTime(0)
  updated_at               DateTime?                 @default(now()) @db.DateTime(0)
  dr                       Int?                      @default(0) @db.TinyInt
  member                   member                    @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "order_package_ibfk_1")
  gift_package_combination gift_package_combination? @relation(fields: [gift_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "order_package_ibfk_2")
  coupon_package_list      coupon_package_list?      @relation(fields: [coupon_pack_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "order_package_ibfk_3")
  store_info               store_info?               @relation(fields: [store_info_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "order_package_ibfk_4")
  recharge_card            recharge_card?            @relation(fields: [recharge_card_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "order_package_ibfk_5")

  @@index([coupon_pack_id], map: "coupon_pack_id")
  @@index([gift_id], map: "gift_id")
  @@index([recharge_card_id], map: "recharge_card_id")
  @@index([store_info_id], map: "store_info_id")
  @@index([user_id], map: "user_id")
}

model order_products {
  id                                    Int                                 @id @default(autoincrement()) @db.UnsignedInt
  order_id                              Int                                 @db.UnsignedInt
  product_id                            Int
  product_specification_middle_price_id Int?
  stort_id                              Int?
  shop_id                               BigInt?
  number                                Int                                 @default(1)
  pre_type                              Int                                 @db.TinyInt
  price                                 Decimal?                            @db.Decimal(10, 2)
  discount_price                        Decimal?                            @db.Decimal(10, 2)
  proint                                Decimal?                            @db.Decimal(10, 2)
  vocher_num                            Decimal?                            @db.Decimal(10, 0)
  ho_num                                Decimal?                            @db.Decimal(10, 2)
  coupon_num                            Decimal?                            @db.Decimal(10, 2)
  tax                                   Decimal?                            @db.Decimal(10, 2)
  membership_card_payment               Decimal?                            @db.Decimal(10, 2)
  price_adjustment                      Decimal?                            @db.Decimal(10, 2)
  total                                 Decimal?                            @db.Decimal(10, 2)
  created_at                            DateTime?                           @default(now()) @db.Timestamp(0)
  updated_at                            DateTime?                           @default(now()) @db.Timestamp(0)
  deleted_at                            DateTime?                           @db.Timestamp(0)
  dr                                    Int?                                @default(0)
  company_code                          String?                             @db.VarChar(255)
  money                                 Decimal                             @default(0.00) @db.Decimal(10, 2)
  logistics_status                      Int?                                @default(0) @db.UnsignedTinyInt
  time                                  DateTime?                           @db.Timestamp(0)
  type                                  Int?                                @default(1) @db.UnsignedTinyInt
  type_name                             String?                             @db.VarChar(50)
  tracking_id                           String?                             @db.VarChar(50)
  amount_off                            Decimal?                            @db.Decimal(10, 2)
  discount                              Decimal?                            @db.Decimal(10, 2)
  remark                                String?                             @db.VarChar(255)
  product                               product                             @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "order_products_ibfk_3")
  order                                 order                               @relation(fields: [order_id], references: [id], onUpdate: Restrict, map: "order_products_ibfk_4")
  product_specification_middle_price    product_specification_middle_price? @relation(fields: [product_specification_middle_price_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "order_products_ibfk_5")
  store_info                            store_info?                         @relation(fields: [stort_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "order_products_ibfk_6")
  shop                                  shop?                               @relation(fields: [shop_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "order_products_ibfk_7")
  purchase_order_product                purchase_order_product[]
  supply_order_product                  supply_order_product[]

  @@index([order_id], map: "order_id")
  @@index([product_id], map: "product_id")
  @@index([product_specification_middle_price_id], map: "product_specification_middle_price_id")
  @@index([shop_id], map: "shop_id")
  @@index([stort_id], map: "stort_id")
}

model order_voucher {
  id                         Int             @id @default(autoincrement())
  type                       Int?            @db.TinyInt
  status                     Int?            @db.TinyInt
  voucher_coupon_id          Int?
  order                      Int?            @db.UnsignedInt
  numer                      Int?            @default(0)
  create_at                  String?         @db.VarChar(255)
  member_voucher             member_voucher? @relation(fields: [voucher_coupon_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "order_voucher_ibfk_1")
  order_orderToorder_voucher order?          @relation(fields: [order], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "order_voucher_ibfk_2")

  @@index([order], map: "order")
  @@index([voucher_coupon_id], map: "voucher_coupon_id")
}

model package_coupons {
  id           Int          @id @default(autoincrement())
  package_id   Int
  type         Int?         @db.TinyInt
  coupon_id    Int?
  gift_id      Int?
  created_time DateTime?    @default(now()) @db.DateTime(0)
  updated_time DateTime?    @default(now()) @db.DateTime(0)
  deleted_time DateTime?    @db.DateTime(0)
  dr           Int          @default(0)
  package_list package_list @relation(fields: [package_id], references: [id], onUpdate: Restrict, map: "package_coupons_ibfk_1")
  coupon       coupon?      @relation(fields: [coupon_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "package_coupons_ibfk_2")
  gift_coupon  gift_coupon? @relation(fields: [gift_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "package_coupons_ibfk_3")

  @@index([coupon_id], map: "coupon_id")
  @@index([gift_id], map: "gift_id")
  @@index([package_id], map: "package_id")
}

model package_list {
  id                         Int               @id @default(autoincrement())
  store_id                   Int?
  status                     Int?
  coupon_package             String            @db.VarChar(50)
  total_quantity             Int
  price                      Decimal?          @db.Decimal(10, 2)
  per_person_limit           Int
  start_time                 DateTime          @db.DateTime(0)
  end_time                   DateTime          @db.DateTime(0)
  coupon_package_description String?           @db.VarChar(255)
  mobile_link                String?           @db.VarChar(255)
  pc_link                    String?           @db.VarChar(255)
  mini_program_link          String?           @db.VarChar(255)
  created_time               DateTime?         @default(now()) @db.DateTime(0)
  updated_time               DateTime?         @default(now()) @db.DateTime(0)
  deleted_time               DateTime?         @db.DateTime(0)
  dr                         Int               @default(0)
  store_info                 store_info?       @relation(fields: [store_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "package_list_ibfk_1")
  package_coupons            package_coupons[]

  @@index([store_id], map: "store_id")
}

model page_show {
  id               Int       @id @default(autoincrement())
  name             String    @db.VarChar(50)
  shop_id          Int?
  button_structure String?   @db.LongText
  structure        String?   @db.LongText
  type             Int       @default(0) @db.TinyInt
  port             String    @default("0") @db.VarChar(50)
  Bulletbox        Boolean?
  style            Int?
  status           Boolean?
  create_time      DateTime? @default(now()) @db.Timestamp(0)
  update_time      DateTime? @default(now()) @db.Timestamp(0)
  dr               Int       @default(0) @db.TinyInt
  page_type        Int       @default(0) @db.TinyInt
}

model payment_activity {
  id                             Int                              @id @default(autoincrement())
  store_id                       Int?
  activity_name                  String                           @db.VarChar(50)
  status                         Int?
  start_time                     DateTime                         @db.DateTime(0)
  end_time                       DateTime                         @db.DateTime(0)
  consume_type                   Int                              @db.TinyInt
  consume_threshold              Decimal?                         @db.Decimal(10, 2)
  buy_product_id                 Int?
  award_trigger                  Int                              @db.TinyInt
  auto_award                     Int                              @default(0) @db.TinyInt
  priority                       Int                              @default(0) @db.TinyInt
  prize_type                     Int                              @db.TinyInt
  prize_name                     String?                          @db.VarChar(50)
  balance                        Decimal?                         @db.Decimal(10, 2)
  points                         Int?
  gift_product_id                Int?
  coupon_id                      Int?
  gift_card_id                   Int?
  prize_image                    String?                          @db.VarChar(255)
  prize_expired_time             DateTime                         @db.DateTime(0)
  no_prize_message               String?                          @db.VarChar(255)
  create_time                    DateTime?                        @db.DateTime(0)
  updated_time                   DateTime                         @default(now()) @db.DateTime(0)
  deleted_time                   DateTime?                        @db.DateTime(0)
  dr                             Int                              @default(0) @db.TinyInt
  product                        product?                         @relation(fields: [gift_product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "payment_activity_ibfk_1")
  coupon                         coupon?                          @relation(fields: [coupon_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "payment_activity_ibfk_2")
  gift_coupon                    gift_coupon?                     @relation(fields: [gift_card_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "payment_activity_ibfk_3")
  store_info                     store_info?                      @relation(fields: [store_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "payment_activity_ibfk_4")
  member_payment_activity_record member_payment_activity_record[]

  @@index([coupon_id], map: "coupon_id")
  @@index([gift_card_id], map: "gift_card_id")
  @@index([gift_product_id], map: "gift_product_id")
  @@index([store_id], map: "store_id")
}

model payment_config {
  id                            Int      @id @default(autoincrement())
  type                          Int?     @default(0) @db.TinyInt
  port                          Int?     @default(1) @db.TinyInt
  open_enabled                  Int?     @default(0) @db.TinyInt
  wx_appid                      String?  @default("") @db.VarChar(32)
  wx_mchid                      String?  @default("") @db.VarChar(32)
  wx_api_key_v2                 String?  @default("") @db.VarChar(32)
  wx_auth_domain                String?  @default("") @db.VarChar(255)
  wx_h5_domain                  String?  @default("") @db.VarChar(255)
  wx_withdraw_enabled           Int?     @default(0) @db.TinyInt
  wx_api_key_v3                 String?  @default("") @db.VarChar(32)
  wx_apiclient_cert             String?  @default("") @db.VarChar(255)
  wx_apiclient_key              String?  @default("") @db.VarChar(255)
  alipay_account                String?  @default("") @db.VarChar(50)
  alipay_pid                    String?  @default("") @db.VarChar(50)
  alipay_key                    String?  @default("") @db.VarChar(50)
  alipay_app_private_key        String?  @default("") @db.VarChar(1024)
  alipay_is_cert                Int?     @default(0) @db.TinyInt
  alipay_app_cert_public_key    String?  @default("") @db.VarChar(1024)
  alipay_alipay_cert_public_key String?  @default("") @db.VarChar(1024)
  alipay_alipay_root_cert       String?  @default("") @db.VarChar(1024)
  cashier_merchant_id           String?  @default("") @db.VarChar(50)
  cashier_account_id            String?  @default("") @db.VarChar(50)
  cashier_md5_key               String?  @default("") @db.VarChar(50)
  bank_withdraw_enabled         Int?     @default(0) @db.TinyInt
  allinpay_merchant_id          String?  @default("") @db.VarChar(50)
  allinpay_username             String?  @default("") @db.VarChar(50)
  allinpay_password             String?  @default("") @db.VarChar(50)
  allinpay_cer_file             String?  @default("") @db.VarChar(255)
  allinpay_p12_file             String?  @default("") @db.VarChar(255)
  partner_code                  String   @default("") @db.VarChar(255)
  credential_code               String   @default("") @db.VarChar(255)
  currency_type                 Int?     @default(0) @db.TinyInt
  payment_name                  String?  @default("") @db.VarChar(255)
  payment_qr                    String?  @default("") @db.VarChar(255)
  payment_desc                  String?  @default("") @db.VarChar(255)
  enabled                       Int?     @default(0) @db.TinyInt
  merchant_id                   String?  @default("") @db.VarChar(50)
  trade_merchant_id             String?  @default("") @db.VarChar(50)
  hjpay_md5_key                 String?  @default("") @db.VarChar(32)
  hjpay_appid                   String?  @default("") @db.VarChar(32)
  hjpay_wx_enabled              Int?     @default(0) @db.TinyInt
  hjpay_alipay_enabled          Int?     @default(0) @db.TinyInt
  hjpay_fastpay_enabled         Int?     @default(0) @db.TinyInt
  hjpay_divided_enabled         Int?     @default(0) @db.TinyInt
  hjpay_auto_divided_enabled    Int?     @default(0) @db.TinyInt
  create_time                   DateTime @default(now()) @db.DateTime(0)
  update_time                   DateTime @default(now()) @db.DateTime(0)
}

model permissions {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(50)
  path                     String?                    @db.VarChar(255)
  ico                      String?                    @db.VarChar(255)
  status                   Int?
  redirect                 String?                    @db.VarChar(255)
  sort                     Int?
  parent_id                Int?
  role_version_permissions role_version_permissions[]
  version_permissions      version_permissions[]

  @@index([parent_id], map: "idx_parent_id")
}

model plan_log {
  id             Int       @id @default(autoincrement())
  file_name      String    @db.VarChar(100)
  task_type      String    @db.VarChar(50)
  status         String    @db.VarChar(20)
  export_content String?   @db.Text
  remark         String?   @db.VarChar(200)
  created_time   DateTime? @default(now()) @db.DateTime(0)
  updated_time   DateTime? @default(now()) @db.DateTime(0)
  deleted_time   DateTime? @default(now()) @db.DateTime(0)
}

model position_privilege {
  id           Int       @id @default(autoincrement())
  position_id  Int
  privilege_id Int
  status       Boolean?  @default(true)
  created_at   DateTime  @default(now()) @db.Timestamp(0)
  updated_at   DateTime  @default(now()) @db.Timestamp(0)
  deleted_at   DateTime  @default(now()) @db.Timestamp(0)
  dr           Boolean?
  positions    positions @relation(fields: [position_id], references: [id], onUpdate: Restrict, map: "position_privilege_ibfk_1")
  sys_dict     sys_dict  @relation(fields: [privilege_id], references: [id], onUpdate: Restrict, map: "position_privilege_ibfk_2")

  @@index([position_id], map: "position_id")
  @@index([privilege_id], map: "privilege_id")
}

model positions {
  id                 Int                  @id @default(autoincrement())
  type               Int?                 @db.TinyInt
  name               String               @db.VarChar(255)
  sort               Int?
  created_at         DateTime             @default(now()) @db.Timestamp(0)
  updated_at         DateTime             @default(now()) @db.Timestamp(0)
  deleted_at         DateTime             @default(now()) @db.Timestamp(0)
  dr                 Boolean?             @default(false)
  employee           employee[]
  position_privilege position_privilege[]

  @@index([name], map: "idx_position_name")
}

model poster_record {
  id               Int           @id @default(autoincrement()) @db.UnsignedInt
  poster_id        Int?          @db.UnsignedInt
  reco_user_id     Int?          @db.UnsignedInt
  reco_user_name   String?       @db.VarChar(255)
  reco_user_tel    String?       @db.VarChar(255)
  be_reco_user_id  Int?          @db.UnsignedInt
  b_reco_user_name String?       @db.VarChar(255)
  b_reco_user_tel  String?       @db.VarChar(255)
  website_id       Int?          @db.UnsignedInt
  shop_id          Int?          @db.UnsignedInt
  created_at       DateTime      @default(now()) @db.Timestamp(0)
  updated_at       DateTime      @default(now()) @db.Timestamp(0)
  deleted_at       DateTime?     @db.Timestamp(0)
  super_poster     super_poster? @relation(fields: [poster_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "poster_record_ibfk_1")

  @@index([poster_id], map: "poster_id")
}

model poster_task {
  id                           Int                @id @default(autoincrement())
  store_id                     Int?
  status                       Int?
  task_name                    String             @db.VarChar(50)
  task_icon_url                String?            @db.VarChar(500)
  reply_keyword                String?            @db.VarChar(50)
  start_time                   DateTime           @default(now()) @db.DateTime(0)
  end_time                     DateTime           @db.DateTime(0)
  task_limit                   Int?
  not_started_hint             String?            @db.VarChar(500)
  ended_hint                   String?            @db.VarChar(500)
  wait_text                    String?            @db.VarChar(500)
  auto_accept_task             Int                @default(0) @db.TinyInt
  repeatable                   Int                @default(0) @db.TinyInt
  task_desc                    String?            @db.Text
  poster_design                String?            @db.Text
  push_type                    Int                @default(0) @db.TinyInt
  push_title                   String?            @db.VarChar(500)
  push_cover                   String?            @db.VarChar(500)
  push_description             String?            @db.VarChar(1000)
  push_link                    String?            @db.VarChar(500)
  permission_setting           Int                @default(0) @db.TinyInt
  not_opened_hint              String?            @db.VarChar(500)
  not_opened_desc_link         String?            @db.VarChar(500)
  follow_to_get_subordinate    Int                @default(0) @db.TinyInt
  follow_to_become_distributor Int                @default(0) @db.TinyInt
  created_time                 DateTime           @default(now()) @db.DateTime(0)
  updated_time                 DateTime?          @db.DateTime(0)
  deleted_time                 DateTime?          @db.DateTime(0)
  dr                           Int                @default(0) @db.TinyInt
  poster_task_rule             poster_task_rule[]
  task_reward                  task_reward[]
}

model poster_task_rule {
  id           Int           @id @default(autoincrement())
  task_id      Int
  rule_type    Int           @db.TinyInt
  rule         String        @db.VarChar(500)
  created_time DateTime      @default(now()) @db.DateTime(0)
  updated_time DateTime?     @db.DateTime(0)
  deleted_time DateTime?     @db.DateTime(0)
  dr           Int           @default(0) @db.TinyInt
  poster_task  poster_task   @relation(fields: [task_id], references: [id], onDelete: Cascade, map: "poster_task_id")
  task_reward  task_reward[]

  @@index([task_id], map: "task_id")
}

model pre_item {
  pre_id     Int?
  pre_type   Int?
  id         Int      @id @default(autoincrement())
  label      String   @db.VarChar(255)
  nick_name  String?  @db.VarChar(255)
  sort       Int?     @default(1)
  intro      String   @db.Text
  revision   Boolean? @default(true)
  parent     String?  @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)
  deleted_at DateTime @default(now()) @db.Timestamp(0)
  dr         Int?     @default(0) @db.TinyInt
  product    product? @relation(fields: [pre_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "pre_item_ibfk_1")

  @@index([pre_id], map: "pre_id")
}

model presale_list {
  id                           Int                            @id @default(autoincrement())
  store_id                     Int?
  status                       Int?
  activity_label               String                         @db.VarChar(50)
  presale_type                 Int                            @db.TinyInt
  start_time                   DateTime                       @db.DateTime(0)
  end_time                     DateTime                       @db.DateTime(0)
  product_id                   Int
  minimum_purchase             Int
  virtual_sales_volume         Int
  final_payment_start_time     DateTime?                      @db.DateTime(0)
  final_payment_end_time       DateTime?                      @db.DateTime(0)
  delivery_time                DateTime?                      @db.DateTime(0)
  mobile_link                  String?                        @db.VarChar(255)
  pc_link                      String?                        @db.VarChar(255)
  mini_program_link            String?                        @db.VarChar(255)
  created_time                 DateTime?                      @default(now()) @db.DateTime(0)
  updated_time                 DateTime?                      @default(now()) @db.DateTime(0)
  deleted_time                 DateTime?                      @db.DateTime(0)
  dr                           Int                            @default(0)
  advance_fee                  Decimal?                       @db.Decimal(10, 2)
  earnest_price                Decimal?                       @db.Decimal(10, 2)
  advance_stock                Int?
  purchase_limit               Int?
  product                      product                        @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "presale_list_ibfk_1")
  store_info                   store_info?                    @relation(fields: [store_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "presale_list_ibfk_2")
  presale_record               presale_record[]
  product_price_group_purchase product_price_group_purchase[]

  @@index([product_id], map: "product_id")
  @@index([store_id], map: "store_id")
}

model presale_record {
  id           Int          @id @default(autoincrement())
  presale_id   Int
  order_id     Int          @db.UnsignedInt
  product_id   Int
  created_time DateTime?    @default(now()) @db.DateTime(0)
  updated_time DateTime?    @default(now()) @db.DateTime(0)
  deleted_time DateTime?    @db.DateTime(0)
  dr           Int          @default(0)
  presale_list presale_list @relation(fields: [presale_id], references: [id], onUpdate: Restrict, map: "presale_record_ibfk_1")
  order        order        @relation(fields: [order_id], references: [id], onUpdate: Restrict, map: "presale_record_ibfk_2")
  product      product      @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "presale_record_ibfk_3")

  @@index([order_id], map: "idx_order_id")
  @@index([presale_id], map: "idx_presale_id")
  @@index([product_id], map: "product_id")
}

model print_style {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  name          String?         @db.VarChar(255)
  width         Int?
  height        Int?
  cutting_point String?         @db.VarChar(255)
  dr            Int?            @db.UnsignedTinyInt
  created_at    DateTime        @default(now()) @db.Timestamp(0)
  updated_at    DateTime        @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?       @db.Timestamp(0)
  form_template form_template[]
}

model prize {
  id                Int            @id @default(autoincrement())
  activity_id       Int            @db.UnsignedInt
  name              String?        @db.VarChar(50)
  prize_type        Int?           @default(0) @db.TinyInt
  prize_name        String?        @db.VarChar(100)
  prize_quantity    Int?
  winning_rate      Float?         @db.Float
  balance           Decimal?       @db.Decimal(10, 2)
  points            Int?
  product_id        Int?
  coupon_id         Int?
  gift_coupon_id    Int?
  prize_image       String?        @db.VarChar(255)
  prize_expire_time DateTime?      @db.DateTime(0)
  missed_prompt     String?        @db.VarChar(100)
  updated_time      DateTime?      @default(now()) @db.DateTime(0)
  deleted_time      DateTime?      @db.DateTime(0)
  dr                Int            @default(0)
  lucky_activity    lucky_activity @relation(fields: [activity_id], references: [id], onUpdate: Restrict, map: "prize_ibfk_1")

  @@index([activity_id], map: "idx_activity_id")
}

model product {
  id                                 Int                                  @id @default(autoincrement())
  store_id                           Int?
  member_id                          Int?                                 @default(0)
  category_id                        Int?
  actrion_id                         Int?
  div_prd_id                         Int?                                 @default(0)
  sort                               Int?
  name                               String                               @db.VarChar(255)
  product_type                       Boolean?                             @default(false)
  type                               Int
  subtitle                           String?                              @db.VarChar(255)
  exchange_number                    Int?
  exchange_max_number                Int?
  divend_price                       Decimal?                             @db.Decimal(10, 2)
  sale_price                         Decimal?                             @db.Decimal(10, 2)
  marked_price                       Decimal?                             @db.Decimal(10, 2)
  purchase_cost                      Decimal?                             @db.Decimal(10, 2)
  stock                              Int
  stock_warning                      Int?
  stock_status                       Int?
  promotion_status                   Int?
  status_created                     DateTime?                            @db.DateTime(0)
  status                             Int                                  @db.TinyInt
  link_pc                            String?                              @db.VarChar(255)
  link_applet                        String?                              @db.VarChar(255)
  link_computer                      String?                              @db.VarChar(255)
  audi_status                        Int?                                 @db.TinyInt
  reason                             String?                              @db.VarChar(255)
  created_at                         DateTime?                            @default(now()) @db.DateTime(0)
  updated_at                         DateTime?                            @default(now()) @db.DateTime(0)
  deleted_at                         DateTime?                            @db.DateTime(0)
  is_deleted                         Int                                  @db.TinyInt
  source_id                          String?                              @db.VarChar(256)
  source_type                        Int?                                 @default(0)
  volume                             String?                              @db.VarChar(255)
  weight                             String?                              @db.VarChar(255)
  pieces                             Int?                                 @default(0)
  source_sale_price                  Decimal?                             @db.Decimal(10, 2)
  product_categories                 product_categories?                  @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_ibfk_1")
  store_info                         store_info?                          @relation(fields: [store_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_ibfk_3")
  product_action                     product_action?                      @relation(fields: [actrion_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_ibfk_4")
  agent_level_product                agent_level_product[]
  article_product                    article_product[]
  bargain_activity                   bargain_activity[]
  captain_level_product              captain_level_product[]
  coupon_package_coupons             coupon_package_coupons[]
  coupon_product                     coupon_product[]
  discount_product                   discount_product[]
  distrbution_product                distrbution_product[]
  festival_activity                  festival_activity[]
  follow_activity                    follow_activity[]
  gift                               gift[]
  global_level_product               global_level_product[]
  group_buying                       group_buying[]
  group_purchase_list                group_purchase_list[]
  limited_time_product               limited_time_product[]
  material                           material[]
  member_cart                        member_cart[]
  member_favorite                    member_favorite[]
  member_product                     member_product[]
  member_shop_cart                   member_shop_cart[]
  order_products                     order_products[]
  payment_activity                   payment_activity[]
  pre_item                           pre_item[]
  presale_list                       presale_list[]
  presale_record                     presale_record[]
  product_abbreviation               product_abbreviation[]
  product_attribute                  product_attribute[]
  product_content                    product_content[]
  product_details                    product_details[]
  product_discount                   product_discount[]
  product_images                     product_images[]
  product_other_categories           product_other_categories[]
  product_permission                 product_permission[]
  product_price                      product_price[]
  product_review                     product_review[]
  product_shop_middle                product_shop_middle[]
  product_specification              product_specification[]
  product_specification_middle_price product_specification_middle_price[]
  product_tag_mapping                product_tag_mapping[]
  refund_pre_log                     refund_pre_log[]
  seckill_activity                   seckill_activity[]
  store_info_cart                    store_info_cart[]
  store_product                      store_product[]

  @@index([actrion_id], map: "actrion_id")
  @@index([category_id], map: "idx_category_id")
  @@index([is_deleted], map: "idx_is_deleted")
  @@index([status], map: "idx_status")
  @@index([store_id], map: "store_id")
}

model product_abbreviation {
  id           Int       @id @default(autoincrement()) @db.UnsignedInt
  product_id   Int?
  abbreviation String?   @db.VarChar(255)
  created_at   DateTime  @default(now()) @db.Timestamp(0)
  updated_at   DateTime  @default(now()) @db.Timestamp(0)
  deleted_at   DateTime? @db.Timestamp(0)
  source_id    String?   @db.VarChar(256)
  source_type  Int?
  store_id     Int?
  product      product?  @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_abbreviation_ibfk_1")

  @@index([product_id], map: "product_id")
}

model product_action {
  id                                 Int                                  @id @default(autoincrement())
  sales                              Int
  favorites                          Int
  created_time                       DateTime?                            @default(now()) @db.DateTime(0)
  dr                                 Int
  source_id                          String?                              @db.VarChar(256)
  source_type                        Int?
  store_id                           Int?
  product                            product[]
  product_specification_middle_price product_specification_middle_price[]
}

model product_attribute {
  id               Int       @id @default(autoincrement())
  product_id       Int?
  name             String?   @db.VarChar(255)
  type             String?   @db.VarChar(255)
  attribute_values String?   @db.VarChar(255)
  sort             Int?
  created_at       DateTime? @default(now()) @db.Timestamp(0)
  updated_at       DateTime? @default(now()) @db.Timestamp(0)
  deleted_at       DateTime? @db.Timestamp(0)
  dr               Boolean?  @default(false)
  source_id        String?   @db.VarChar(256)
  source_type      Int?
  store_id         Int?
  product          product?  @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_attribute_ibfk_1")

  @@index([product_id], map: "idx_produc_id")
}

model product_brand {
  id              Int               @id @default(autoincrement())
  name            String?           @db.VarChar(255)
  initial         String?           @db.Char(1)
  image_url       String?           @db.VarChar(255)
  sort            Int?
  is_displayed    Boolean?          @default(false)
  created_at      DateTime?         @default(now()) @db.Timestamp(0)
  updated_at      DateTime?         @default(now()) @db.Timestamp(0)
  deleted_at      DateTime?         @db.Timestamp(0)
  dr              Boolean?
  source_id       String?           @db.VarChar(256)
  source_type     Int?
  store_id        Int?
  category_brand  category_brand[]
  product_details product_details[]
}

model product_categories {
  id                                                                                                                        Int                                       @id @default(autoincrement())
  name                                                                                                                      String                                    @db.VarChar(255)
  img                                                                                                                       String?                                   @db.VarChar(255)
  full_name                                                                                                                 String?                                   @db.VarChar(255)
  category_id                                                                                                               Int?
  is_visible                                                                                                                Int                                       @default(1) @db.TinyInt
  sort_order                                                                                                                Int?
  platform_commission                                                                                                       Decimal?                                  @db.Decimal(10, 2)
  parent_category_id                                                                                                        Int?                                      @default(0)
  parent_category_name                                                                                                      String?                                   @db.VarChar(255)
  created_at                                                                                                                DateTime?                                 @default(now()) @db.DateTime(0)
  created_by                                                                                                                Int?
  updated_at                                                                                                                DateTime?                                 @default(now()) @db.DateTime(0)
  deleted_at                                                                                                                DateTime?                                 @db.DateTime(0)
  is_deleted                                                                                                                Int                                       @db.TinyInt
  source_id                                                                                                                 String?                                   @db.VarChar(256)
  source_type                                                                                                               Int?
  store_id                                                                                                                  Int?
  product_category                                                                                                          product_category?                         @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_categories_ibfk_1")
  categories_image_middle                                                                                                   categories_image_middle[]
  category_classification                                                                                                   category_classification[]
  coupon_product                                                                                                            coupon_product[]
  discount_product                                                                                                          discount_product[]
  limited_time_product                                                                                                      limited_time_product[]
  product                                                                                                                   product[]
  product_inner_categories_out_categories_product_categoriesToproduct_inner_categories_out_categories_out_categories_id     product_inner_categories_out_categories[] @relation("product_categoriesToproduct_inner_categories_out_categories_out_categories_id")
  product_inner_categories_out_categories_product_categoriesToproduct_inner_categories_out_categories_product_categories_id product_inner_categories_out_categories[] @relation("product_categoriesToproduct_inner_categories_out_categories_product_categories_id")
  product_other_categories                                                                                                  product_other_categories[]

  @@index([category_id], map: "category_id")
  @@index([is_deleted], map: "idx_is_deleted")
  @@index([is_visible], map: "idx_is_visible")
  @@index([parent_category_id], map: "idx_parent_category_id")
}

model product_category {
  id                      Int                       @id @default(autoincrement())
  name                    String?                   @db.VarChar(255)
  sort                    Int?
  is_displayed            Int?                      @db.TinyInt
  created_at              DateTime?                 @default(now()) @db.Timestamp(0)
  updated_at              DateTime?                 @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?                 @db.Timestamp(0)
  dr                      Boolean?                  @default(false)
  source_id               String?                   @db.VarChar(256)
  source_type             Int?
  store_id                Int?
  category_attribute      category_attribute[]
  category_brand          category_brand[]
  category_classification category_classification[]
  category_specification  category_specification[]
  product_categories      product_categories[]
}

model product_content {
  id            Int       @id @default(autoincrement()) @db.UnsignedInt
  product_id    Int
  content_name  String    @db.VarChar(100)
  content       String?   @db.VarChar(255)
  media_type    Int       @db.UnsignedTinyInt
  support_trial Int       @db.UnsignedTinyInt
  sort_order    Int
  create_time   DateTime  @default(now()) @db.Timestamp(0)
  update_time   DateTime? @default(now()) @db.Timestamp(0)
  dr            Int       @default(0) @db.TinyInt
  source_id     String?   @db.VarChar(256)
  source_type   Int?
  store_id      Int?
  product       product   @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_content_ibfk_1")

  @@index([product_id, sort_order], map: "idx_product_sort")
}

model product_details {
  id                              Int                 @id @default(autoincrement())
  product_id                      Int
  details                         String?             @db.Text
  brand_id                        Int?
  sku_code                        String?             @db.VarChar(255)
  product_code                    String?             @db.VarChar(255)
  limit_purchase                  Int?
  min_purchase_quantity           Int?
  virtual_sales                   Int?
  sort_order                      Int?
  stock_warning                   Int?
  logistics_type                  Int?                @db.TinyInt
  shipping_template_id            Int?
  shipping_price                  Decimal?            @db.Decimal(10, 2)
  address_components              String?             @db.Text
  bonus_percentage                Decimal?            @db.Decimal(5, 2)
  max_redemption_percentage       Decimal?            @db.Decimal(5, 2)
  bonus_on_positive_review        Int?                @db.TinyInt
  is_open_form                    Int?                @db.TinyInt
  form_id                         Int?
  is_order_form                   Int?                @db.TinyInt
  verification_number             Int?
  card_mode                       Int?
  effectively_type                Int?
  effectively_time                DateTime?           @db.DateTime(0)
  cashier                         Int?                @db.TinyInt
  cashier_calculation_method      Decimal?            @db.Decimal(10, 2)
  verification_calculation_method Decimal?            @db.Decimal(10, 2)
  express_delivery                Int?                @db.TinyInt
  is_open_voucher                 Int?
  voucher_json                    String?             @db.VarChar(255)
  created_at                      DateTime?           @default(now()) @db.DateTime(0)
  updated_at                      DateTime?           @default(now()) @db.DateTime(0)
  deleted_at                      DateTime?           @db.DateTime(0)
  is_deleted                      Int                 @default(0) @db.TinyInt
  source_id                       String?             @db.VarChar(256)
  source_type                     Int?
  store_id                        Int?
  product                         product             @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "product_details_ibfk_1")
  logistics_template              logistics_template? @relation(fields: [shipping_template_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_details_ibfk_2")
  product_brand                   product_brand?      @relation(fields: [brand_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_details_ibfk_3")

  @@index([brand_id], map: "brand_id")
  @@index([is_deleted], map: "idx_is_deleted")
  @@index([product_id], map: "idx_product_id")
  @@index([shipping_template_id], map: "idx_shipping_template_id")
}

model product_discount {
  id                                    Int                                 @id @default(autoincrement())
  product_id                            Int?
  product_specification_middle_price_id Int?
  discount_status                       Boolean                             @default(false)
  discount_type                         Int                                 @db.TinyInt
  discount_mode                         Boolean                             @default(false)
  is_type                               Boolean?
  created_at                            DateTime                            @default(now()) @db.DateTime(0)
  updated_at                            DateTime                            @default(now()) @db.DateTime(0)
  deleted_at                            DateTime?                           @db.DateTime(0)
  is_deleted                            Int                                 @default(0) @db.TinyInt
  source_id                             String?                             @db.VarChar(256)
  source_type                           Int?
  store_id                              Int?
  product                               product?                            @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_discount_ibfk_1")
  product_specification_middle_price    product_specification_middle_price? @relation(fields: [product_specification_middle_price_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_discount_ibfk_2")
  discount_details                      discount_details[]

  @@index([discount_type], map: "idx_discount_type")
  @@index([is_deleted], map: "idx_is_deleted")
  @@index([product_id], map: "idx_product_id")
  @@index([product_specification_middle_price_id], map: "product_specification_middle_price_id")
}

model product_dividend {
  id                      Int                @id @default(autoincrement())
  product_price_id        Int
  is_dividend             Int                @default(0) @db.TinyInt
  dividend_type           Int                @db.TinyInt
  is_custom_rule          Int                @default(0) @db.TinyInt
  is_doule_rule           Int                @default(0) @db.TinyInt
  is_custom_calculation   Int                @default(0) @db.TinyInt
  custom_calculation_type Int?               @db.TinyInt
  created_at              DateTime?          @db.DateTime(0)
  updated_at              DateTime           @db.DateTime(0)
  deleted_at              DateTime?          @db.DateTime(0)
  is_deleted              Int                @default(0) @db.TinyInt
  source_id               String?            @db.VarChar(256)
  source_type             Int?
  store_id                Int?
  product_price           product_price      @relation(fields: [product_price_id], references: [id], onUpdate: Restrict, map: "product_dividend_ibfk_1")
  dividend_details        dividend_details[]

  @@index([dividend_type], map: "idx_dividend_type")
  @@index([is_custom_rule], map: "idx_is_custom_rule")
  @@index([product_price_id], map: "product_id")
}

model product_images {
  id            Int       @id @default(autoincrement())
  product_id    Int
  image_type    String?   @db.VarChar(255)
  image_url     String?   @db.VarChar(255)
  poster_html   String?   @db.LongText
  created_at    DateTime? @default(now()) @db.DateTime(0)
  updated_at    DateTime? @default(now()) @db.DateTime(0)
  deleted_at    DateTime? @db.DateTime(0)
  is_deleted    Int?      @default(0) @db.TinyInt
  source_id     String?   @db.VarChar(256)
  source_type   Int?
  store_id      Int?
  default_image Int?
  product       product   @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "product_images_ibfk_1")

  @@index([is_deleted], map: "idx_is_deleted")
  @@index([product_id], map: "idx_product_id")
}

model product_inner_categories_out_categories {
  id                                                                                                   Int                @id @default(autoincrement())
  createdAt                                                                                            DateTime           @default(now())
  updatedAt                                                                                            DateTime
  deletedAt                                                                                            DateTime?
  out_categories_id                                                                                    Int
  source_id                                                                                            String
  source_type                                                                                          Int
  store_id                                                                                             String
  product_categories_id                                                                                Int
  product_categories_product_categoriesToproduct_inner_categories_out_categories_out_categories_id     product_categories @relation("product_categoriesToproduct_inner_categories_out_categories_out_categories_id", fields: [out_categories_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "out_categories_id_fk")
  product_categories_product_categoriesToproduct_inner_categories_out_categories_product_categories_id product_categories @relation("product_categoriesToproduct_inner_categories_out_categories_product_categories_id", fields: [product_categories_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_categories_id_fk")

  @@index([out_categories_id], map: "out_categories_id_fk")
  @@index([product_categories_id], map: "product_categories_id_fk")
}

model product_other_categories {
  id                  Int                 @id @default(autoincrement())
  product_id          Int?
  other_category_id   Int?
  other_category_name String?             @db.VarChar(255)
  created_at          DateTime?           @default(now()) @db.Timestamp(0)
  updated_at          DateTime?           @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?           @db.Timestamp(0)
  dr                  Boolean?            @default(false)
  source_id           String?             @db.VarChar(256)
  source_type         Int?
  store_id            Int?
  product             product?            @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_other_categories_ibfk_1")
  product_categories  product_categories? @relation(fields: [other_category_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_other_categories_ibfk_2")

  @@index([other_category_id], map: "other_category_id")
  @@index([product_id], map: "product_id")
}

model product_permission {
  id                        Int                         @id @default(autoincrement())
  product_id                Int?
  name                      String                      @db.VarChar(255)
  type                      Int
  created_at                DateTime?                   @default(now()) @db.Timestamp(0)
  updated_at                DateTime?                   @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?                   @db.Timestamp(0)
  dr                        Boolean?                    @default(false)
  source_id                 String?                     @db.VarChar(256)
  source_type               Int?
  store_id                  Int?
  product                   product?                    @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_permission_ibfk_1")
  product_permission_detail product_permission_detail[]

  @@index([deleted_at], map: "idx_deleted_at")
  @@index([name, type], map: "idx_name_type")
  @@index([product_id], map: "product_id")
}

model product_permission_detail {
  detail_id          Int                 @id @default(autoincrement())
  detail_name        String              @db.VarChar(255)
  permission_id      Int?
  created_at         DateTime?           @default(now()) @db.Timestamp(0)
  updated_at         DateTime?           @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?           @db.Timestamp(0)
  dr                 Boolean?            @default(false)
  source_id          String?             @db.VarChar(256)
  source_type        Int?
  store_id           Int?
  product_permission product_permission? @relation(fields: [permission_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_permission_detail_ibfk_1")

  @@index([deleted_at], map: "idx_deleted_at")
  @@index([permission_id], map: "idx_permission_id")
}

model product_price {
  id                                 Int                                  @id @default(autoincrement())
  prd_id                             Int?
  pre_type                           Int
  sale_price                         Decimal                              @db.Decimal(10, 2)
  listing_id                         Int?
  listing_store_id                   Int?
  listing_status                     Int?                                 @default(0)
  min_order_quantity                 Int?                                 @default(0)
  coupon_amount                      Decimal?                             @default(0.00) @db.Decimal(10, 2)
  coupon_rebate                      Decimal?                             @default(0.00) @db.Decimal(10, 2)
  marked_price                       Decimal?                             @db.Decimal(10, 2)
  purchase_cost                      Decimal                              @db.Decimal(10, 2)
  participate_price                  Decimal?                             @db.Decimal(10, 2)
  max_discount_price                 Decimal?                             @db.Decimal(10, 2)
  actual_pay_price                   Decimal                              @db.Decimal(10, 2)
  profit                             Decimal?                             @db.Decimal(10, 2)
  min_sale_price                     Decimal?                             @db.Decimal(10, 2)
  max_sale_price                     Decimal?                             @db.Decimal(10, 2)
  channel_settlement_price           Decimal?                             @db.Decimal(10, 2)
  distribution_status                Int?                                 @default(0)
  distribution_commission            Decimal?                             @default(0.00) @db.Decimal(10, 2)
  first_level_commission             Decimal?                             @default(0.00) @db.Decimal(10, 2)
  second_level_commission            Decimal?                             @default(0.00) @db.Decimal(10, 2)
  team_bonus                         Decimal?                             @default(0.00) @db.Decimal(10, 2)
  regional_bonus                     Decimal?                             @default(0.00) @db.Decimal(10, 2)
  global_bonus                       Decimal?                             @default(0.00) @db.Decimal(10, 2)
  channel_rebate_status              Int?                                 @default(0)
  channel_rebate_ratio               Decimal?                             @default(0.00) @db.Decimal(10, 2)
  channel_rebate_amount              Decimal?                             @default(0.00) @db.Decimal(10, 2)
  merchant_rebate_amount             Decimal?                             @default(0.00) @db.Decimal(10, 2)
  province_agent_rebate_amount       Decimal?                             @default(0.00) @db.Decimal(10, 2)
  city_agent_rebate_amount           Decimal?                             @default(0.00) @db.Decimal(10, 2)
  district_agent_rebate_amount       Decimal?                             @default(0.00) @db.Decimal(10, 2)
  platform_rebate_amount             Decimal?                             @default(0.00) @db.Decimal(10, 2)
  merchant_deduction                 Decimal?                             @db.Decimal(10, 2)
  create_time                        DateTime?                            @default(now()) @db.Timestamp(0)
  update_time                        DateTime                             @default(now()) @db.Timestamp(0)
  delete_time                        DateTime?                            @db.Timestamp(0)
  dr                                 Int                                  @default(0)
  source_id                          String?                              @db.VarChar(256)
  source_type                        Int?
  store_id                           Int?
  product                            product?                             @relation(fields: [prd_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_price_ibfk_3")
  product_dividend                   product_dividend[]
  product_specification_middle_price product_specification_middle_price[]

  @@index([prd_id], map: "prd_id")
}

model product_price_group_purchase {
  id                                    Int                                @id @default(autoincrement())
  group_purchase_id                     Int?
  group_purchase_list_id                Int?
  presale_list_id                       Int?
  product_specification_middle_price_id Int
  purchase_limit                        Decimal?                           @db.Decimal(10, 2)
  earnest_price                         Decimal?                           @db.Decimal(10, 2)
  group_price                           Decimal?                           @db.Decimal(10, 2)
  inventory                             Int?
  created_time                          DateTime?                          @default(now()) @db.DateTime(0)
  updated_time                          DateTime?                          @default(now()) @db.DateTime(0)
  deleted_time                          DateTime?                          @db.DateTime(0)
  dr                                    Int                                @default(0)
  source_id                             String?                            @db.VarChar(256)
  source_type                           Int?
  store_id                              Int?
  product_specification_middle_price    product_specification_middle_price @relation(fields: [product_specification_middle_price_id], references: [id], onUpdate: Restrict, map: "product_price_group_purchase_ibfk_1")
  group_buying                          group_buying?                      @relation(fields: [group_purchase_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_price_group_purchase_ibfk_2")
  group_purchase_list                   group_purchase_list?               @relation(fields: [group_purchase_list_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_price_group_purchase_ibfk_3")
  presale_list                          presale_list?                      @relation(fields: [presale_list_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_price_group_purchase_ibfk_4")

  @@index([group_purchase_id], map: "group_purchase_id")
  @@index([group_purchase_list_id], map: "group_purchase_list_id")
  @@index([presale_list_id], map: "presale_list_id")
  @@index([product_specification_middle_price_id], map: "product_specification_middle_price_id")
}

model product_review {
  id                   Int              @id @default(autoincrement())
  product_id           Int?
  rating               Int?             @db.TinyInt
  comment              String?          @db.Text
  parent_id            Int?
  member_id            Int?
  created_at           DateTime?        @db.Timestamp(0)
  updated_at           DateTime?        @db.Timestamp(0)
  deleted_at           DateTime?        @db.Timestamp(0)
  dr                   Boolean?
  source_id            String?          @db.VarChar(256)
  source_type          Int?
  store_id             Int?
  product              product?         @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_review_ibfk_1")
  member               member?          @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_review_ibfk_3")
  product_review       product_review?  @relation("product_reviewToproduct_review", fields: [parent_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_review_ibfk_4")
  other_product_review product_review[] @relation("product_reviewToproduct_review")
  review_image         review_image[]

  @@index([product_id], map: "idx_product_id")
  @@index([member_id], map: "member_id")
  @@index([parent_id], map: "parent_id")
}

model product_shop_middle {
  id          Int     @id @default(autoincrement())
  product_id  Int
  shop_id     BigInt
  creat_at    String? @db.VarChar(255)
  update_at   String? @db.VarChar(255)
  delect_at   String? @db.VarChar(255)
  dr          String? @db.VarChar(255)
  source_id   String? @db.VarChar(256)
  source_type Int?
  store_id    Int?
  product     product @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "product_shop_middle_ibfk_1")
  shop        shop    @relation(fields: [shop_id], references: [id], onUpdate: Restrict, map: "product_shop_middle_ibfk_2")

  @@index([product_id], map: "product_id")
  @@index([shop_id], map: "shop_id")
}

model product_specification {
  id             Int            @id @default(autoincrement())
  secifcation_id Int?
  product_id     Int
  name           String?        @db.VarChar(255)
  spec_value     String         @db.VarChar(1024)
  display_method String?        @db.VarChar(255)
  status         Int?           @default(0)
  created_at     DateTime       @default(now()) @db.DateTime(0)
  updated_at     DateTime       @default(now()) @db.DateTime(0)
  deleted_at     DateTime?      @db.DateTime(0)
  dr             Int            @db.TinyInt
  source_id      String?        @db.VarChar(256)
  source_type    Int?
  store_id       Int?
  product        product        @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "product_specification_ibfk_1")
  specification  specification? @relation(fields: [secifcation_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_specification_ibfk_2")

  @@index([product_id], map: "idx_product_id")
  @@index([secifcation_id], map: "secifcation_id")
}

model product_specification_middle_price {
  id                           Int                            @id @default(autoincrement())
  product_id                   Int
  product_price_id             Int?
  pre_type                     Int?
  action_id                    Int?
  spec_value                   String                         @db.VarChar(255)
  selling_price                Decimal                        @db.Decimal(10, 2)
  market_price                 Decimal?                       @db.Decimal(10, 2)
  cost_price                   Decimal?                       @db.Decimal(10, 2)
  activity_price               Decimal?                       @db.Decimal(10, 2)
  earnest_price                Decimal?                       @db.Decimal(10, 2)
  stock                        Int?                           @default(0)
  product_code                 String?                        @db.VarChar(255)
  purchase_limit               Int?
  dr                           Int?                           @default(0)
  source_id                    String?                        @db.VarChar(256)
  source_type                  Int?
  store_id                     Int?
  product                      product                        @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "product_specification_middle_price_ibfk_1")
  product_action               product_action?                @relation(fields: [action_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_specification_middle_price_ibfk_2")
  product_price                product_price?                 @relation(fields: [product_price_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_specification_middle_price_ibfk_3")
  member_cart                  member_cart[]
  member_shop_cart             member_shop_cart[]
  order_products               order_products[]
  product_discount             product_discount[]
  product_price_group_purchase product_price_group_purchase[]
  refund_pre_log               refund_pre_log[]
  store_info_cart              store_info_cart[]

  @@index([action_id], map: "action_id")
  @@index([product_id], map: "idx_product_id")
  @@index([spec_value], map: "idx_spec_value")
  @@index([product_price_id], map: "product_price_id")
}

model product_tag_mapping {
  id           Int           @id @default(autoincrement())
  product_id   Int
  tag_id       Int?
  created_at   DateTime      @default(now()) @db.DateTime(0)
  updated_at   DateTime      @default(now()) @db.DateTime(0)
  deleted_at   DateTime?     @db.DateTime(0)
  dr           Int           @db.TinyInt
  source_id    String?       @db.VarChar(256)
  source_type  Int?
  store_id     Int?
  product_tags product_tags? @relation(fields: [tag_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_tag_mapping_ibfk_1")
  product      product       @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "product_tag_mapping_ibfk_2")

  @@index([product_id], map: "idx_product_id")
  @@index([tag_id], map: "tag_id")
}

model product_tags {
  id                  Int                   @id @default(autoincrement())
  tag_name            String                @db.VarChar(255)
  created_at          DateTime              @default(now()) @db.DateTime(0)
  updated_at          DateTime              @default(now()) @db.DateTime(0)
  deleted_at          DateTime?             @db.DateTime(0)
  is_deleted          Int                   @db.TinyInt
  source_id           String?               @db.VarChar(256)
  source_type         Int?
  store_id            Int?
  product_tag_mapping product_tag_mapping[]

  @@index([is_deleted], map: "idx_is_deleted")
}

model purchase_order {
  id                                             Int                      @id @default(autoincrement()) @db.UnsignedInt
  order_id                                       Int                      @db.UnsignedInt
  store_id                                       Int
  pay_money                                      Decimal                  @db.Decimal(10, 2)
  status                                         Int
  user_id                                        Int
  pay_time                                       DateTime?                @db.DateTime(0)
  create_time                                    DateTime                 @default(now()) @db.Timestamp(0)
  delete_time                                    DateTime?                @db.Timestamp(0)
  update_time                                    DateTime                 @default(now()) @db.Timestamp(0)
  dr                                             Int                      @default(0) @db.UnsignedTinyInt
  order                                          order                    @relation(fields: [order_id], references: [id], onUpdate: Restrict, map: "purchase_order_ibfk_1")
  store_info_purchase_order_store_idTostore_info store_info               @relation("purchase_order_store_idTostore_info", fields: [store_id], references: [id], onUpdate: Restrict, map: "purchase_order_ibfk_2")
  store_info_purchase_order_user_idTostore_info  store_info               @relation("purchase_order_user_idTostore_info", fields: [user_id], references: [id], onUpdate: Restrict, map: "purchase_order_ibfk_3")
  purchase_order_product                         purchase_order_product[]
  supply_order                                   supply_order[]

  @@index([order_id], map: "order_id")
  @@index([store_id], map: "store_id")
  @@index([user_id], map: "user_id")
}

model purchase_order_product {
  id                Int            @id @default(autoincrement()) @db.UnsignedInt
  order_id          Int            @db.UnsignedInt
  order_products_id Int            @db.UnsignedInt
  create_time       DateTime       @default(now()) @db.Timestamp(0)
  delete_time       DateTime?      @db.Timestamp(0)
  update_time       DateTime       @default(now()) @db.Timestamp(0)
  dr                Int            @default(0) @db.UnsignedTinyInt
  purchase_order    purchase_order @relation(fields: [order_id], references: [id], onUpdate: Restrict, map: "purchase_order_product_ibfk_1")
  order_products    order_products @relation(fields: [order_products_id], references: [id], onUpdate: Restrict, map: "purchase_order_product_ibfk_2")

  @@index([order_id], map: "order_id")
  @@index([order_products_id], map: "order_products_id")
}

model question {
  id                Int                @id @default(autoincrement()) @db.UnsignedInt
  question_name     String             @db.VarChar(255)
  category_id       Int?
  content           String             @db.Text
  sort              Int
  is_displayed      Boolean
  dr                Int
  created_at        DateTime           @db.DateTime(0)
  updated_at        DateTime           @db.DateTime(0)
  deleted_at        DateTime?          @db.DateTime(0)
  question_category question_category? @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "question_ibfk_1")

  @@index([category_id], map: "category_id")
}

model question_category {
  id            Int        @id @default(autoincrement())
  sort          Int        @default(0)
  category_name String     @db.VarChar(50)
  is_displayed  Boolean    @default(false)
  created_time  DateTime?  @db.DateTime(0)
  updated_time  DateTime?  @db.DateTime(0)
  deleted_time  DateTime?  @db.DateTime(0)
  dr            Boolean?
  question      question[]
}

model recharge_card {
  id                            Int                             @id @default(autoincrement())
  store_id                      Int?
  name                          String                          @db.VarChar(255)
  img                           String?                         @db.VarChar(255)
  gift_description              String?                         @db.Text
  recharge_amount               Decimal                         @db.Decimal(10, 2)
  bonus_type                    Int?
  bonus_points                  Int
  share_id                      Int?
  created_time                  DateTime?                       @default(now()) @db.DateTime(0)
  updated_time                  DateTime?                       @default(now()) @db.DateTime(0)
  dr                            Int                             @default(0)
  coupon_package_list           coupon_package_list?            @relation(fields: [share_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "recharge_card_ibfk_1")
  memebr_recharge_card          memebr_recharge_card[]
  order_package                 order_package[]
  recharge_card_package_coupons recharge_card_package_coupons[]

  @@index([share_id], map: "share_id")
}

model recharge_card_package_coupons {
  id                  Int                  @id @default(autoincrement())
  recharge_card_id    Int?
  coupon_package_id   Int?
  coupon_id           Int?
  gift_id             Int?
  voucher_id          Int?
  created_time        DateTime?            @default(now()) @db.DateTime(0)
  updated_time        DateTime?            @default(now()) @db.DateTime(0)
  deleted_time        DateTime?            @db.DateTime(0)
  dr                  Int                  @default(0)
  coupon_package_list coupon_package_list? @relation(fields: [coupon_package_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "recharge_card_package_coupons_ibfk_1")
  coupon              coupon?              @relation(fields: [coupon_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "recharge_card_package_coupons_ibfk_2")
  gift_coupon         gift_coupon?         @relation(fields: [gift_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "recharge_card_package_coupons_ibfk_3")
  voucher_coupon      voucher_coupon?      @relation(fields: [voucher_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "recharge_card_package_coupons_ibfk_4")
  recharge_card       recharge_card?       @relation(fields: [recharge_card_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "recharge_card_package_coupons_ibfk_5")

  @@index([coupon_id], map: "coupon_id")
  @@index([coupon_package_id], map: "coupon_package_id")
  @@index([gift_id], map: "gift_id")
  @@index([recharge_card_id], map: "recharge_card_id")
  @@index([voucher_id], map: "voucher_id")
}

model refund_log {
  id                Int                 @id @default(autoincrement()) @db.UnsignedInt
  order_id          Int                 @db.UnsignedInt
  action_type       Int                 @db.TinyInt
  mony_type         Int?                @db.TinyInt
  refund_amount     Decimal?            @db.Decimal(10, 2)
  remark            String?             @db.VarChar(255)
  reason            String?             @db.VarChar(255)
  company_code      String?             @db.VarChar(255)
  code              String?             @db.VarChar(255)
  operator          String?             @db.VarChar(255)
  action_time       DateTime            @db.DateTime(0)
  dr                Boolean?            @default(false)
  created_at        DateTime?           @db.DateTime(0)
  updated_at        DateTime?           @db.DateTime(0)
  deleted_at        DateTime?           @default(now()) @db.Timestamp(0)
  order             order               @relation(fields: [order_id], references: [id], onDelete: Cascade, map: "fk_order_refund_log")
  refund_log_images refund_log_images[]
  refund_pre_log    refund_pre_log[]

  @@index([order_id], map: "fk_order_refund_log")
}

model refund_log_images {
  id            Int        @id @default(autoincrement()) @db.UnsignedInt
  refund_log_id Int        @db.UnsignedInt
  image_url     String?    @db.VarChar(255)
  created_at    DateTime?  @default(now()) @db.DateTime(0)
  updated_at    DateTime?  @default(now()) @db.DateTime(0)
  deleted_at    DateTime?  @db.DateTime(0)
  is_deleted    Int?       @default(0) @db.TinyInt
  refund_log    refund_log @relation(fields: [refund_log_id], references: [id], onUpdate: Restrict, map: "fk_refund_log_images_refund_log_id")

  @@index([is_deleted], map: "idx_is_deleted")
  @@index([refund_log_id], map: "idx_refund_log_id")
}

model refund_pre_log {
  id                                 Int                                 @id @default(autoincrement())
  refund_log_id                      Int?                                @db.UnsignedInt
  product_id                         Int?
  product_specification_id           Int?
  num                                Int?
  create_at                          DateTime?                           @db.DateTime(0)
  update_at                          DateTime?                           @db.DateTime(0)
  dr                                 Int?                                @db.TinyInt
  refund_log                         refund_log?                         @relation(fields: [refund_log_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "refund_pre_log_ibfk_1")
  product                            product?                            @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "refund_pre_log_ibfk_2")
  product_specification_middle_price product_specification_middle_price? @relation(fields: [product_specification_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "refund_pre_log_ibfk_3")

  @@index([product_id], map: "prd_id")
  @@index([product_specification_id], map: "product_specification_id")
  @@index([refund_log_id], map: "refund_log_id")
}

model revenue {
  id                      Int       @id @default(autoincrement()) @db.UnsignedInt
  external_transaction_id String    @db.VarChar(255)
  consumption_type        Int       @db.TinyInt
  revenue_type            Int       @db.TinyInt
  income_platform         Int       @db.TinyInt
  payment_type            Int       @db.TinyInt
  income_amount           Decimal   @default(0.00) @db.Decimal(10, 2)
  created_at              DateTime? @default(now()) @db.Timestamp(0)
  dr                      Boolean?
}

model review_image {
  id             Int            @id @default(autoincrement())
  review_id      Int
  image_name     String?        @db.VarChar(255)
  image_url      String?        @db.VarChar(255)
  created_at     DateTime?      @default(now()) @db.Timestamp(0)
  updated_at     DateTime?      @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?      @db.Timestamp(0)
  dr             Boolean?
  product_review product_review @relation(fields: [review_id], references: [id], onUpdate: Restrict, map: "review_image_ibfk_1")

  @@index([review_id], map: "review_id")
}

model role_version_permissions {
  id               Int           @id @default(autoincrement())
  role_versions_id Int
  permission_id    Int
  create_time      DateTime?     @db.DateTime(0)
  update_time      DateTime?     @db.DateTime(0)
  delete_time      DateTime?     @db.DateTime(0)
  dr               Int           @default(0) @db.TinyInt
  role_versions    role_versions @relation(fields: [role_versions_id], references: [id], onUpdate: Restrict, map: "role_version_permissions_ibfk_1")
  permissions      permissions   @relation(fields: [permission_id], references: [id], onUpdate: Restrict, map: "role_version_permissions_ibfk_2")

  @@index([permission_id], map: "idx_permission_id")
  @@index([role_versions_id], map: "idx_version_id")
}

model role_versions {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(50)
  remarks                  String?                    @db.VarChar(100)
  sort                     Int?
  create_time              DateTime?                  @default(now()) @db.DateTime(0)
  update_time              DateTime?                  @default(now()) @db.DateTime(0)
  delete_time              DateTime?                  @default(now()) @db.DateTime(0)
  dr                       Int                        @default(0) @db.TinyInt
  role_version_permissions role_version_permissions[]
  store_employee           store_employee[]
}

model route_address {
  id   Int     @id @default(autoincrement())
  url  String? @db.VarChar(255)
  name String? @db.VarChar(255)
}

model ruler_field {
  id        Int       @id
  name      String    @db.VarChar(255)
  describe  String?   @db.VarChar(255)
  type      String    @db.VarChar(255)
  create_at String?   @db.VarChar(255)
  update_at DateTime? @db.DateTime(0)
  dr        Boolean?
}

model sales_level_list {
  id                      Int                       @id @default(autoincrement())
  type                    Int?
  downgrade_level_id      Int?
  is_published            Int?
  agreement_name          String?                   @db.VarChar(255)
  agreement_content       String?                   @db.Text
  introduction_name       String?                   @db.VarChar(255)
  introduction_content    String?                   @db.Text
  created_time            DateTime?                 @db.DateTime(0)
  modified_time           DateTime?                 @db.DateTime(0)
  dr                      Int?
  level_package           level_package[]
  sales_level_list_record sales_level_list_record[]
}

model sales_level_list_record {
  id                  Int               @id @default(autoincrement())
  sales_level_list_id Int?
  level_package_id    Int?
  member_id           Int?
  no                  String?           @db.VarChar(255)
  order_id            Int?
  create_at           DateTime?         @db.DateTime(0)
  end_at              DateTime?         @db.DateTime(0)
  member              member?           @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sales_level_list_record_ibfk_2")
  sales_level_list    sales_level_list? @relation(fields: [sales_level_list_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sales_level_list_record_ibfk_3")

  @@index([member_id], map: "member_id")
  @@index([sales_level_list_id], map: "sales_level_list_id")
}

model schedule {
  id                   Int       @id @default(autoincrement())
  name                 String?   @db.VarChar(50)
  advance_booking_days Int?
  booking_days         Int?
  start_time           DateTime? @db.DateTime(0)
  end_time             DateTime? @db.DateTime(0)
  open_days            String?   @db.VarChar(255)
  time_rules           String?   @db.Text
  created_at           DateTime? @default(now()) @db.DateTime(0)
  updated_at           DateTime? @db.DateTime(0)
  deleted_at           DateTime? @db.DateTime(0)
  dr                   Int?      @default(0) @db.TinyInt
}

model search_history {
  id             Int       @id @default(autoincrement())
  member_id      Int
  search_content String    @db.VarChar(255)
  created_at     DateTime? @default(now()) @db.Timestamp(0)

  @@index([created_at], map: "idx_created_at")
  @@index([member_id], map: "idx_member_id")
}

model seckill_activity {
  id                Int        @id @default(autoincrement())
  shop_id           Int
  status            Int?
  start_time        DateTime   @db.DateTime(0)
  product_id        Int
  stock             Int
  price             Decimal    @db.Decimal(10, 2)
  limit_purchase    Int
  min_purchase      Int
  virtual_purchased Int
  create_time       DateTime   @default(now()) @db.Timestamp(0)
  update_time       DateTime?  @default(now()) @db.Timestamp(0)
  delete_time       DateTime?  @db.Timestamp(0)
  dr                Int        @default(0)
  store_info        store_info @relation(fields: [shop_id], references: [id], onDelete: Cascade, map: "seckill_activity_ibfk_1")
  product           product    @relation(fields: [product_id], references: [id], onDelete: Cascade, map: "seckill_activity_ibfk_2")

  @@index([product_id], map: "idx_product_id")
  @@index([shop_id], map: "idx_shop_id")
  @@index([start_time], map: "idx_start_time")
}

model shop {
  id                                 BigInt                 @id @default(autoincrement())
  name                               String                 @db.VarChar(255)
  img                                String                 @db.VarChar(255)
  phone                              String                 @db.VarChar(20)
  province                           String?                @db.VarChar(255)
  city                               String?                @db.VarChar(255)
  district                           String?                @db.VarChar(255)
  address                            String                 @db.VarChar(255)
  lat                                Decimal?               @db.Decimal(10, 6)
  lng                                Decimal?               @db.Decimal(10, 6)
  status                             Boolean
  cashier_commission_enabled         Boolean?
  cashier_commission_type            Boolean
  cashier_commission_percentage      Decimal?               @db.Decimal(5, 2)
  cashier_commission_amount          Decimal?               @db.Decimal(10, 2)
  verification_commission_type       Boolean
  verification_commission_percentage Decimal?               @db.Decimal(5, 2)
  verification_commission_amount     Decimal?               @db.Decimal(10, 2)
  opening_time                       DateTime?              @db.Time(0)
  closing_time                       DateTime?              @db.Time(0)
  opening_day                        String?                @db.VarChar(255)
  created_at                         DateTime               @default(now()) @db.Timestamp(0)
  updated_at                         DateTime               @default(now()) @db.Timestamp(0)
  deleted_at                         DateTime               @default(now()) @db.Timestamp(0)
  dr                                 Boolean?
  employee                           employee[]
  gift_coupon_record                 gift_coupon_record[]
  member_shop_cart                   member_shop_cart[]
  order_products                     order_products[]
  product_shop_middle                product_shop_middle[]
  shop_action                        shop_action[]
  shop_employee_middle               shop_employee_middle[]
  store_product                      store_product[]
  withdrawal                         withdrawal[]

  @@index([name], map: "idx_shop_name")
}

model shop_action {
  id           Int       @id @default(autoincrement())
  shop_id      BigInt?
  Score        Int
  member_id    Int?
  created_time DateTime? @default(now()) @db.DateTime(0)
  dr           Int
  member       member?   @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "shop_action_ibfk_1")
  shop         shop?     @relation(fields: [shop_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "shop_action_ibfk_2")

  @@index([member_id], map: "member_id")
  @@index([shop_id], map: "shop_id")
}

model shop_employee_middle {
  id          Int       @id @default(autoincrement())
  shop_id     BigInt?
  employee_id Int?
  creat_at    DateTime? @default(now()) @db.Timestamp(0)
  update_at   DateTime? @default(now()) @db.Timestamp(0)
  dr          Boolean?  @default(false)
  shop        shop?     @relation(fields: [shop_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "shop_employee_middle_ibfk_1")
  employee    employee? @relation(fields: [employee_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "shop_employee_middle_ibfk_2")

  @@index([employee_id], map: "employee_id")
  @@index([shop_id], map: "shop_id")
}

model shopkeeper {
  id                Int               @id @default(autoincrement())
  member_id         Int
  mobile            String            @db.VarChar(20)
  shopkeeper_id     Int?
  total_income      Decimal?          @db.Decimal(10, 2)
  remain_income     Decimal?          @db.Decimal(10, 2)
  withdrawal_income Decimal?          @db.Decimal(10, 2)
  dr                Int?              @default(0) @db.UnsignedTinyInt
  updated_at        DateTime          @default(now()) @db.Timestamp(0)
  modified_at       DateTime          @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?         @db.Timestamp(0)
  shopkeeper_level  shopkeeper_level? @relation(fields: [shopkeeper_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "shopkeeper_ibfk_1")
  member            member            @relation(fields: [member_id], references: [id], onUpdate: Restrict, map: "shopkeeper_ibfk_2")

  @@index([member_id], map: "member_id")
  @@index([shopkeeper_id], map: "shopkeeper_id")
}

model shopkeeper_level {
  id                                  Int          @id @default(autoincrement())
  level_name                          String       @db.VarChar(50)
  first_income_percentage             Decimal?     @db.Decimal(5, 2)
  second_income_percentage            Decimal?     @db.Decimal(5, 2)
  third_income_percentage             Decimal?     @db.Decimal(5, 2)
  self_purchase_rebate_percentage     Decimal?     @db.Decimal(5, 2)
  subordinate_store_rebate_percentage Decimal?     @db.Decimal(5, 2)
  upgrade_condition_product_id        String?      @db.VarChar(255)
  validity_period                     Int?
  validity_type                       Int?         @db.TinyInt
  weight                              Int?
  dr                                  Int?         @default(0) @db.UnsignedTinyInt
  updated_at                          DateTime     @default(now()) @db.Timestamp(0)
  modified_at                         DateTime     @default(now()) @db.Timestamp(0)
  deleted_at                          DateTime?    @db.Timestamp(0)
  shopkeeper                          shopkeeper[]
}

model specification {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @db.VarChar(255)
  spec_values            String                   @db.Text
  spec_sort              Int
  is_enabled             Boolean
  created_at             DateTime                 @default(now()) @db.DateTime(0)
  updated_at             DateTime                 @default(now()) @db.DateTime(0)
  deleted_at             DateTime?                @db.DateTime(0)
  dr                     Boolean                  @default(false)
  store_id               Int
  category_specification category_specification[]
  product_specification  product_specification[]
}

model statement {
  id              Int       @id @default(autoincrement())
  no              String?   @db.VarChar(255)
  member_id       Int
  type            Int
  type_name       Int
  bonus_type      Int?      @db.TinyInt
  operate         String?   @db.VarChar(255)
  number          Decimal?  @db.Decimal(10, 2)
  charge          Decimal?  @db.Decimal(10, 2)
  data_id         String?   @db.VarChar(255)
  pay_id          String?   @db.VarChar(255)
  created_at      DateTime? @default(now()) @db.Timestamp(0)
  updated_at      DateTime? @default(now()) @db.Timestamp(0)
  deleted_at      DateTime? @default(now()) @db.Timestamp(0)
  dr              Boolean?
  source_id       Int?
  source_type     Int?
  source_sub_id   Int?
  source_sub_type Int?
  member          member    @relation(fields: [member_id], references: [id], onUpdate: Restrict, map: "statement_ibfk_1")

  @@index([member_id], map: "member_id")
}

model store_account {
  id                  Int        @id @default(autoincrement()) @db.UnsignedInt
  store_id            Int
  total_revenue       Decimal    @default(0.00) @db.Decimal(10, 2)
  available_balance   Decimal    @default(0.00) @db.Decimal(10, 2)
  commission_price    Decimal?   @db.Decimal(10, 2)
  frozen_balance      Decimal    @default(0.00) @db.Decimal(10, 2)
  withdrawn_amount    Decimal    @default(0.00) @db.Decimal(10, 2)
  withdrawing_amount  Decimal    @default(0.00) @db.Decimal(10, 2)
  platform_commission Decimal?   @default(0.00) @db.Decimal(10, 2)
  withdrawal_fee      Decimal?   @default(0.00) @db.Decimal(10, 2)
  created_at          DateTime?  @default(now()) @db.Timestamp(0)
  updated_at          DateTime?  @default(now()) @db.Timestamp(0)
  dr                  Boolean?   @default(false)
  store_info          store_info @relation(fields: [store_id], references: [id], onUpdate: Restrict, map: "store_account_ibfk_1")

  @@index([store_id], map: "store_id")
}

model store_address {
  id            Int        @id @default(autoincrement())
  store_id      Int
  status        Boolean
  consignee     String     @db.VarChar(50)
  contact       String     @db.VarChar(20)
  province_name String     @db.VarChar(20)
  city_name     String     @db.VarChar(20)
  district_name String     @db.VarChar(20)
  address       String     @db.VarChar(100)
  zip_code      String     @db.VarChar(20)
  dr            Boolean    @default(false)
  created_time  DateTime?  @db.DateTime(0)
  updated_time  DateTime?  @db.DateTime(0)
  deleted_time  DateTime?  @db.DateTime(0)
  store_info    store_info @relation(fields: [store_id], references: [id], onUpdate: Restrict, map: "store_address_ibfk_1")

  @@index([store_id], map: "store_id")
}

model store_agent {
  id                              Int          @id @default(autoincrement())
  agent_level_name                String       @db.VarChar(255)
  commission_ratio                Decimal      @db.Decimal(10, 2)
  upgrade_condition               String       @db.VarChar(255)
  direct_push_merchant_count      Int?
  indirect_push_merchant_count    Int?
  specified_recommend_level       Int?
  specified_recommend_level_name  String?      @db.VarChar(255)
  specified_recommend_level_count Int?
  direct_promotion_price          Decimal      @db.Decimal(10, 2)
  included_merchant_accounts      Int
  weight                          Int
  create_time                     DateTime?    @db.DateTime(0)
  update_time                     DateTime?    @db.DateTime(0)
  dr                              Int?
  store_info                      store_info[]
}

model store_agreements {
  id          Int       @id @default(autoincrement())
  type        Int
  title       String?   @db.VarChar(500)
  content     String    @db.Text
  create_time DateTime  @db.DateTime(0)
  update_time DateTime? @db.DateTime(0)
  delete_time DateTime? @db.DateTime(0)
  dr          Int       @default(0) @db.TinyInt
}

model store_categories {
  id          Int          @id @default(autoincrement())
  type        Int?
  name        String       @db.VarChar(50)
  sort        Int?         @default(0)
  is_display  Int          @default(0) @db.TinyInt
  create_time DateTime     @db.DateTime(0)
  update_time DateTime     @db.DateTime(0)
  delete_time DateTime?    @db.DateTime(0)
  dr          Int          @default(0) @db.TinyInt
  store_info  store_info[]

  @@index([id], map: "id")
}

model store_collection {
  id         Int         @id @default(autoincrement())
  store_id   Int?
  collection Int?        @default(0)
  following  Int?        @default(0)
  dr         Int?        @default(0)
  store_info store_info? @relation(fields: [store_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "store_collection_ibfk_1")

  @@index([store_id], map: "store_id")
}

model store_employee {
  id               Int           @id @default(autoincrement())
  name             String        @db.VarChar(255)
  avatar           String?       @db.VarChar(255)
  store_id         Int?
  role_versions_id Int
  phone            String        @db.VarChar(20)
  pwd              String        @db.VarChar(255)
  status           Boolean?
  created_at       DateTime?     @default(now()) @db.Timestamp(0)
  updated_at       DateTime?     @default(now()) @db.Timestamp(0)
  deleted_at       DateTime?     @default(now()) @db.Timestamp(0)
  dr               Boolean?      @default(false)
  role_versions    role_versions @relation(fields: [role_versions_id], references: [id], onUpdate: Restrict, map: "store_employee_ibfk_1")
  store_info       store_info?   @relation(fields: [store_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "store_employee_ibfk_2")

  @@index([role_versions_id], map: "role_versions_id")
  @@index([store_id], map: "store_id")
}

model store_info {
  id                                                 Int                        @id @default(autoincrement())
  type                                               Int?
  name                                               String                     @db.VarChar(50)
  img                                                String?                    @db.VarChar(255)
  parent_id                                          Int?
  store_agent_id                                     Int?
  member_id                                          Int?
  category_id                                        Int
  version_id                                         Int
  lat                                                Decimal?                   @db.Decimal(10, 6)
  lng                                                Decimal?                   @db.Decimal(10, 6)
  platform_commission                                Decimal?                   @db.Decimal(10, 2)
  deposit                                            Decimal                    @db.Decimal(10, 2)
  status                                             Boolean                    @default(false)
  is_review_goods                                    Boolean                    @default(false)
  is_review_status                                   Boolean                    @default(false)
  sort                                               Int                        @default(0)
  token                                              String?                    @db.VarChar(255)
  created_time                                       DateTime?                  @default(now()) @db.DateTime(0)
  updated_time                                       DateTime?                  @db.DateTime(0)
  deleted_time                                       DateTime?                  @db.DateTime(0)
  dr                                                 Int?                       @db.TinyInt
  store_categories                                   store_categories           @relation(fields: [category_id], references: [id], onUpdate: Restrict, map: "store_info_ibfk_1")
  store_versions                                     store_versions             @relation(fields: [version_id], references: [id], onUpdate: Restrict, map: "store_info_ibfk_3")
  member                                             member?                    @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "store_info_ibfk_4")
  store_agent                                        store_agent?               @relation(fields: [store_agent_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_info_ibfk_5")
  account                                            account[]
  article                                            article[]
  coupon                                             coupon[]
  coupon_package_list                                coupon_package_list[]
  discount_activity                                  discount_activity[]
  employee_shop                                      employee_shop[]
  festival_activity                                  festival_activity[]
  follow_activity                                    follow_activity[]
  gift                                               gift[]
  gift_coupon                                        gift_coupon[]
  gift_package_combination                           gift_package_combination[]
  global                                             global[]
  limited_time_activity                              limited_time_activity[]
  lucky_activity                                     lucky_activity[]
  member_article                                     member_article[]
  member_favorite                                    member_favorite[]
  member_store_info                                  member_store_info[]
  order_package                                      order_package[]
  order_products                                     order_products[]
  package_list                                       package_list[]
  payment_activity                                   payment_activity[]
  presale_list                                       presale_list[]
  product                                            product[]
  purchase_order_purchase_order_store_idTostore_info purchase_order[]           @relation("purchase_order_store_idTostore_info")
  purchase_order_purchase_order_user_idTostore_info  purchase_order[]           @relation("purchase_order_user_idTostore_info")
  seckill_activity                                   seckill_activity[]
  store_account                                      store_account[]
  store_address                                      store_address[]
  store_collection                                   store_collection[]
  store_employee                                     store_employee[]
  store_info_action                                  store_info_action[]
  store_info_cart                                    store_info_cart[]
  store_meber_bonus                                  store_meber_bonus[]
  store_registration_info                            store_registration_info[]
  supply_order_store_infoTosupply_order_store_id     supply_order[]             @relation("store_infoTosupply_order_store_id")
  supply_order_store_infoTosupply_order_user_id      supply_order[]             @relation("store_infoTosupply_order_user_id")
  vip_card                                           vip_card[]
  voucher_coupon                                     voucher_coupon[]
  withdrawal                                         withdrawal[]

  @@index([category_id], map: "idx_category_id")
  @@index([created_time], map: "idx_created_time")
  @@index([member_id], map: "member_id")
  @@index([store_agent_id], map: "store_agent_id")
  @@index([version_id], map: "version_id")
}

model store_info_action {
  id            Int         @id @default(autoincrement())
  store_info_id Int?
  Score         Int
  member_id     Int?
  created_time  DateTime?   @default(now()) @db.DateTime(0)
  dr            Int
  member        member?     @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "store_info_action_ibfk_1")
  store_info    store_info? @relation(fields: [store_info_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "store_info_action_ibfk_2")

  @@index([member_id], map: "member_id")
  @@index([store_info_id], map: "store_info_id")
}

model store_info_cart {
  id                                    Int                                 @id @default(autoincrement())
  store_info_id                         Int
  product_specification_middle_price_id Int?
  product_id                            Int?
  type                                  Int?
  num                                   Int?
  selected                              Boolean?                            @default(false)
  price                                 Decimal?                            @db.Decimal(10, 2)
  preferential_price                    Decimal?                            @db.Decimal(10, 2)
  points_deduction                      String?                             @db.VarChar(255)
  freight                               String?                             @db.VarChar(255)
  created_time                          DateTime?                           @default(now()) @db.DateTime(0)
  dr                                    Int?                                @default(0)
  product_specification_middle_price    product_specification_middle_price? @relation(fields: [product_specification_middle_price_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "store_info_cart_ibfk_2")
  product                               product?                            @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "store_info_cart_ibfk_3")
  store_info                            store_info                          @relation(fields: [store_info_id], references: [id], onUpdate: Restrict, map: "store_info_cartt_ibfk_1")

  @@index([store_info_id], map: "idx_store_info_id")
  @@index([product_specification_middle_price_id], map: "store_info_cart_ibfk_2")
  @@index([product_id], map: "store_info_cart_ibfk_3")
}

model store_meber_bonus {
  id         Int         @id @default(autoincrement())
  store_id   Int?
  member_id  Int?
  price      Decimal?    @db.Decimal(10, 2)
  create_at  DateTime?   @db.DateTime(0)
  store_info store_info? @relation(fields: [store_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "store_meber_bonus_ibfk_1")
  member     member?     @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "store_meber_bonus_ibfk_2")

  @@index([member_id], map: "member_id")
  @@index([store_id], map: "store_id")
}

model store_product {
  id         Int       @id @default(autoincrement())
  shop_id    BigInt?
  product_id Int?
  status     Boolean?  @default(false)
  quantity   Int?
  price      Decimal?  @db.Decimal(10, 2)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime? @db.DateTime(0)
  dr         Boolean?  @default(false)
  product    product?  @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "store_product_ibfk_2")
  shop       shop?     @relation(fields: [shop_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "store_product_ibfk_3")

  @@index([product_id], map: "product_id")
  @@index([shop_id], map: "shop_product_ibfk_1")
}

model store_registration_info {
  id                                Int        @id @default(autoincrement())
  store_id                          Int
  apply_type                        Boolean    @default(false)
  company_name                      String?    @db.VarChar(50)
  province                          String?    @db.VarChar(20)
  city                              String?    @db.VarChar(20)
  district                          String?    @db.VarChar(20)
  address                           String?    @db.VarChar(100)
  company_type                      Int        @default(1) @db.TinyInt
  company_tel                       String?    @db.VarChar(20)
  employee_count                    Int?
  registered_capital                Decimal?   @db.Decimal(10, 2)
  contact_name                      String?    @db.VarChar(20)
  contact_tel                       String?    @db.VarChar(20)
  email                             String?    @db.VarChar(50)
  business_license_number           String?    @db.VarChar(50)
  business_scope                    String?    @db.VarChar(100)
  business_license_url              String?    @db.VarChar(100)
  legal_person_id_card_number       String?    @db.VarChar(50)
  legal_person_id_card_handheld_url String?    @db.VarChar(100)
  legal_person_id_card_front_url    String?    @db.VarChar(100)
  legal_person_id_card_back_url     String?    @db.VarChar(100)
  created_time                      DateTime?  @db.DateTime(0)
  updated_time                      DateTime?  @db.DateTime(0)
  deleted_time                      DateTime?  @db.DateTime(0)
  dr                                Int?       @default(0)
  store_info                        store_info @relation(fields: [store_id], references: [id], onUpdate: Restrict, map: "store_registration_info_ibfk_1")

  @@index([company_name], map: "idx_company_name")
  @@index([created_time], map: "idx_created_time")
  @@index([store_id], map: "idx_store_id")
}

model store_verification_record_table {
  id                  Int       @id
  shop_id             BigInt?
  verification_method Int?      @db.TinyInt
  data_id             Int?
  verification_amount String?   @db.VarChar(255)
  verification_staff  String?   @db.VarChar(255)
  create_at           DateTime? @db.Timestamp(0)
}

model store_versions {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(50)
  type                Int?
  price               Decimal?              @db.Decimal(10, 2)
  remarks             String?               @db.VarChar(100)
  sort                Int?
  create_time         DateTime?             @default(now()) @db.DateTime(0)
  update_time         DateTime?             @default(now()) @db.DateTime(0)
  delete_time         DateTime?             @default(now()) @db.DateTime(0)
  dr                  Int                   @default(0) @db.TinyInt
  discount_start_time DateTime?             @db.Date
  discount_end_time   DateTime?             @db.Date
  discount            Decimal?              @db.Decimal(10, 2)
  store_info          store_info[]
  user                user[]
  version_permissions version_permissions[]

  @@index([id], map: "id")
}

model super_poster {
  id                       Int             @id @default(autoincrement()) @db.UnsignedInt
  name                     String?         @db.VarChar(255)
  type                     Int?            @db.UnsignedInt
  waiting_reply            String?         @db.Text
  is_default               Int?            @db.UnsignedTinyInt
  poster_bg                String?         @db.VarChar(255)
  content                  String?         @db.Text
  notice_type              Int?            @db.UnsignedInt
  notice_template_id       String?         @db.VarChar(255)
  website_id               Int?            @db.UnsignedInt
  shop_id                  Int?            @db.UnsignedInt
  is_distribution          Int?            @db.UnsignedTinyInt
  is_perm                  Int?            @db.UnsignedTinyInt
  is_sub                   Int?            @db.UnsignedTinyInt
  is_system_default        Int?            @db.UnsignedTinyInt
  px_type                  Int?            @db.UnsignedInt
  scan_times               Int?            @db.UnsignedInt
  customer_service_message String?         @db.Text
  explanation_link         String?         @db.VarChar(255)
  template_logo            String?         @db.VarChar(255)
  dr                       Int?            @db.UnsignedTinyInt
  created_at               DateTime        @default(now()) @db.Timestamp(0)
  updated_at               DateTime        @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?       @db.Timestamp(0)
  poster_record            poster_record[]
}

model supply_order {
  id                                           Int                    @id @default(autoincrement()) @db.UnsignedInt
  purchase_order_id                            Int                    @db.UnsignedInt
  store_id                                     Int
  pay_money                                    Decimal                @db.Decimal(10, 2)
  status                                       Int
  shipping                                     Int
  user_id                                      Int
  create_time                                  DateTime               @default(now()) @db.Timestamp(0)
  delete_time                                  DateTime?              @db.Timestamp(0)
  update_time                                  DateTime               @default(now()) @db.Timestamp(0)
  dr                                           Int                    @default(0) @db.UnsignedTinyInt
  purchase_order                               purchase_order         @relation(fields: [purchase_order_id], references: [id], onUpdate: Restrict, map: "supply_order_ibfk_1")
  store_info_store_infoTosupply_order_store_id store_info             @relation("store_infoTosupply_order_store_id", fields: [store_id], references: [id], onUpdate: Restrict, map: "supply_order_ibfk_2")
  store_info_store_infoTosupply_order_user_id  store_info             @relation("store_infoTosupply_order_user_id", fields: [user_id], references: [id], onUpdate: Restrict, map: "supply_order_ibfk_3")
  supply_order_product                         supply_order_product[]

  @@index([purchase_order_id], map: "purchase_order_id")
  @@index([store_id], map: "store_id")
  @@index([user_id], map: "user_id")
}

model supply_order_product {
  id                Int            @id @default(autoincrement()) @db.UnsignedInt
  supply_order_id   Int            @db.UnsignedInt
  order_products_id Int            @db.UnsignedInt
  create_time       DateTime       @default(now()) @db.Timestamp(0)
  delete_time       DateTime?      @db.Timestamp(0)
  update_time       DateTime       @default(now()) @db.Timestamp(0)
  dr                Int            @default(0) @db.UnsignedTinyInt
  supply_order      supply_order   @relation(fields: [supply_order_id], references: [id], onUpdate: Restrict, map: "supply_order_product_ibfk_1")
  order_products    order_products @relation(fields: [order_products_id], references: [id], onUpdate: Restrict, map: "supply_order_product_ibfk_2")

  @@index([order_products_id], map: "order_products_id")
  @@index([supply_order_id], map: "supply_order_id")
}

model sys_dict {
  id                 Int                  @id @default(autoincrement())
  label              String               @db.VarChar(255)
  intro              String               @db.VarChar(255)
  revision           Boolean?             @default(true)
  store_id           Int?
  created_at         DateTime             @default(now()) @db.Timestamp(0)
  updated_at         DateTime             @default(now()) @db.Timestamp(0)
  deleted_at         DateTime             @default(now()) @db.Timestamp(0)
  position_privilege position_privilege[]
  sys_dict_item      sys_dict_item[]
}

model sys_dict_item {
  dict_id    Int?
  id         Int       @id @default(autoincrement())
  label      String    @db.VarChar(255)
  nick_name  String?   @db.VarChar(255)
  sort       Int?      @default(1)
  intro      String    @db.Text
  revision   Boolean?  @default(true)
  parent     String?   @db.VarChar(255)
  created_at DateTime  @default(now()) @db.Timestamp(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime  @default(now()) @db.Timestamp(0)
  dr         Int?      @default(0) @db.TinyInt
  sys_dict   sys_dict? @relation(fields: [dict_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sys_dict_item_ibfk_1")

  @@index([dict_id], map: "dict_id")
}

model system_template {
  id                            Int                             @id @default(autoincrement()) @db.UnsignedInt
  template_name                 String?                         @db.VarChar(255)
  template_label_id             Int?                            @db.UnsignedInt
  image                         String?                         @db.VarChar(255)
  user_id                       Int?                            @db.UnsignedInt
  type                          Int?                            @db.UnsignedInt
  dr                            Int?                            @db.UnsignedInt
  created_at                    DateTime                        @default(now()) @db.Timestamp(0)
  updated_at                    DateTime                        @default(now()) @db.Timestamp(0)
  deleted_at                    DateTime?                       @db.Timestamp(0)
  system_template_label         system_template_label?          @relation(fields: [template_label_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "system_template_ibfk_1")
  member_system_template_recold member_system_template_recold[]
  system_template_fields        system_template_fields[]

  @@index([template_label_id], map: "template_label_id")
}

model system_template_fields {
  id                                    Int                                     @id @default(autoincrement()) @db.UnsignedInt
  template_id                           Int?                                    @db.UnsignedInt
  tag                                   String?                                 @db.VarChar(255)
  name                                  String?                                 @db.VarChar(255)
  label                                 String?                                 @db.VarChar(255)
  required                              Boolean?                                @default(false)
  end_default                           String?                                 @db.VarChar(255)
  end_type                              Int?
  start_type                            Int?
  start_default                         String?                                 @db.VarChar(255)
  options                               String?                                 @db.Text
  default_value                         String?                                 @default("9") @db.VarChar(255)
  placeholder                           String?                                 @default("6") @db.VarChar(255)
  type                                  Int?
  value                                 String?                                 @db.VarChar(255)
  dr                                    Int?                                    @default(0) @db.UnsignedInt
  created_at                            DateTime                                @default(now()) @db.Timestamp(0)
  updated_at                            DateTime                                @default(now()) @db.Timestamp(0)
  deleted_at                            DateTime?                               @db.Timestamp(0)
  system_template                       system_template?                        @relation(fields: [template_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "system_template_fields_ibfk_1")
  member_system_template_recold_details member_system_template_recold_details[]

  @@index([template_id], map: "template_id")
}

model system_template_label {
  id              Int               @id @default(autoincrement()) @db.UnsignedInt
  template_name   String?           @db.VarChar(255)
  dr              Int?              @db.UnsignedInt
  created_at      DateTime          @default(now()) @db.Timestamp(0)
  updated_at      DateTime          @default(now()) @db.Timestamp(0)
  deleted_at      DateTime?         @db.Timestamp(0)
  system_template system_template[]
}

model t_goods {
  id                BigInt    @id
  goods_id          BigInt?
  goods_name        String?   @db.VarChar(512)
  goods_type        String?   @db.VarChar(2)
  on_off_status     String?   @db.VarChar(2)
  free_shipping_num Int?
  default_image     String?   @db.VarChar(512)
  spec_name_1       String?   @db.VarChar(512)
  spec_name_2       String?   @db.VarChar(512)
  spec_name_3       String?   @db.VarChar(512)
  spec_name_4       String?   @db.VarChar(512)
  cate_id_1         BigInt?
  cate_id_2         BigInt?
  default_spec      BigInt?
  volume            Float?
  weight            Float?
  price             String?   @db.VarChar(10)
  retail_price      String?   @db.VarChar(10)
  lowest_price      String?   @db.VarChar(10)
  supply_id         BigInt?
  supply_name       String?   @db.VarChar(512)
  add_time          DateTime? @db.DateTime(0)
  baoyou_num_wl     Int?
  if_b2b            Int?
  closed            Int?
  brand_id          BigInt?
  sampling_num      Int?
  stock             Int?
  description       String?   @db.Text
  images            String?   @db.Text
  create_date       DateTime? @db.DateTime(0)
  update_date       DateTime? @db.DateTime(0)
  deleted           Int?      @default(0)
}

model t_goods_brand {
  id          BigInt    @id
  brand_id    BigInt?
  brand_name  String?   @db.VarChar(256)
  img_url     String?   @db.VarChar(256)
  description String?   @db.VarChar(512)
  create_date DateTime? @db.DateTime(0)
  update_date DateTime? @db.DateTime(0)
  deleted     Int?      @default(0)
}

model t_goods_cate {
  id          BigInt    @id
  cate_id     BigInt?
  cate_name   String?   @db.VarChar(256)
  level       Int?
  parent_id   Int?
  icon        String?   @db.VarChar(256)
  select_icon String?   @db.VarChar(256)
  create_date DateTime? @db.DateTime(0)
  update_date DateTime? @db.DateTime(0)
  deleted     Int?      @default(0)
}

model t_goods_spec {
  id             BigInt    @id
  spec_id        BigInt
  goods_id       BigInt?
  spec_1         String?   @db.VarChar(512)
  spec_2         String?   @db.VarChar(512)
  spec_3         String?   @db.VarChar(512)
  spec_4         String?   @db.VarChar(512)
  package_num    Int?
  price          String?   @db.VarChar(11)
  retail_price   String?   @db.VarChar(11)
  standard_price String?   @db.VarChar(11)
  lowest_price   String?   @db.VarChar(11)
  spec_name      String?   @db.VarChar(512)
  stock          Int?
  ids            String?   @db.VarChar(256)
  create_date    DateTime? @db.DateTime(0)
  update_date    DateTime? @db.DateTime(0)
  deleted        Int?      @default(0)
}

model t_region {
  id          BigInt    @id
  region_id   BigInt?
  parent_id   BigInt?
  level       Int?
  region_name String?   @db.VarChar(256)
  create_date DateTime? @db.DateTime(0)
  update_date DateTime? @db.DateTime(0)
  deleted     Int?      @default(0)
}

model t_ship {
  id          BigInt    @id
  goods_id    BigInt?
  ship_id     BigInt?
  name        String?   @db.VarChar(256)
  code        String?   @db.VarChar(32)
  pid         String?   @db.VarChar(64)
  create_date DateTime? @db.DateTime(0)
  update_date DateTime? @db.DateTime(0)
  deleted     Int?      @default(0)
}

model tables {
  id                 Int       @id @default(autoincrement())
  table_name         String    @db.VarChar(100)
  number             String?   @db.VarChar(255)
  min_seats          Int
  max_seats          Int
  uuid               String?   @db.VarChar(255)
  status             Int?      @db.TinyInt
  order_mode         Boolean
  remark             String?   @db.Text
  responsible_person String?   @db.VarChar(100)
  queue_group        Boolean
  created_at         DateTime  @default(now()) @db.Timestamp(0)
  updated_at         DateTime  @default(now()) @db.Timestamp(0)
  deleted_at         DateTime? @db.Timestamp(0)
  dr                 Int       @default(0) @db.TinyInt
}

model task {
  id                 Int          @id @default(autoincrement())
  name               String       @db.VarChar(50)
  type               Int          @db.TinyInt
  image              String?      @db.VarChar(100)
  start_time         DateTime     @db.DateTime(0)
  end_time           DateTime     @db.DateTime(0)
  time_limit         Int
  description        String?      @db.VarChar(500)
  points             Int          @default(0)
  balance            Decimal      @default(0.00) @db.Decimal(10, 2)
  wechat_red_packet  Decimal      @default(0.00) @db.Decimal(10, 2)
  membership_growth  Int          @default(0)
  gift_voucher_id    Int?
  discount_coupon_id Int?
  created_time       DateTime     @default(now()) @db.DateTime(0)
  updated_time       DateTime?    @db.DateTime(0)
  deleted_time       DateTime?    @db.DateTime(0)
  dr                 Int          @default(0) @db.TinyInt
  coupon             coupon?      @relation(fields: [discount_coupon_id], references: [id], onDelete: Cascade, map: "fk_discount_coupon_id")
  gift_coupon        gift_coupon? @relation(fields: [gift_voucher_id], references: [id], onDelete: Cascade, map: "fk_gift_voucher_id")
  task_rule          task_rule[]

  @@index([discount_coupon_id], map: "discount_coupon_id")
  @@index([gift_voucher_id], map: "gift_voucher_id")
}

model task_reward {
  id                    Int               @id @default(autoincrement())
  task_id               Int
  rule_id               Int?
  reward_type           Int               @db.TinyInt
  send_points           Int?
  send_balance          Decimal?          @db.Decimal(10, 2)
  send_red_packet       Decimal?          @db.Decimal(10, 2)
  increase_growth_value Int?
  gift_card_id          Int?
  coupon_id             Int?
  created_time          DateTime          @default(now()) @db.DateTime(0)
  updated_time          DateTime?         @db.DateTime(0)
  deleted_time          DateTime?         @db.DateTime(0)
  dr                    Int               @default(0) @db.TinyInt
  poster_task           poster_task       @relation(fields: [task_id], references: [id], onUpdate: Restrict, map: "task_reward_ibfk_1")
  poster_task_rule      poster_task_rule? @relation(fields: [rule_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "task_reward_ibfk_2")

  @@index([rule_id], map: "rule_id")
  @@index([task_id], map: "task_id")
}

model task_rule {
  id           Int       @id @default(autoincrement())
  task_id      Int
  rule_type    Int       @db.TinyInt
  rule         String    @db.VarChar(500)
  created_time DateTime  @default(now()) @db.DateTime(0)
  updated_time DateTime? @db.DateTime(0)
  deleted_time DateTime? @db.DateTime(0)
  dr           Int       @default(0) @db.TinyInt
  task         task      @relation(fields: [task_id], references: [id], onDelete: Cascade, map: "fk_task_id")

  @@index([task_id], map: "task_id")
}

model template {
  id          Int       @id @default(autoincrement())
  title       String?   @db.VarChar(500)
  type        String?   @db.VarChar(50)
  notify_type String?   @db.VarChar(50)
  status      Int?      @db.TinyInt
  content     String?   @db.Text
  sample      String?   @db.Text
  sign        String?   @db.VarChar(100)
  enable      Int?      @db.TinyInt
  modify_time BigInt?
  website_id  Int?
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  updated_at  DateTime? @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.Timestamp(0)
  dr          Int?      @default(0) @db.TinyInt
}

model trace_data {
  id                  Int             @id @default(autoincrement())
  state_ex            String          @db.VarChar(50)
  pre_coordinates     String?         @db.Text
  shipper_code        String          @db.VarChar(50)
  trace_push_data_id  Int
  e_business_id       String          @db.VarChar(50)
  city_is_null        Boolean?        @default(false)
  success             Boolean?        @default(false)
  delivery_man_tel    String?         @db.VarChar(50)
  route_map_url       String?         @db.VarChar(200)
  logistic_code       String          @db.VarChar(50)
  state               String          @db.VarChar(50)
  sender_city_lat_lng String?         @db.VarChar(50)
  location            String?         @db.VarChar(50)
  trace_push_data     trace_push_data @relation(fields: [trace_push_data_id], references: [id], onDelete: Cascade, map: "trace_data_ibfk_1")
  trace_item          trace_item[]

  @@index([trace_push_data_id], map: "trace_push_data_id")
}

model trace_item {
  id             Int        @id @default(autoincrement())
  action         String?    @db.VarChar(255)
  accept_station String     @db.Text
  accept_time    String     @db.VarChar(50)
  remark         String     @db.VarChar(200)
  location       String     @db.VarChar(200)
  trace_data_id  Int
  trace_data     trace_data @relation(fields: [trace_data_id], references: [id], onDelete: Cascade, map: "trace_item_ibfk_1")

  @@index([trace_data_id], map: "trace_data_id")
}

model trace_push_data {
  id            Int          @id @default(autoincrement())
  push_time     String       @db.VarChar(50)
  e_business_id String       @db.VarChar(50)
  trace_data    trace_data[]
}

model upgrade_conditions {
  id              Int       @id @default(autoincrement()) @db.UnsignedInt
  level_id        Int       @db.UnsignedInt
  condition_type  Int       @db.UnsignedTinyInt
  required_type   Int       @db.UnsignedTinyInt
  condition_value Decimal?  @db.Decimal(10, 2)
  created_at      DateTime? @default(now()) @db.Timestamp(0)
  updated_at      DateTime? @default(now()) @db.Timestamp(0)
  deleted_at      DateTime? @db.Timestamp(0)
  level           level     @relation(fields: [level_id], references: [id], onUpdate: Restrict, map: "upgrade_conditions_ibfk_1")

  @@index([level_id], map: "level_id")
}

model user {
  id                Int             @id @default(autoincrement())
  user_name         String          @db.VarChar(25)
  password          String          @db.VarChar(255)
  avatar            String?         @db.VarChar(255)
  code              String?         @db.Char(6)
  paren_id          Int?
  store_versions_id Int?
  phone             String          @db.VarChar(13)
  token             String?         @db.VarChar(255)
  verify_id         String?         @db.VarChar(36)
  created_at        DateTime        @default(now()) @db.Timestamp(0)
  updated_at        DateTime        @default(now()) @db.Timestamp(0)
  dr                Int             @default(0)
  store_versions    store_versions? @relation(fields: [store_versions_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "user_ibfk_1")

  @@index([store_versions_id], map: "store_versions_id")
}

model user_code {
  code            String?   @db.Char(6)
  expiration_time DateTime? @db.DateTime(0)
  phone           String    @id @db.Char(13)
  status          BigInt?
  verify_id       String?
}

model verification_record {
  name         String   @id @db.VarChar(100)
  created_time String?  @db.VarChar(100)
  type         String?  @db.VarChar(10)
  member       String   @db.VarChar(100)
  provider     String   @db.VarChar(100)
  receiver     String   @db.VarChar(100)
  code         String   @db.VarChar(10)
  time         BigInt
  is_used      Boolean?
}

model version_permissions {
  id             Int            @id @default(autoincrement())
  version_id     Int
  permission_id  Int
  create_time    DateTime       @db.DateTime(0)
  update_time    DateTime       @db.DateTime(0)
  delete_time    DateTime?      @db.DateTime(0)
  dr             Int            @default(0) @db.TinyInt
  store_versions store_versions @relation(fields: [version_id], references: [id], onUpdate: Restrict, map: "version_permissions_ibfk_1")
  permissions    permissions    @relation(fields: [permission_id], references: [id], onUpdate: Restrict, map: "version_permissions_ibfk_2")

  @@index([permission_id], map: "idx_permission_id")
  @@index([version_id], map: "idx_version_id")
}

model violation_comment {
  id                                          Int       @id @default(autoincrement())
  type                                        Int?      @db.TinyInt
  comment_id                                  Int?      @default(0)
  arcticle_id                                 Int?
  violation_type_id                           Int?      @default(0)
  user_id                                     Int?      @default(0)
  content                                     String?   @default("") @db.VarChar(255)
  status                                      Int?      @default(0) @db.TinyInt
  created_time                                DateTime? @default(now()) @db.DateTime(0)
  updated_time                                DateTime? @default(now()) @db.DateTime(0)
  deleted_time                                DateTime? @db.DateTime(0)
  dr                                          Int?      @default(0) @db.TinyInt
  store_id                                    Int
  member_memberToviolation_comment_comment_id member?   @relation("memberToviolation_comment_comment_id", fields: [comment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "violation_comment_ibfk_1")

  // 旧版本
  member_memberToviolation_comment_comment_id member? @relation("memberToviolation_comment_comment_id", fields: [comment_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "violation_comment_ibfk_1")
  // 新版本
  member_violation_comment_comment_idTomember member? @relation("violation_comment_comment_idTomember", fields: [comment_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "violation_comment_ibfk_1")

  violation_type                           violation_type?            @relation(fields: [violation_type_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "violation_comment_ibfk_2")
  member_memberToviolation_comment_user_id member?                    @relation("memberToviolation_comment_user_id", fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "violation_comment_ibfk_3")
  article_comment                          article_comment?           @relation(fields: [arcticle_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "violation_comment_ibfk_4")
  violation_comment_images                 violation_comment_images[]
  member                                   member?                    @relation(fields: [memberId], references: [id])
  memberId                                 Int?

  @@index([arcticle_id], map: "arcticle_id")
  @@index([comment_id], map: "comment_id")
  @@index([user_id], map: "user_id")
  @@index([violation_type_id], map: "violation_type_id")
}

model violation_comment_images {
  id                   Int               @id @default(autoincrement())
  violation_comment_id Int
  image_url            String?           @db.VarChar(255)
  created_at           DateTime?         @default(now()) @db.DateTime(0)
  deleted_at           DateTime?         @db.DateTime(0)
  is_deleted           Int?              @default(0) @db.TinyInt
  violation_comment    violation_comment @relation(fields: [violation_comment_id], references: [id], onUpdate: Restrict, map: "violation_comment_images_ibfk_1")

  @@index([is_deleted], map: "idx_is_deleted")
  @@index([violation_comment_id], map: "idx_violation_comment_id")
}

model violation_type {
  id                Int                 @id @default(autoincrement())
  type              Int?                @db.TinyInt
  name              String?             @default("") @db.VarChar(50)
  sort              Int?                @default(0)
  status            Int?                @default(1) @db.TinyInt
  created_time      DateTime?           @default(now()) @db.DateTime(0)
  updated_time      DateTime?           @default(now()) @db.DateTime(0)
  deleted_time      DateTime?           @db.DateTime(0)
  dr                Int?                @default(0) @db.TinyInt
  violation_comment violation_comment[]
}

model vip_card {
  id                      Int                       @id @default(autoincrement())
  store_id                Int?
  name                    String                    @db.VarChar(50)
  back_ground             Boolean                   @default(false)
  style                   Int                       @default(0) @db.TinyInt
  pay_status              Boolean                   @default(false)
  upgrade_price           Boolean                   @default(false)
  is_shelve               Boolean                   @default(false)
  is_default              Boolean                   @default(false)
  weight                  Int                       @default(0)
  introduction            String?                   @db.Text
  create_time             DateTime                  @db.DateTime(0)
  update_time             DateTime?                 @db.DateTime(0)
  delete_time             DateTime?                 @db.DateTime(0)
  dr                      Boolean                   @default(false)
  store_info              store_info?               @relation(fields: [store_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "vip_card_ibfk_1")
  member_ship_card_price  member_ship_card_price[]
  member_ship_card_rights member_ship_card_rights[]
  member_ship_record      member_ship_record[]
  member_vip              member_vip[]

  @@index([store_id], map: "store_id")
}

model voucher_coupon {
  id                                                                       Int                             @id @default(autoincrement())
  name                                                                     String                          @db.VarChar(50)
  img                                                                      String?                         @db.VarChar(255)
  type                                                                     Int?
  store_info_id                                                            Int?
  sala_price                                                               Decimal?                        @db.Decimal(10, 2)
  price                                                                    Decimal?                        @db.Decimal(10, 2)
  quantity                                                                 Int?                            @default(99999)
  limit_per_person                                                         Int?                            @default(99999)
  receive_start_time                                                       DateTime?                       @db.DateTime(0)
  receive_end_time                                                         DateTime?                       @db.DateTime(0)
  effect_start_time                                                        DateTime?                       @db.DateTime(0)
  effect_end_time                                                          DateTime?                       @db.DateTime(0)
  description                                                              String?                         @db.Text
  mobile_link                                                              String?                         @db.VarChar(255)
  miniapp_link                                                             String?                         @db.VarChar(255)
  created_time                                                             DateTime?                       @default(now()) @db.DateTime(0)
  updated_time                                                             DateTime?                       @default(now()) @db.DateTime(0)
  deleted_time                                                             DateTime?                       @db.DateTime(0)
  dr                                                                       Int                             @default(0)
  store_info                                                               store_info?                     @relation(fields: [store_info_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "voucher_coupon_ibfk_1")
  coupon_package_list_coupon_package_list_vocher_idTovoucher_coupon        coupon_package_list[]           @relation("coupon_package_list_vocher_idTovoucher_coupon")
  coupon_package_list_coupon_package_list_vocher_packer_idTovoucher_coupon coupon_package_list[]           @relation("coupon_package_list_vocher_packer_idTovoucher_coupon")
  member_voucher                                                           member_voucher[]
  recharge_card_package_coupons                                            recharge_card_package_coupons[]
  voucher_coupon_record                                                    voucher_coupon_record[]

  @@index([store_info_id], map: "store_info_id")
}

model voucher_coupon_record {
  id             Int            @id @default(autoincrement())
  store_id       BigInt
  order_id       Int?           @db.UnsignedInt
  staff_id       Int
  member_id      Int
  voucher_id     Int
  created_time   DateTime?      @default(now()) @db.DateTime(0)
  member         member         @relation(fields: [member_id], references: [id], onUpdate: Restrict, map: "voucher_coupon_record_ibfk_2")
  voucher_coupon voucher_coupon @relation(fields: [voucher_id], references: [id], onUpdate: Restrict, map: "voucher_coupon_record_ibfk_3")
  order          order?         @relation(fields: [order_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "voucher_coupon_record_ibfk_7")

  @@index([member_id], map: "idxv_member_id")
  @@index([staff_id], map: "idxv_staff_id")
  @@index([store_id], map: "idxv_store_id")
  @@index([voucher_id], map: "idxv_voucher_id")
  @@index([order_id], map: "order_id")
}

model withdrawal {
  id                  Int         @id @default(autoincrement()) @db.UnsignedInt
  no                  String?     @db.VarChar(255)
  member_id           Int?
  shop_id             BigInt?
  store_id            Int?
  employee_id         Int?
  type                Int
  type_name           Int
  account_id          Int?
  service_charge      Decimal     @db.Decimal(10, 2)
  charge              Decimal     @db.Decimal(10, 2)
  cash                Decimal     @db.Decimal(10, 2)
  platform_commission Decimal?    @db.Decimal(10, 2)
  payment_date        DateTime?   @db.DateTime(0)
  status              Int
  remark              String?     @db.Text
  created_at          DateTime?   @default(now()) @db.Timestamp(0)
  updated_at          DateTime?   @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?   @default(now()) @db.Timestamp(0)
  dr                  Boolean?    @default(false)
  member              member?     @relation(fields: [member_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "withdrawal_ibfk_1")
  account             account?    @relation(fields: [account_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "withdrawal_ibfk_4")
  shop                shop?       @relation(fields: [shop_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "withdrawal_ibfk_5")
  employee            employee?   @relation(fields: [employee_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "withdrawal_ibfk_6")
  store_info          store_info? @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "withdrawal_ibfk_7")

  @@index([account_id], map: "account_id")
  @@index([employee_id], map: "employee_id")
  @@index([member_id], map: "member_id")
  @@index([shop_id], map: "shop_id")
  @@index([store_id], map: "store_id")
}

// wo
model xxl_job_group {
  id           Int       @id @default(autoincrement())
  app_name     String    @db.VarChar(64)
  title        String    @db.VarChar(12)
  address_type Int       @default(0) @db.TinyInt
  address_list String?   @db.Text
  update_time  DateTime? @db.DateTime(0)
}

model xxl_job_info {
  id                        Int       @id @default(autoincrement())
  job_group                 Int
  job_desc                  String    @db.VarChar(255)
  add_time                  DateTime? @db.DateTime(0)
  update_time               DateTime? @db.DateTime(0)
  author                    String?   @db.VarChar(64)
  alarm_email               String?   @db.VarChar(255)
  schedule_type             String    @default("NONE") @db.VarChar(50)
  schedule_conf             String?   @db.VarChar(128)
  misfire_strategy          String    @default("DO_NOTHING") @db.VarChar(50)
  executor_route_strategy   String?   @db.VarChar(50)
  executor_handler          String?   @db.VarChar(255)
  executor_param            String?   @db.VarChar(512)
  executor_block_strategy   String?   @db.VarChar(50)
  executor_timeout          Int       @default(0)
  executor_fail_retry_count Int       @default(0)
  glue_type                 String    @db.VarChar(50)
  glue_source               String?   @db.MediumText
  glue_remark               String?   @db.VarChar(128)
  glue_updatetime           DateTime? @db.DateTime(0)
  child_jobid               String?   @db.VarChar(255)
  trigger_status            Int       @default(0) @db.TinyInt
  trigger_last_time         BigInt    @default(0)
  trigger_next_time         BigInt    @default(0)
}

model xxl_job_lock {
  lock_name String @id @db.VarChar(50)
}

model xxl_job_log {
  id                        BigInt    @id @default(autoincrement())
  job_group                 Int
  job_id                    Int
  executor_address          String?   @db.VarChar(255)
  executor_handler          String?   @db.VarChar(255)
  executor_param            String?   @db.VarChar(512)
  executor_sharding_param   String?   @db.VarChar(20)
  executor_fail_retry_count Int       @default(0)
  trigger_time              DateTime? @db.DateTime(0)
  trigger_code              Int
  trigger_msg               String?   @db.Text
  handle_time               DateTime? @db.DateTime(0)
  handle_code               Int
  handle_msg                String?   @db.Text
  alarm_status              Int       @default(0) @db.TinyInt

  @@index([handle_code], map: "I_handle_code")
  @@index([trigger_time], map: "I_trigger_time")
}

model xxl_job_log_report {
  id            Int       @id @default(autoincrement())
  trigger_day   DateTime? @unique(map: "i_trigger_day") @db.DateTime(0)
  running_count Int       @default(0)
  suc_count     Int       @default(0)
  fail_count    Int       @default(0)
  update_time   DateTime? @db.DateTime(0)
}

model xxl_job_logglue {
  id          Int       @id @default(autoincrement())
  job_id      Int
  glue_type   String?   @db.VarChar(50)
  glue_source String?   @db.MediumText
  glue_remark String    @db.VarChar(128)
  add_time    DateTime? @db.DateTime(0)
  update_time DateTime? @db.DateTime(0)
}

model xxl_job_registry {
  id             Int       @id @default(autoincrement())
  registry_group String    @db.VarChar(50)
  registry_key   String    @db.VarChar(255)
  registry_value String    @db.VarChar(255)
  update_time    DateTime? @db.DateTime(0)

  @@index([registry_group, registry_key(length: 191), registry_value(length: 191)], map: "i_g_k_v")
}

model xxl_job_user {
  id         Int     @id @default(autoincrement())
  username   String  @unique(map: "i_username") @db.VarChar(50)
  password   String  @db.VarChar(50)
  role       Int     @db.TinyInt
  permission String? @db.VarChar(255)
}
