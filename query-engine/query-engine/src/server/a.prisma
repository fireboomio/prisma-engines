datasource db {
  provider = "mysql"
  url      = "mysql://root:*@localhost:3306/zjl"
}

model kamilib_detail {
  id          Int       @id @default(autoincrement())
  kamilib_id  Int
  type        Boolean
  name        String    @db.VarChar(50)
  create_time DateTime  @db.DateTime(0)
  update_time DateTime? @db.DateTime(0)
  delete_time DateTime? @db.DateTime(0)
  dr          Boolean   @default(false)

  @@index([kamilib_id], map: "kamilib_id_fk")
}

model level {
  id                                           Int                  @id @default(autoincrement()) @db.UnsignedInt
  name                                         String               @db.VarChar(50)
  number                                       Int                  @db.UnsignedInt
  upgrade_type                                 Int                  @default(0) @db.UnsignedTinyInt
  upgrade_conditions                           String?              @db.VarChar(255)
  downgrade_type                               Int                  @default(0) @db.UnsignedTinyInt
  downgrade_conditions                         String?              @db.VarChar(255)
  created_at                                   DateTime?            @default(now()) @db.Timestamp(0)
  updated_at                                   DateTime?            @default(now()) @db.Timestamp(0)
  deleted_at                                   DateTime?            @db.Timestamp(0)
  upgrade_conditions_levelToupgrade_conditions upgrade_conditions[]
}

model level_package {
  id               Int               @id @default(autoincrement())
  total_weight     Int?
  sales_level_id   Int?
  level_name       String?           @db.VarChar(255)
  granularity      Int?
  validity_period  Int?
  price            Decimal?          @db.Decimal(10, 2)
  market_price     Decimal?          @db.Decimal(10, 2)
  created_time     DateTime?         @db.DateTime(0)
  modified_time    DateTime?         @db.DateTime(0)
  dr               Int?              @default(0)
  sales_level_list sales_level_list? @relation(fields: [sales_level_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "level_package_ibfk_1")

  @@index([sales_level_id], map: "sales_level_id")
}

model limited_time_activity {
  id                   Int                    @id @default(autoincrement())
  scope                Int                    @db.TinyInt
  shop_id              Int?
  name                 String                 @db.VarChar(50)
  status               Int                    @db.TinyInt
  start_time           DateTime               @db.DateTime(0)
  end_time             DateTime               @db.DateTime(0)
  description          String?                @db.VarChar(255)
  discount_type        Int                    @db.TinyInt
  uniform_discount     Int                    @db.TinyInt
  discount_rate        Decimal?               @db.Decimal(10, 2)
  decimal_truncation   Int                    @db.TinyInt
  participate_type     Int                    @db.TinyInt
  created_time         DateTime?              @default(now()) @db.DateTime(0)
  updated_time         DateTime?              @default(now()) @db.DateTime(0)
  deleted_time         DateTime?              @db.DateTime(0)
  dr                   Int                    @default(0)
  store_info           store_info?            @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "limited_time_activity_ibfk_1")
  limited_time_product limited_time_product[]

  @@index([shop_id], map: "shop_id")
}

model limited_time_product {
  id                    Int                    @id @default(autoincrement())
  discount_activity_id  Int?                   @default(0)
  product_id            Int?
  category_id           Int?
  created_time          DateTime?              @default(now()) @db.DateTime(0)
  discount_rate         Decimal?               @db.Decimal(10, 2)
  updated_time          DateTime?              @default(now()) @db.DateTime(0)
  deleted_time          DateTime?              @db.DateTime(0)
  dr                    Int?                   @default(0) @db.TinyInt
  limited_time_activity limited_time_activity? @relation(fields: [discount_activity_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "limited_time_product_ibfk_1")
  product               product?               @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "limited_time_product_ibfk_2")
  product_categories    product_categories?    @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "limited_time_product_ibfk_3")

  @@index([category_id], map: "category_id")
  @@index([discount_activity_id], map: "discount_activity_id")
  @@index([product_id], map: "product_id")
}

model live_room {
  id                   Int                @id @default(autoincrement()) @db.UnsignedInt
  live_type            Int?               @default(0)
  room_title           String?            @db.VarChar(255)
  start_time           DateTime?          @db.Date
  anchor_nickname      String?            @db.VarChar(255)
  anchor_wechat        String?            @db.VarChar(255)
  anchor_assistant     String?            @db.VarChar(255)
  official_included    Int?
  share_card_cover_url String?            @db.VarChar(255)
  background_wall_url  String?            @db.VarChar(255)
  live_card_cover_url  String?            @db.VarChar(255)
  room_functions       String?            @db.VarChar(255)
  website_id           Int?               @db.UnsignedInt
  dr                   Int?               @db.UnsignedTinyInt
  live_room_product_id Int?               @db.UnsignedInt
  created_at           DateTime           @default(now()) @db.Timestamp(0)
  updated_at           DateTime           @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?          @db.Timestamp(0)
  live_room_product    live_room_product? @relation(fields: [live_room_product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "live_room_ibfk_1")

  @@index([live_room_product_id], map: "live_room_product_id")
}

model live_room_product {
  id             Int         @id @default(autoincrement()) @db.UnsignedInt
  product_id     Int?        @db.UnsignedInt
  img_url        String?     @db.VarChar(255)
  name           String?     @db.VarChar(255)
  price_form     Int?
  discount_price Decimal?    @db.Decimal(10, 2)
  price_min      Decimal?    @db.Decimal(10, 2)
  price_max      Decimal?    @db.Decimal(10, 2)
  original_price Decimal?    @db.Decimal(10, 2)
  current_price  Decimal?    @db.Decimal(10, 2)
  website_id     Int?        @db.UnsignedInt
  dr             Int?        @db.UnsignedTinyInt
  created_at     DateTime    @default(now()) @db.Timestamp(0)
  updated_at     DateTime    @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?   @db.Timestamp(0)
  live_room      live_room[]
}

model loginrecords {
  ID          Int       @id @default(autoincrement())
  MemberID    Int
  LoginTime   DateTime? @default(now()) @db.Timestamp(0)
  LoginIP     String?   @db.VarChar(50)
  LoginDevice String?   @db.VarChar(100)
}

model logistics_template {
  id                        Int                         @id @default(autoincrement())
  name                      String                      @db.VarChar(255)
  express_company_id        Int?
  express_company_name      String?                     @db.VarChar(255)
  billing_method            Int
  is_active                 Boolean
  created_at                DateTime?                   @default(now()) @db.Timestamp(0)
  updated_at                DateTime?                   @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?                   @db.Timestamp(0)
  dr                        Boolean?                    @default(false)
  mall_logistics_company    mall_logistics_company?     @relation(fields: [express_company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "logistics_template_ibfk_1")
  logistics_template_detail logistics_template_detail[]
  product_details           product_details[]

  @@index([deleted_at], map: "idx_deleted_at")
  @@index([express_company_id], map: "idx_express_company_id")
}

model logistics_template_detail {
  id                 Int                @id @default(autoincrement())
  template_id        Int
  region             String             @db.VarChar(255)
  first_weight       Decimal            @db.Decimal(10, 2)
  first_fee          Decimal            @db.Decimal(10, 2)
  additional_weight  Decimal?           @db.Decimal(10, 2)
  additional_fee     Decimal?           @db.Decimal(10, 2)
  created_at         DateTime?          @default(now()) @db.Timestamp(0)
  updated_at         DateTime?          @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?          @db.Timestamp(0)
  dr                 Boolean?           @default(false)
  logistics_template logistics_template @relation(fields: [template_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "logistics_template_detail_ibfk_1")

  @@index([deleted_at], map: "idx_deleted_at")
  @@index([template_id], map: "idx_template_id")
}

model lucky_activity {
  id                      Int                    @id @default(autoincrement()) @db.UnsignedInt
  type                    Int?                   @db.UnsignedInt
  name                    String?                @db.VarChar(255)
  status                  Int?                   @db.UnsignedInt
  start_time              DateTime?              @db.DateTime(0)
  end_time                DateTime?              @db.DateTime(0)
  limit_per_day           Int?                   @db.UnsignedInt
  limit_per_user          Int?                   @db.UnsignedInt
  points_per_play         Int?                   @db.UnsignedInt
  description             String?                @db.Text
  roulette_background_url String?                @db.VarChar(255)
  pointer_image_url       String?                @db.VarChar(255)
  mobile_link             String?                @db.VarChar(255)
  pc_link                 String?                @db.VarChar(255)
  store_id                Int?
  mini_program_link       String?                @db.VarChar(255)
  create_time             DateTime?              @db.DateTime(0)
  update_time             DateTime?              @db.DateTime(0)
  delete_time             DateTime?              @db.DateTime(0)
  dr                      Int?                   @default(0) @db.UnsignedInt
  store_info              store_info?            @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "lucky_activity_ibfk_1")
  member_activity_list    member_activity_list[]
  prize                   prize[]

  @@index([store_id], map: "store_id")
}

model mall_config {
  id                                     Int       @id @default(autoincrement())
  is_mobile_mall_enabled                 Boolean   @default(false)
  logo                                   String?   @db.VarChar(255)
  register_ad_pic_url                    String?   @db.VarChar(255)
  register_ad_pic_link                   String?   @db.VarChar(255)
  login_ad_pic_url                       String?   @db.VarChar(255)
  login_ad_pic_link                      String?   @db.VarChar(255)
  mall_name                              String?   @db.VarChar(50)
  is_register_agreement_enabled          Boolean   @default(false)
  register_agreement_template_id         Int?
  is_purchase_agreement_enabled          Boolean   @default(false)
  purchase_agreement_template_id         Int?
  domain                                 String?   @db.VarChar(50)
  ssl_pem                                String?   @db.VarChar(255)
  ssl_key                                String?   @db.VarChar(255)
  is_express_delivery_enabled            Boolean   @default(false)
  store_pickup_config_id                 Int?
  auto_close_order_time                  Int       @default(30)
  auto_confirm_receive_time              Int       @default(7)
  auto_complete_time                     Int       @default(7)
  is_cancellation_enabled                Boolean   @default(false)
  cancellation_time_limit                Int       @default(7)
  is_auto_evaluation_enabled             Boolean   @default(false)
  auto_evaluation_time                   Int       @default(7)
  evaluation_content                     String?   @db.VarChar(500)
  is_good_evaluation_points_enabled      Boolean   @default(false)
  good_evaluation_points                 Int       @default(10)
  is_payment_password_enabled            Boolean   @default(false)
  password_type                          Boolean   @default(false)
  points_exchange_rate                   Decimal   @default(1.00) @db.Decimal(10, 2)
  is_shopping_points_enabled             Boolean   @default(false)
  points_calculation_method              Boolean   @default(false)
  shopping_points_ratio                  Decimal   @default(0.00) @db.Decimal(5, 2)
  shopping_points_node                   Boolean   @default(false)
  is_points_offset_enabled               Boolean   @default(false)
  offset_calculation_method              Boolean   @default(false)
  max_offset_ratio                       Decimal   @default(0.00) @db.Decimal(5, 2)
  is_balance_transfer_enabled            Boolean   @default(false)
  is_transfer_fee_enabled                Boolean   @default(false)
  transfer_fee_type                      Boolean   @default(false)
  transfer_fee_ratio                     Decimal   @default(0.00) @db.Decimal(5, 2)
  min_transfer_fee                       Decimal   @default(0.00) @db.Decimal(10, 2)
  is_points_exchange_enabled             Boolean   @default(false)
  is_exchange_fee_enabled                Boolean   @default(false)
  exchange_fee_type                      Boolean   @default(false)
  exchange_fee_ratio                     Decimal   @default(0.00) @db.Decimal(5, 2)
  min_exchange_fee                       Decimal   @default(0.00) @db.Decimal(10, 2)
  is_withdrawal_enabled                  Boolean   @default(false)
  min_withdrawal_amount                  Decimal   @default(0.00) @db.Decimal(10, 2)
  is_withdrawal_auto_review_enabled      Boolean   @default(false)
  is_withdrawal_auto_pay_enabled         Boolean   @default(false)
  is_withdrawal_alipay_enabled           Boolean   @default(false)
  is_withdrawal_wechat_enabled           Boolean   @default(false)
  is_withdrawal_bank_card_manual_enabled Boolean   @default(false)
  is_withdrawal_bank_card_auto_enabled   Boolean   @default(false)
  store_withdrawal_fee_rate              Decimal   @default(0.00) @db.Decimal(5, 2)
  member_withdrawal_fee_rate             Decimal   @default(0.00) @db.Decimal(5, 2)
  free_withdrawal_start_amount           Decimal   @default(0.00) @db.Decimal(10, 2)
  free_withdrawal_end_amount             Decimal   @default(0.00) @db.Decimal(10, 2)
  mall_payment_config_id                 Int?
  balance_text_style                     String?   @db.VarChar(20)
  points_text_style                      String?   @db.VarChar(20)
  phone_type                             Int       @default(0)
  login_type                             Int       @default(0)
  created_time                           DateTime? @db.DateTime(0)
  updated_time                           DateTime? @db.DateTime(0)
  deleted_time                           DateTime? @db.DateTime(0)
}

model mall_logistics_company {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar(50)
  code               String               @db.VarChar(20)
  is_enabled         Boolean              @default(false)
  logistics_template logistics_template[]
}

model mall_seller_delivery_address {
  id            Int       @id @default(autoincrement())
  mall_id       Int
  consignee     String    @db.VarChar(50)
  contact       String    @db.VarChar(20)
  province_name String    @db.VarChar(20)
  city_name     String    @db.VarChar(20)
  district_name String    @db.VarChar(20)
  address       String    @db.VarChar(100)
  zip_code      String    @db.VarChar(20)
  is_default    Boolean   @default(false)
  created_time  DateTime? @db.DateTime(0)
  updated_time  DateTime? @db.DateTime(0)
  deleted_time  DateTime? @db.DateTime(0)
  dr            Int?      @default(0) @db.TinyInt
}

model mass_message {
  id                   Int                   @id @default(autoincrement()) @db.UnsignedInt
  send_type            Int?                  @db.UnsignedInt
  send_type_id         Int?                  @db.UnsignedInt
  value                String?               @db.Text
  url                  String?               @db.VarChar(255)
  send_count           Int?                  @db.UnsignedInt
  user_count           Int?                  @db.UnsignedInt
  status               Int?                  @db.UnsignedInt
  website_id           Int?                  @db.UnsignedInt
  mass_template_id     Int?                  @db.UnsignedInt
  dr                   Int?                  @db.UnsignedTinyInt
  created_at           DateTime              @default(now()) @db.Timestamp(0)
  updated_at           DateTime              @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?             @db.Timestamp(0)
  member_mass_template member_mass_template? @relation(fields: [mass_template_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "mass_message_ibfk_1")

  @@index([mass_template_id], map: "mass_template_id")
}

model material {
  id                   Int                @id @default(autoincrement()) @db.UnsignedInt
  category_id          Int?               @db.UnsignedInt
  member_id            Int?
  content              String?            @db.Text
  goods_id             Int?
  distributor_level_id String?            @db.Text
  member_level_id      String?            @db.Text
  member_tag_id        String?            @db.Text
  dr                   Int?               @db.UnsignedTinyInt
  created_at           DateTime           @default(now()) @db.Timestamp(0)
  updated_at           DateTime           @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?          @db.Timestamp(0)
  material_category    material_category? @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "material_ibfk_1")
  member               member?            @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "material_ibfk_2")
  product              product?           @relation(fields: [goods_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "material_ibfk_3")
  material_image       material_image[]

  @@index([category_id], map: "category_id")
  @@index([goods_id], map: "goods_id")
  @@index([member_id], map: "member_id")
}

model material_category {
  id         Int        @id @default(autoincrement()) @db.UnsignedInt
  name       String?    @db.VarChar(255)
  is_default Int?       @db.UnsignedTinyInt
  sort       Int?       @db.UnsignedInt
  status     Int?       @db.UnsignedTinyInt
  website_id Int?       @db.UnsignedInt
  dr         Int?       @db.UnsignedTinyInt
  created_at DateTime   @default(now()) @db.Timestamp(0)
  updated_at DateTime   @default(now()) @db.Timestamp(0)
  deleted_at DateTime?  @db.Timestamp(0)
  material   material[]
}

model material_image {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  material_id Int?      @db.UnsignedInt
  url         String?   @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(0)
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.Timestamp(0)
  dr          Int?      @default(0)
  material    material? @relation(fields: [material_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "material_image_ibfk_1")

  @@index([material_id], map: "material_id")
}

model media_album {
  id                Int           @id @default(autoincrement())
  album_name        String?       @db.VarChar(255)
  album_display_url String?       @db.VarChar(255)
  album_sort        Int?
  created_at        DateTime?     @default(now()) @db.Timestamp(0)
  updated_at        DateTime?     @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?     @db.Timestamp(0)
  dr                Boolean?      @default(false)
  album_photo       album_photo[]
}

model member {
  id                                              Int                              @id @default(autoincrement())
  level_id                                        Int?
  shop_id                                         Int?
  identity                                        String?                          @db.VarChar(255)
  company_name                                    String?                          @db.VarChar(255)
  member_department_id                            Int?
  status                                          Boolean
  recommender_id                                  Int?
  recommender_name                                String                           @db.VarChar(50)
  recommender_phone                               String?                          @db.VarChar(255)
  recommender_avatar                              String?                          @db.VarChar(255)
  nickname                                        String                           @db.VarChar(50)
  avatar                                          String?                          @db.VarChar(500)
  wx_resp                                         String?                          @db.VarChar(255)
  open_id                                         String?                          @db.VarChar(255)
  phone_number                                    String                           @db.VarChar(20)
  password                                        String                           @db.VarChar(100)
  pay_password                                    String?                          @db.VarChar(255)
  balance                                         Decimal?                         @default(0.00) @db.Decimal(10, 2)
  total_consume                                   Decimal?                         @default(0.00) @db.Decimal(10, 2)
  point                                           Int?                             @default(0)
  growth_value                                    Int?                             @default(0)
  copon_package_num                               Int?
  order_count                                     Int?                             @default(0)
  three_mony_status                               Int?
  three_mony_pay_created_at                       DateTime?                        @db.DateTime(0)
  created_at                                      DateTime                         @db.DateTime(0)
  updated_at                                      DateTime?                        @db.DateTime(0)
  deleted_at                                      DateTime?                        @db.DateTime(0)
  dr                                              Boolean?                         @default(false)
  member_level                                    member_level?                    @relation(fields: [level_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_ibfk_1")
  member_department                               member_department?               @relation(fields: [member_department_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_ibfk_2")
  agent                                           agent[]
  article                                         article[]
  article_comment                                 article_comment[]
  bargain_record                                  bargain_record[]
  captain                                         captain[]
  checkin_detail                                  checkin_detail[]
  coupon_record                                   coupon_record[]
  distrbution                                     distrbution[]
  follow_activity_record                          follow_activity_record[]
  gift_coupon_record                              gift_coupon_record[]
  gift_member                                     gift_member[]
  gift_record                                     gift_record[]
  global                                          global[]
  group_buying_member_record                      group_buying_member_record[]
  group_buying_record                             group_buying_record[]
  material                                        material[]
  member_activity_list                            member_activity_list[]
  member_address                                  member_address[]
  member_article_memberTomember_article_member_id member_article[]                 @relation("memberTomember_article_member_id")
  member_article_memberTomember_article_parent_id member_article[]                 @relation("memberTomember_article_parent_id")
  member_article_like                             member_article_like[]
  member_cart                                     member_cart[]
  member_contacts                                 member_contacts[]
  member_coupon                                   member_coupon[]
  member_favorite                                 member_favorite[]
  member_festival_record                          member_festival_record[]
  member_gift                                     member_gift[]
  member_payment_activity_record                  member_payment_activity_record[]
  member_product                                  member_product[]
  member_shop_cart                                member_shop_cart[]
  member_store_info                               member_store_info[]
  member_system_template_recold                   member_system_template_recold[]
  member_tag_middle                               member_tag_middle[]
  member_text                                     member_text[]
  order                                           order[]
  product_review                                  product_review[]
  sales_level_list_record                         sales_level_list_record[]
  shop_action                                     shop_action[]
  shopkeeper                                      shopkeeper[]
  statement                                       statement[]
  store_info                                      store_info[]
  store_info_action                               store_info_action[]
  store_meber_bonus                               store_meber_bonus[]

  @@index([id], map: "id")
  @@index([id], map: "id_2")
  @@index([level_id], map: "level_id")
  @@index([member_department_id], map: "member_department_id")
  @@index([shop_id], map: "shop_id")
}

model member_activity_list {
  id             Int            @id @default(autoincrement())
  activity_id    Int            @db.UnsignedInt
  user_id        Int
  award          String?        @db.VarChar(50)
  prize          String?        @db.VarChar(255)
  status         Int            @default(0) @db.TinyInt
  created_time   DateTime       @default(now()) @db.DateTime(0)
  member         member         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_activity_list_ibfk_2")
  lucky_activity lucky_activity @relation(fields: [activity_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_activity_list_ibfk_3")

  @@index([activity_id], map: "activity_id_index")
  @@index([user_id], map: "user_id_index")
}

model member_address {
  id            Int       @id @default(autoincrement())
  member_id     Int
  status        Boolean
  consignee     String    @db.VarChar(50)
  contact       String    @db.VarChar(20)
  province_name String    @db.VarChar(20)
  city_name     String    @db.VarChar(20)
  district_name String    @db.VarChar(20)
  address       String    @db.VarChar(100)
  zip_code      String    @db.VarChar(20)
  dr            Boolean   @default(false)
  created_time  DateTime? @db.DateTime(0)
  updated_time  DateTime? @db.DateTime(0)
  deleted_time  DateTime? @db.DateTime(0)
  member        member    @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_address_ibfk_1")

  @@index([member_id], map: "member_id")
}

model member_article {
  id                                      Int         @id @default(autoincrement())
  member_id                               Int
  stroe_id                                Int?
  parent_id                               Int?
  create_at                               DateTime?   @default(now()) @db.Timestamp(0)
  dr                                      Int?        @default(0) @db.TinyInt
  member_memberTomember_article_member_id member      @relation("memberTomember_article_member_id", fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_article_ibfk_1")
  store_info                              store_info? @relation(fields: [stroe_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_article_ibfk_2")
  member_memberTomember_article_parent_id member?     @relation("memberTomember_article_parent_id", fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_article_ibfk_3")

  @@index([member_id], map: "member_id")
  @@index([parent_id], map: "parent_id")
  @@index([stroe_id], map: "stroe_id")
}

model member_article_like {
  id         Int       @id @default(autoincrement())
  member_id  Int
  article_id Int?
  type       Int?
  create_at  DateTime? @default(now()) @db.Timestamp(0)
  dr         Int?      @default(0) @db.TinyInt
  member     member    @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_article_like_ibfk_1")
  article    article?  @relation(fields: [article_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_article_like_ibfk_2")

  @@index([article_id], map: "article_id")
  @@index([member_id], map: "member_id")
}

model member_cart {
  id                                    Int                                 @id @default(autoincrement())
  member_id                             Int
  product_specification_middle_price_id Int?
  product_id                            Int?
  num                                   Int?
  type                                  Int?
  selected                              Boolean?                            @default(false)
  price                                 Decimal?                            @db.Decimal(10, 2)
  preferential_price                    Decimal?                            @db.Decimal(10, 2)
  points_deduction                      String?                             @db.VarChar(255)
  freight                               String?                             @db.VarChar(255)
  created_time                          DateTime?                           @default(now()) @db.DateTime(0)
  dr                                    Int?                                @default(0)
  product_specification_middle_price    product_specification_middle_price? @relation(fields: [product_specification_middle_price_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cart_product_ibfk_2")
  product                               product?                            @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cart_product_ibfk_3")
  member                                member                              @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_cart_ibfk_1")

  @@index([product_specification_middle_price_id], map: "cart_product_ibfk_2")
  @@index([product_id], map: "cart_product_ibfk_3")
  @@index([member_id], map: "idx_member_id")
}

model member_contacts {
  id             Int          @id @default(autoincrement())
  member_id      Int?
  member_text_id Int?
  create_at      DateTime?    @db.DateTime(0)
  update_at      DateTime?    @db.DateTime(0)
  dr             Int?         @db.TinyInt
  member         member?      @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_contacts_ibfk_1")
  member_text    member_text? @relation(fields: [member_text_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_contacts_ibfk_2")

  @@index([member_id], map: "member_id")
  @@index([member_text_id], map: "member_text_id")
}

model member_coupon {
  id           Int            @id @default(autoincrement())
  member_id    Int?
  coupon_id    Int?
  status       Boolean?       @default(false)
  open_status  Boolean?
  open_info    String?        @db.VarChar(255)
  creatad_at   DateTime?      @default(now()) @db.DateTime(0)
  dr           Int?           @default(0) @db.TinyInt
  member       member?        @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_coupon_ibfk_1")
  coupon       coupon?        @relation(fields: [coupon_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_coupon_ibfk_2")
  order_coupon order_coupon[]

  @@index([coupon_id], map: "coupon_id")
  @@index([id], map: "id")
  @@index([id], map: "id_2")
  @@index([member_id], map: "member_id")
}

model member_department {
  id            Int       @id
  name          String?   @db.VarChar(255)
  parent_id     Int?
  description   String?   @db.Text
  created_time  DateTime? @db.DateTime(0)
  modified_time DateTime? @db.DateTime(0)
  dr            Int?
  member        member[]
}

model member_favorite {
  id            Int         @id @default(autoincrement())
  member_id     Int
  type          Boolean?
  product_id    Int?
  short_id      Int?
  created_time  DateTime?   @default(now()) @db.DateTime(0)
  modified_time DateTime?   @default(now()) @db.DateTime(0)
  dr            Int?        @default(0)
  member        member      @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_favorite_ibfk_1")
  product       product?    @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_favorite_ibfk_2")
  store_info    store_info? @relation(fields: [short_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_favorite_ibfk_3")

  @@index([member_id], map: "member_id")
  @@index([product_id], map: "product_id")
  @@index([short_id], map: "short_id")
}

model member_festival_record {
  id                Int               @id @default(autoincrement())
  user_id           Int
  festival_id       Int
  status            Int               @db.TinyInt
  created_time      DateTime          @default(now()) @db.DateTime(0)
  member            member            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_festival_record_ibfk_1")
  festival_activity festival_activity @relation(fields: [festival_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_festival_record_ibfk_2")

  @@index([festival_id], map: "festival_id")
  @@index([user_id], map: "user_id")
}

model member_gift {
  id          Int          @id @default(autoincrement())
  member_id   Int?
  gift_id     Int?
  status      Boolean?     @default(false)
  open_status Boolean?
  open_info   String?      @db.VarChar(255)
  creatad_at  DateTime?    @default(now()) @db.DateTime(0)
  dr          Int?         @default(0) @db.TinyInt
  member      member?      @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_gift_ibfk_1")
  gift_coupon gift_coupon? @relation(fields: [gift_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_gift_ibfk_2")

  @@index([gift_id], map: "gift_id")
  @@index([member_id], map: "member_id")
}

model member_gift_package_combination {
  id                          Int       @id
  member_id                   Int?
  gift_package_combination_id Int?
  create_at                   DateTime? @db.DateTime(0)
  update_at                   DateTime? @db.DateTime(0)
  deleled_at                  String?   @db.VarChar(255)
  dr                          Int?      @db.TinyInt
}

model member_level {
  id                Int                @id @default(autoincrement())
  level_name        String             @db.VarChar(50)
  upgrade_condition Int
  discount          Decimal?           @db.Decimal(4, 2)
  status            Boolean
  create_at         DateTime?          @db.DateTime(0)
  update_at         DateTime?          @db.DateTime(0)
  deleted_at        DateTime?          @db.DateTime(0)
  dr                Boolean?           @default(false)
  gift_send_method  gift_send_method[]
  member            member[]

  @@index([level_name], map: "level_name")
}

model member_mass_template {
  id                       Int                        @id @default(autoincrement()) @db.UnsignedInt
  template_name            String?                    @db.VarChar(255)
  official_accounts_id     Int?                       @db.UnsignedInt
  first_data               String?                    @db.Text
  first_data_colour        String?                    @db.VarChar(255)
  detail_data              String?                    @db.Text
  remark_data              String?                    @db.VarChar(255)
  remark_data_colour       String?                    @db.VarChar(255)
  link_id                  String?                    @db.VarChar(255)
  member_id                Int?                       @db.UnsignedInt
  dr                       Int?                       @default(0) @db.UnsignedTinyInt
  created_at               DateTime                   @default(now()) @db.Timestamp(0)
  updated_at               DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?                  @db.Timestamp(0)
  mass_message             mass_message[]
  member_mass_template_key member_mass_template_key[]
}

model member_mass_template_key {
  id                              Int                               @id @default(autoincrement()) @db.UnsignedInt
  member_mass_template_id         Int?                              @db.UnsignedInt
  name                            String?                           @db.VarChar(255)
  value                           String?                           @db.VarChar(255)
  color                           String?                           @db.VarChar(255)
  dr                              Int?                              @default(0) @db.UnsignedInt
  created_at                      DateTime                          @default(now()) @db.Timestamp(0)
  updated_at                      DateTime                          @default(now()) @db.Timestamp(0)
  deleted_at                      DateTime?                         @db.Timestamp(0)
  member_mass_template            member_mass_template?             @relation(fields: [member_mass_template_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_mass_template_key_ibfk_1")
  member_mass_template_key_mod    member_mass_template_key_mod[]
  member_mass_template_key_record member_mass_template_key_record[]

  @@index([member_mass_template_id], map: "member_mass_template_id")
}

model member_mass_template_key_mod {
  id                              Int                               @id @default(autoincrement())
  member_mass_template_key_id     Int?                              @db.UnsignedInt
  type                            Int?
  person                          String?                           @db.Text
  member_mass_template_key        member_mass_template_key?         @relation(fields: [member_mass_template_key_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_mass_template_key_mod_ibfk_1")
  member_mass_template_key_record member_mass_template_key_record[]

  @@index([member_mass_template_key_id], map: "member_mass_template_key_id")
}

model member_mass_template_key_record {
  id                              Int                           @id @default(autoincrement())
  member_mass_template_key_mod_id Int?
  member_mass_template_key_id     Int?                          @db.UnsignedInt
  content                         String?                       @db.Text
  num                             Int?
  create_at                       DateTime?                     @db.DateTime(0)
  member_mass_template_key        member_mass_template_key?     @relation(fields: [member_mass_template_key_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_mass_template_key_record_ibfk_1")
  member_mass_template_key_mod    member_mass_template_key_mod? @relation(fields: [member_mass_template_key_mod_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_mass_template_key_record_ibfk_2")

  @@index([member_mass_template_key_id], map: "member_mass_template_key_id")
  @@index([member_mass_template_key_mod_id], map: "member_mass_template_key_mod_id")
}

model member_payment_activity_record {
  id                  Int              @id @default(autoincrement())
  user_id             Int
  payment_activity_id Int
  status              Int              @default(0) @db.TinyInt
  created_time        DateTime         @default(now()) @db.DateTime(0)
  member              member           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_payment_activity_record_ibfk_1")
  payment_activity    payment_activity @relation(fields: [payment_activity_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_payment_activity_record_ibfk_2")

  @@index([payment_activity_id], map: "payment_activity_id")
  @@index([user_id], map: "user_id")
}

model member_product {
  id         Int       @id @default(autoincrement())
  member_id  Int?
  prdouct_id Int?
  create_at  DateTime? @db.DateTime(0)
  member     member?   @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_product_ibfk_1")
  product    product?  @relation(fields: [prdouct_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_product_ibfk_2")

  @@index([member_id], map: "member_id")
  @@index([prdouct_id], map: "prdouct_id")
}

model member_ship_basic_settings {
  id                  Int       @id @default(autoincrement())
  is_enabled          Int       @default(0) @db.TinyInt
  logo_url            String    @db.VarChar(255)
  card_prefix         String?   @db.VarChar(10)
  is_protocol_enabled Int       @default(0) @db.TinyInt
  protocol_name       String?   @db.VarChar(50)
  protocol_content    String?   @db.Text
  card_style          String    @db.VarChar(20)
  plus_style          String    @db.VarChar(20)
  created_time        DateTime  @default(now()) @db.DateTime(0)
  updated_time        DateTime? @db.DateTime(0)
  deleted_time        DateTime? @db.DateTime(0)
  dr                  Int       @default(0) @db.TinyInt

  @@index([card_prefix], map: "idx_card_prefix")
  @@index([card_style], map: "idx_card_style")
  @@index([created_time], map: "idx_created_time")
  @@index([is_enabled], map: "idx_is_enabled")
  @@index([is_protocol_enabled], map: "idx_is_protocol_enabled")
  @@index([plus_style], map: "idx_plus_style")
}

model member_ship_price_spec {
  id              Int       @id @default(autoincrement())
  membership_id   Int
  granularity     Int       @db.TinyInt
  validity_period Int
  sell_price      Decimal   @db.Decimal(10, 2)
  market_price    Decimal   @db.Decimal(10, 2)
  first_buy_price Decimal   @db.Decimal(10, 2)
  balance         Decimal   @db.Decimal(10, 2)
  total_amount    Decimal   @db.Decimal(10, 2)
  created_time    DateTime  @default(now()) @db.DateTime(0)
  updated_time    DateTime? @db.DateTime(0)
  deleted_time    DateTime? @db.DateTime(0)
  dr              Int       @default(0) @db.TinyInt

  @@index([created_time], map: "idx_created_time")
  @@index([granularity, validity_period], map: "idx_granularity_validity_period")
  @@index([membership_id], map: "idx_membership_id")
  @@index([sell_price], map: "idx_sell_price")
}

model member_shop_cart {
  id                                    Int                                 @id @default(autoincrement())
  member_id                             Int
  shop_id                               BigInt?
  product_specification_middle_price_id Int?
  product_id                            Int?
  num                                   Int?
  type                                  Int?
  selected                              Boolean?                            @default(false)
  price                                 Decimal?                            @db.Decimal(10, 2)
  discount                              Decimal?                            @db.Decimal(10, 2)
  amount_off                            Decimal?                            @db.Decimal(10, 2)
  preferential_price                    Decimal?                            @db.Decimal(10, 2)
  points_deduction                      Int?
  renter_points                         Int?
  freight                               String?                             @db.VarChar(255)
  created_time                          DateTime?                           @default(now()) @db.DateTime(0)
  dr                                    Int?                                @default(0)
  member                                member                              @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_shop_cart_ibfk_1")
  product_specification_middle_price    product_specification_middle_price? @relation(fields: [product_specification_middle_price_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_shop_cart_ibfk_2")
  product                               product?                            @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_shop_cart_ibfk_3")
  shop                                  shop?                               @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_shop_cart_ibfk_4")

  @@index([member_id], map: "idx_member_id")
  @@index([product_specification_middle_price_id], map: "member_shop_cart_ibfk_2")
  @@index([product_id], map: "member_shop_cart_ibfk_3")
  @@index([shop_id], map: "member_shop_cart_ibfk_4")
}

model member_store_info {
  id            Int         @id @default(autoincrement())
  member_id     Int?
  store_info_id Int?
  balance       Decimal?    @db.Decimal(10, 2)
  create_at     DateTime?   @db.DateTime(0)
  update_at     DateTime?   @db.DateTime(0)
  deleted_at    DateTime?   @db.DateTime(0)
  dr            Int?        @default(0) @db.TinyInt
  member        member?     @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_store_info_ibfk_1")
  store_info    store_info? @relation(fields: [store_info_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_store_info_ibfk_2")

  @@index([member_id], map: "member_id")
  @@index([store_info_id], map: "store_info_id")
}

model member_system_template_recold {
  id                                    Int                                     @id @default(autoincrement())
  member_id                             Int?
  system_template_id                    Int?                                    @db.UnsignedInt
  create_at                             DateTime?                               @db.DateTime(0)
  dr                                    Int?                                    @db.TinyInt
  member                                member?                                 @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_system_template_recold_ibfk_1")
  system_template                       system_template?                        @relation(fields: [system_template_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_system_template_recold_ibfk_2")
  member_system_template_recold_details member_system_template_recold_details[]

  @@index([member_id], map: "member_id")
  @@index([system_template_id], map: "system_template_id")
}

model member_system_template_recold_details {
  id                               Int                            @id @default(autoincrement())
  member_system_template_recold_id Int?
  system_template_fields_id        Int?                           @db.UnsignedInt
  contoc                           String?                        @db.Text
  create_at                        Int?
  dr                               Int?                           @db.TinyInt
  member_system_template_recold    member_system_template_recold? @relation(fields: [member_system_template_recold_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_system_template_recold_details_ibfk_1")
  system_template_fields           system_template_fields?        @relation(fields: [system_template_fields_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_system_template_recold_details_ibfk_2")

  @@index([member_system_template_recold_id], map: "member_system_template_recold_id")
  @@index([system_template_fields_id], map: "system_template_fields_id")
}

model member_tag {
  id                Int                 @id @default(autoincrement())
  tag_config_status Boolean
  tag_name          String              @db.VarChar(50)
  count             Int?
  tag_status        Int?
  total_amount      Decimal?            @db.Decimal(10, 2)
  total_orders      Int?
  points            Int?
  balance           Decimal?            @db.Decimal(10, 2)
  purchased_items   Int?
  create_at         DateTime?           @db.DateTime(0)
  update_at         DateTime?           @db.DateTime(0)
  deleted_at        DateTime?           @db.DateTime(0)
  dr                Boolean?            @default(false)
  gift_send_method  gift_send_method[]
  member_tag_middle member_tag_middle[]

  @@index([tag_name], map: "tag_name")
}

model member_tag_middle {
  id         Int        @id @default(autoincrement())
  member_id  Int
  tag_id     Int
  tag_name   String     @db.VarChar(50)
  create_at  DateTime   @db.DateTime(0)
  update_at  DateTime?  @db.DateTime(0)
  deleted_at DateTime?  @db.DateTime(0)
  dr         Boolean?   @default(false)
  member     member     @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_tag_middle_ibfk_1")
  member_tag member_tag @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_tag_middle_ibfk_2")

  @@index([tag_id], map: "idx_label_id")
  @@index([member_id], map: "idx_member_id")
  @@index([tag_name], map: "tag_name")
}

model member_text {
  id              Int               @id @default(autoincrement())
  member_id       Int?
  status          Int?              @db.TinyInt
  text            String?           @db.Text
  create_at       DateTime?         @db.DateTime(0)
  update_at       DateTime?         @db.DateTime(0)
  dr              Int?              @db.TinyInt
  member          member?           @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_text_ibfk_1")
  member_contacts member_contacts[]

  @@index([member_id], map: "member_id")
}

model member_vip_mony {
  id              Int       @id @default(autoincrement())
  recharge_amount Decimal?  @db.Decimal(10, 2)
  gift_amount     Decimal?  @db.Decimal(10, 2)
  create_time     DateTime? @db.DateTime(0)
  modify_time     DateTime? @db.DateTime(0)
  dr              Int?      @default(0)
}

model mp_link {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  link_name  String?   @db.VarChar(255)
  link_url   String?   @db.VarChar(255)
  url_link   String?   @db.VarChar(255)
  url_scheme String?   @db.VarChar(255)
  valid_type Int?      @db.TinyInt
  add_time   Int?      @db.UnsignedInt
  times      Int?      @db.UnsignedInt
  day_type   Int?      @db.TinyInt
  days       Int?      @db.UnsignedInt
  time_str   String?   @db.VarChar(255)
  dr         Int?      @db.UnsignedTinyInt
  website_id Int?      @db.UnsignedInt
  shop_id    Int?      @db.UnsignedInt
  created_at DateTime  @default(now()) @db.Timestamp(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
}

model oder_commission {
  id                                  Int     @id @default(autoincrement())
  oder_id                             Int?    @db.UnsignedInt
  distrbution_commission_bonus        String? @db.VarChar(255)
  distrbution_member_commission_bonus String? @db.VarChar(255)
  agent_commission_bonus              String? @db.VarChar(255)
  agent_member_commission_bonus       String? @db.VarChar(255)
  captain_commission_bonus            String? @db.VarChar(255)
  captain_member__commission_bonus    String? @db.VarChar(255)
  global_commission_bonus             String? @db.VarChar(255)
  global_member_commission_bonus      String? @db.VarChar(255)
  dr                                  Int?    @default(0) @db.TinyInt
  order                               order?  @relation(fields: [oder_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "oder_commission_ibfk_1")

  @@index([oder_id], map: "oder_id")
}

model order {
  id                         Int                          @id @default(autoincrement()) @db.UnsignedInt
  address                    String?                      @db.VarChar(255)
  out_trade_no               String?                      @db.VarChar(255)
  order_status_type          Int                          @db.TinyInt
  payment_method             Int?                         @db.TinyInt
  apply_id                   Int?
  order_type                 Int?                         @db.TinyInt
  after_type                 Int?                         @default(5) @db.TinyInt
  after_status               Int?                         @db.TinyInt
  remark                     String?                      @db.VarChar(100)
  order_payment_voucher      String?                      @db.VarChar(255)
  parent_status              Int?                         @db.TinyInt
  parent_id                  String?                      @db.VarChar(255)
  uuid                       String?                      @unique(map: "uuid") @db.VarChar(255)
  member_id                  Int?
  distrbution_id             Int?
  order_date                 DateTime                     @default(now()) @db.Timestamp(0)
  payment_date               DateTime?                    @db.Timestamp(0)
  shipping_date              DateTime?                    @db.Timestamp(0)
  shipping_end_date          DateTime?                    @db.Timestamp(0)
  shipping_method            Int?
  completion_date            DateTime?                    @db.Timestamp(0)
  order_status               Int                          @default(0)
  total_merchandise          Decimal?                     @db.Decimal(10, 2)
  total_product_deduction    Decimal?                     @db.Decimal(10, 2)
  points_deduction           Decimal?                     @db.Decimal(10, 2)
  freight                    Decimal?                     @db.Decimal(10, 2)
  amount_received            Decimal?                     @db.Decimal(10, 2)
  pay_balance                Decimal?                     @db.Decimal(10, 2)
  pay_point                  Int?
  pay_mony                   Decimal?                     @db.Decimal(10, 2)
  pay_vocher_num             Decimal?                     @db.Decimal(10, 0)
  pay_ho_num                 Decimal?                     @db.Decimal(10, 0)
  pay_coupon_num             Decimal?                     @db.Decimal(10, 0)
  dr                         Boolean?                     @default(false)
  created_at                 DateTime?                    @default(now()) @db.Timestamp(0)
  updated_at                 DateTime?                    @default(now()) @db.Timestamp(0)
  updated_by                 Int?                         @db.UnsignedInt
  deleted_at                 DateTime?                    @default(now()) @db.Timestamp(0)
  receiver_mobile            String?                      @db.VarChar(255)
  receiver_province          String?                      @db.VarChar(255)
  receiver_city              String?                      @db.VarChar(255)
  receiver_district          String?                      @db.VarChar(255)
  receiver_address           String?                      @db.VarChar(255)
  receiver_zip               String?                      @db.VarChar(10)
  receiver_name              String?                      @db.VarChar(255)
  operator                   String?                      @db.VarChar(255)
  member                     member?                      @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_ibfk_1")
  area_bonus                 area_bonus[]
  bargain_record             bargain_record[]
  captain_bonus              captain_bonus[]
  coupon_record              coupon_record[]
  distributor_bonus          distributor_bonus[]
  gift_record                gift_record[]
  global_bonus               global_bonus[]
  group_buying_member_record group_buying_member_record[]
  invoices                   invoices[]
  oder_commission            oder_commission[]
  order_coupon               order_coupon[]
  order_log                  order_log[]
  order_note                 order_note[]
  order_products             order_products[]
  presale_record             presale_record[]
  purchase_order             purchase_order[]
  refund_log                 refund_log[]

  @@index([member_id], map: "order_ibfk_1")
}

model order_barrage {
  id                 Int                  @id @default(autoincrement()) @db.UnsignedInt
  order_barrage      Int?                 @db.TinyInt
  barrage_type       Int?                 @db.TinyInt
  display_module     Int?                 @db.TinyInt
  barrage_duration   Int?
  loop_delivery      Int?                 @db.TinyInt
  created_at         DateTime             @default(now()) @db.Timestamp(0)
  updated_at         DateTime             @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?            @db.Timestamp(0)
  order_barrage_rule order_barrage_rule[]
}

model order_barrage_rule {
  id                Int            @id @default(autoincrement()) @db.UnsignedInt
  order_barrage_id  Int?           @db.UnsignedInt
  time_period       String?        @db.VarChar(255)
  delivery_amount   Int?
  delivery_interval String?        @db.VarChar(255)
  created_at        DateTime       @default(now()) @db.Timestamp(0)
  updated_at        DateTime       @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?      @db.Timestamp(0)
  order_barrage     order_barrage? @relation(fields: [order_barrage_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_barrage_rule_ibfk_1")

  @@index([order_barrage_id], map: "order_barrage_id")
}

model order_coupon {
  id            Int            @id @default(autoincrement())
  order_id      Int?           @db.UnsignedInt
  status        Int?
  store_id      Int?
  coupon_id     Int?
  create_at     DateTime?      @db.DateTime(0)
  dr            Int?           @db.TinyInt
  member_coupon member_coupon? @relation(fields: [coupon_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_coupon_ibfk_1")
  order         order?         @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_coupon_ibfk_2")

  @@index([coupon_id], map: "coupon_id")
  @@index([order_id], map: "order_id")
}

model order_log {
  id             Int      @id @default(autoincrement()) @db.UnsignedInt
  order_id       Int      @db.UnsignedInt
  order_status   String?  @db.VarChar(255)
  action         String?  @db.VarChar(255)
  operation_time DateTime @db.DateTime(0)
  created_at     DateTime @db.DateTime(0)
  updated_at     DateTime @db.DateTime(0)
  deleted_at     DateTime @default(now()) @db.Timestamp(0)
  order          order    @relation(fields: [order_id], references: [id], onDelete: Cascade, map: "order_log")

  @@index([order_id], map: "order_log")
}

model order_note {
  id             Int      @id @default(autoincrement()) @db.UnsignedInt
  order_id       Int      @db.UnsignedInt
  note_content   String   @db.VarChar(255)
  operator       String?  @db.VarChar(255)
  operation_time DateTime @db.DateTime(0)
  created_at     DateTime @db.DateTime(0)
  updated_at     DateTime @db.DateTime(0)
  deleted_at     DateTime @default(now()) @db.Timestamp(0)
  order          order    @relation(fields: [order_id], references: [id], onDelete: Cascade, map: "order_note")

  @@index([order_id], map: "order_note")
}

model order_products {
  id                                    Int                                 @id @default(autoincrement()) @db.UnsignedInt
  order_id                              Int                                 @db.UnsignedInt
  product_id                            Int
  product_specification_middle_price_id Int?
  stort_id                              Int?
  shop_id                               BigInt?
  number                                Int                                 @default(1)
  pre_type                              Int                                 @db.TinyInt
  price                                 Decimal?                            @db.Decimal(10, 2)
  discount_price                        Decimal?                            @db.Decimal(10, 2)
  proint                                Decimal?                            @db.Decimal(10, 2)
  vocher_num                            Decimal?                            @db.Decimal(10, 0)
  ho_num                                Decimal?                            @db.Decimal(10, 2)
  coupon_num                            Decimal?                            @db.Decimal(10, 2)
  tax                                   Decimal?                            @db.Decimal(10, 2)
  membership_card_payment               Decimal?                            @db.Decimal(10, 2)
  price_adjustment                      Decimal?                            @db.Decimal(10, 2)
  total                                 Decimal?                            @db.Decimal(10, 2)
  created_at                            DateTime?                           @default(now()) @db.Timestamp(0)
  updated_at                            DateTime?                           @default(now()) @db.Timestamp(0)
  deleted_at                            DateTime?                           @db.Timestamp(0)
  dr                                    Int?                                @default(0)
  company_code                          String?                             @db.VarChar(255)
  money                                 Decimal                             @default(0.00) @db.Decimal(10, 2)
  logistics_status                      Int?                                @default(0) @db.UnsignedTinyInt
  time                                  DateTime?                           @db.Timestamp(0)
  type                                  Int?                                @default(1) @db.UnsignedTinyInt
  type_name                             String?                             @db.VarChar(50)
  tracking_id                           String?                             @db.VarChar(50)
  amount_off                            Decimal?                            @db.Decimal(10, 2)
  discount                              Decimal?                            @db.Decimal(10, 2)
  remark                                String?                             @db.VarChar(255)
  product                               product                             @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_products_ibfk_3")
  order                                 order                               @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_products_ibfk_4")
  product_specification_middle_price    product_specification_middle_price? @relation(fields: [product_specification_middle_price_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_products_ibfk_5")
  store_info                            store_info?                         @relation(fields: [stort_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_products_ibfk_6")
  shop                                  shop?                               @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_products_ibfk_7")
  purchase_order_product                purchase_order_product[]
  supply_order_product                  supply_order_product[]

  @@index([order_id], map: "order_id")
  @@index([product_id], map: "product_id")
  @@index([product_specification_middle_price_id], map: "product_specification_middle_price_id")
  @@index([shop_id], map: "shop_id")
  @@index([stort_id], map: "stort_id")
}

model package_coupons {
  id           Int          @id @default(autoincrement())
  package_id   Int
  type         Int?         @db.TinyInt
  coupon_id    Int?
  gift_id      Int?
  created_time DateTime?    @default(now()) @db.DateTime(0)
  updated_time DateTime?    @default(now()) @db.DateTime(0)
  deleted_time DateTime?    @db.DateTime(0)
  dr           Int          @default(0)
  package_list package_list @relation(fields: [package_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "package_coupons_ibfk_1")
  coupon       coupon?      @relation(fields: [coupon_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "package_coupons_ibfk_2")
  gift_coupon  gift_coupon? @relation(fields: [gift_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "package_coupons_ibfk_3")

  @@index([coupon_id], map: "coupon_id")
  @@index([gift_id], map: "gift_id")
  @@index([package_id], map: "package_id")
}

model package_list {
  id                         Int               @id @default(autoincrement())
  store_id                   Int?
  status                     Int?
  coupon_package             String            @db.VarChar(50)
  total_quantity             Int
  price                      Decimal?          @db.Decimal(10, 2)
  per_person_limit           Int
  start_time                 DateTime          @db.DateTime(0)
  end_time                   DateTime          @db.DateTime(0)
  coupon_package_description String?           @db.VarChar(255)
  mobile_link                String?           @db.VarChar(255)
  pc_link                    String?           @db.VarChar(255)
  mini_program_link          String?           @db.VarChar(255)
  created_time               DateTime?         @default(now()) @db.DateTime(0)
  updated_time               DateTime?         @default(now()) @db.DateTime(0)
  deleted_time               DateTime?         @db.DateTime(0)
  dr                         Int               @default(0)
  store_info                 store_info?       @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "package_list_ibfk_1")
  package_coupons            package_coupons[]

  @@index([store_id], map: "store_id")
}

model page_show {
  id               Int       @id @default(autoincrement())
  name             String    @db.VarChar(50)
  shop_id          Int?
  button_structure String?   @db.LongText
  structure        String?   @db.LongText
  type             Int       @default(0) @db.TinyInt
  port             String    @default("0") @db.VarChar(50)
  Bulletbox        Boolean?
  style            Int?
  status           Boolean?
  create_time      DateTime? @default(now()) @db.Timestamp(0)
  update_time      DateTime? @default(now()) @db.Timestamp(0)
  dr               Int       @default(0) @db.TinyInt
}

model payment_activity {
  id                             Int                              @id @default(autoincrement())
  store_id                       Int?
  activity_name                  String                           @db.VarChar(50)
  status                         Int?
  start_time                     DateTime                         @db.DateTime(0)
  end_time                       DateTime                         @db.DateTime(0)
  consume_type                   Int                              @db.TinyInt
  consume_threshold              Decimal?                         @db.Decimal(10, 2)
  buy_product_id                 Int?
  award_trigger                  Int                              @db.TinyInt
  auto_award                     Int                              @default(0) @db.TinyInt
  priority                       Int                              @default(0) @db.TinyInt
  prize_type                     Int                              @db.TinyInt
  prize_name                     String?                          @db.VarChar(50)
  balance                        Decimal?                         @db.Decimal(10, 2)
  points                         Int?
  gift_product_id                Int?
  coupon_id                      Int?
  gift_card_id                   Int?
  prize_image                    String?                          @db.VarChar(255)
  prize_expired_time             DateTime                         @db.DateTime(0)
  no_prize_message               String?                          @db.VarChar(255)
  create_time                    DateTime?                        @db.DateTime(0)
  updated_time                   DateTime                         @default(now()) @db.DateTime(0)
  deleted_time                   DateTime?                        @db.DateTime(0)
  dr                             Int                              @default(0) @db.TinyInt
  product                        product?                         @relation(fields: [gift_product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "payment_activity_ibfk_1")
  coupon                         coupon?                          @relation(fields: [coupon_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "payment_activity_ibfk_2")
  gift_coupon                    gift_coupon?                     @relation(fields: [gift_card_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "payment_activity_ibfk_3")
  store_info                     store_info?                      @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "payment_activity_ibfk_4")
  member_payment_activity_record member_payment_activity_record[]

  @@index([coupon_id], map: "coupon_id")
  @@index([gift_card_id], map: "gift_card_id")
  @@index([gift_product_id], map: "gift_product_id")
  @@index([store_id], map: "store_id")
}

model payment_config {
  id                            Int      @id @default(autoincrement())
  type                          Int?     @default(0) @db.TinyInt
  port                          Int?     @default(1) @db.TinyInt
  open_enabled                  Int?     @default(0) @db.TinyInt
  wx_appid                      String?  @default("") @db.VarChar(32)
  wx_mchid                      String?  @default("") @db.VarChar(32)
  wx_api_key_v2                 String?  @default("") @db.VarChar(32)
  wx_auth_domain                String?  @default("") @db.VarChar(255)
  wx_h5_domain                  String?  @default("") @db.VarChar(255)
  wx_withdraw_enabled           Int?     @default(0) @db.TinyInt
  wx_api_key_v3                 String?  @default("") @db.VarChar(32)
  wx_apiclient_cert             String?  @default("") @db.VarChar(255)
  wx_apiclient_key              String?  @default("") @db.VarChar(255)
  alipay_account                String?  @default("") @db.VarChar(50)
  alipay_pid                    String?  @default("") @db.VarChar(50)
  alipay_key                    String?  @default("") @db.VarChar(50)
  alipay_app_private_key        String?  @default("") @db.VarChar(1024)
  alipay_is_cert                Int?     @default(0) @db.TinyInt
  alipay_app_cert_public_key    String?  @default("") @db.VarChar(1024)
  alipay_alipay_cert_public_key String?  @default("") @db.VarChar(1024)
  alipay_alipay_root_cert       String?  @default("") @db.VarChar(1024)
  cashier_merchant_id           String?  @default("") @db.VarChar(50)
  cashier_account_id            String?  @default("") @db.VarChar(50)
  cashier_md5_key               String?  @default("") @db.VarChar(50)
  bank_withdraw_enabled         Int?     @default(0) @db.TinyInt
  allinpay_merchant_id          String?  @default("") @db.VarChar(50)
  allinpay_username             String?  @default("") @db.VarChar(50)
  allinpay_password             String?  @default("") @db.VarChar(50)
  allinpay_cer_file             String?  @default("") @db.VarChar(255)
  allinpay_p12_file             String?  @default("") @db.VarChar(255)
  partner_code                  String   @default("") @db.VarChar(255)
  credential_code               String   @default("") @db.VarChar(255)
  currency_type                 Int?     @default(0) @db.TinyInt
  payment_name                  String?  @default("") @db.VarChar(255)
  payment_qr                    String?  @default("") @db.VarChar(255)
  payment_desc                  String?  @default("") @db.VarChar(255)
  enabled                       Int?     @default(0) @db.TinyInt
  merchant_id                   String?  @default("") @db.VarChar(50)
  trade_merchant_id             String?  @default("") @db.VarChar(50)
  hjpay_md5_key                 String?  @default("") @db.VarChar(32)
  hjpay_appid                   String?  @default("") @db.VarChar(32)
  hjpay_wx_enabled              Int?     @default(0) @db.TinyInt
  hjpay_alipay_enabled          Int?     @default(0) @db.TinyInt
  hjpay_fastpay_enabled         Int?     @default(0) @db.TinyInt
  hjpay_divided_enabled         Int?     @default(0) @db.TinyInt
  hjpay_auto_divided_enabled    Int?     @default(0) @db.TinyInt
  create_time                   DateTime @default(now()) @db.DateTime(0)
  update_time                   DateTime @default(now()) @db.DateTime(0)
}

model permissions {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(50)
  path                     String?                    @db.VarChar(255)
  ico                      String?                    @db.VarChar(255)
  status                   Int?
  redirect                 String?                    @db.VarChar(255)
  sort                     Int?
  parent_id                Int?
  role_version_permissions role_version_permissions[]

  @@index([parent_id], map: "idx_parent_id")
}

model plan_log {
  id             Int       @id @default(autoincrement())
  file_name      String    @db.VarChar(100)
  task_type      String    @db.VarChar(50)
  status         String    @db.VarChar(20)
  export_content String?   @db.Text
  remark         String?   @db.VarChar(200)
  created_time   DateTime? @default(now()) @db.DateTime(0)
  updated_time   DateTime? @default(now()) @db.DateTime(0)
  deleted_time   DateTime? @default(now()) @db.DateTime(0)
}

model position_privilege {
  id           Int       @id @default(autoincrement())
  position_id  Int
  privilege_id Int
  status       Boolean?  @default(true)
  created_at   DateTime  @default(now()) @db.Timestamp(0)
  updated_at   DateTime  @default(now()) @db.Timestamp(0)
  deleted_at   DateTime  @default(now()) @db.Timestamp(0)
  dr           Boolean?
  positions    positions @relation(fields: [position_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "position_privilege_ibfk_1")
  sys_dict     sys_dict  @relation(fields: [privilege_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "position_privilege_ibfk_2")

  @@index([position_id], map: "position_id")
  @@index([privilege_id], map: "privilege_id")
}

model positions {
  id                 Int                  @id @default(autoincrement())
  type               Int?                 @db.TinyInt
  name               String               @db.VarChar(255)
  sort               Int?
  created_at         DateTime             @default(now()) @db.Timestamp(0)
  updated_at         DateTime             @default(now()) @db.Timestamp(0)
  deleted_at         DateTime             @default(now()) @db.Timestamp(0)
  dr                 Boolean?             @default(false)
  employee           employee[]
  position_privilege position_privilege[]

  @@index([name], map: "idx_position_name")
}

model poster_record {
  id               Int           @id @default(autoincrement()) @db.UnsignedInt
  poster_id        Int?          @db.UnsignedInt
  reco_user_id     Int?          @db.UnsignedInt
  reco_user_name   String?       @db.VarChar(255)
  reco_user_tel    String?       @db.VarChar(255)
  be_reco_user_id  Int?          @db.UnsignedInt
  b_reco_user_name String?       @db.VarChar(255)
  b_reco_user_tel  String?       @db.VarChar(255)
  website_id       Int?          @db.UnsignedInt
  shop_id          Int?          @db.UnsignedInt
  created_at       DateTime      @default(now()) @db.Timestamp(0)
  updated_at       DateTime      @default(now()) @db.Timestamp(0)
  deleted_at       DateTime?     @db.Timestamp(0)
  super_poster     super_poster? @relation(fields: [poster_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "poster_record_ibfk_1")

  @@index([poster_id], map: "poster_id")
}

model poster_task {
  id                           Int                @id @default(autoincrement())
  store_id                     Int?
  status                       Int?
  task_name                    String             @db.VarChar(50)
  task_icon_url                String?            @db.VarChar(500)
  reply_keyword                String?            @db.VarChar(50)
  start_time                   DateTime           @default(now()) @db.DateTime(0)
  end_time                     DateTime           @db.DateTime(0)
  task_limit                   Int?
  not_started_hint             String?            @db.VarChar(500)
  ended_hint                   String?            @db.VarChar(500)
  wait_text                    String?            @db.VarChar(500)
  auto_accept_task             Int                @default(0) @db.TinyInt
  repeatable                   Int                @default(0) @db.TinyInt
  task_desc                    String?            @db.Text
  poster_design                String?            @db.Text
  push_type                    Int                @default(0) @db.TinyInt
  push_title                   String?            @db.VarChar(500)
  push_cover                   String?            @db.VarChar(500)
  push_description             String?            @db.VarChar(1000)
  push_link                    String?            @db.VarChar(500)
  permission_setting           Int                @default(0) @db.TinyInt
  not_opened_hint              String?            @db.VarChar(500)
  not_opened_desc_link         String?            @db.VarChar(500)
  follow_to_get_subordinate    Int                @default(0) @db.TinyInt
  follow_to_become_distributor Int                @default(0) @db.TinyInt
  created_time                 DateTime           @default(now()) @db.DateTime(0)
  updated_time                 DateTime?          @db.DateTime(0)
  deleted_time                 DateTime?          @db.DateTime(0)
  dr                           Int                @default(0) @db.TinyInt
  poster_task_rule             poster_task_rule[]
  task_reward                  task_reward[]
}

model poster_task_rule {
  id           Int           @id @default(autoincrement())
  task_id      Int
  rule_type    Int           @db.TinyInt
  rule         String        @db.VarChar(500)
  created_time DateTime      @default(now()) @db.DateTime(0)
  updated_time DateTime?     @db.DateTime(0)
  deleted_time DateTime?     @db.DateTime(0)
  dr           Int           @default(0) @db.TinyInt
  poster_task  poster_task   @relation(fields: [task_id], references: [id], onDelete: Cascade, map: "poster_task_id")
  task_reward  task_reward[]

  @@index([task_id], map: "task_id")
}

model pre_item {
  pre_id     Int?
  pre_type   Int?
  id         Int      @id @default(autoincrement())
  label      String   @db.VarChar(255)
  nick_name  String?  @db.VarChar(255)
  sort       Int?     @default(1)
  intro      String   @db.Text
  revision   Boolean? @default(true)
  parent     String?  @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)
  deleted_at DateTime @default(now()) @db.Timestamp(0)
  dr         Int?     @default(0) @db.TinyInt
  product    product? @relation(fields: [pre_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pre_item_ibfk_1")

  @@index([pre_id], map: "pre_id")
}

model presale_list {
  id                           Int                            @id @default(autoincrement())
  store_id                     Int?
  status                       Int?
  activity_label               String                         @db.VarChar(50)
  presale_type                 Int                            @db.TinyInt
  start_time                   DateTime                       @db.DateTime(0)
  end_time                     DateTime                       @db.DateTime(0)
  product_id                   Int
  minimum_purchase             Int
  virtual_sales_volume         Int
  final_payment_start_time     DateTime?                      @db.DateTime(0)
  final_payment_end_time       DateTime?                      @db.DateTime(0)
  delivery_time                DateTime?                      @db.DateTime(0)
  mobile_link                  String?                        @db.VarChar(255)
  pc_link                      String?                        @db.VarChar(255)
  mini_program_link            String?                        @db.VarChar(255)
  created_time                 DateTime?                      @default(now()) @db.DateTime(0)
  updated_time                 DateTime?                      @default(now()) @db.DateTime(0)
  deleted_time                 DateTime?                      @db.DateTime(0)
  dr                           Int                            @default(0)
  advance_fee                  Decimal?                       @db.Decimal(10, 2)
  earnest_price                Decimal?                       @db.Decimal(10, 2)
  advance_stock                Int?
  purchase_limit               Int?
  product                      product                        @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "presale_list_ibfk_1")
  store_info                   store_info?                    @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "presale_list_ibfk_2")
  presale_record               presale_record[]
  product_price_group_purchase product_price_group_purchase[]

  @@index([product_id], map: "product_id")
  @@index([store_id], map: "store_id")
}

model presale_record {
  id           Int          @id @default(autoincrement())
  presale_id   Int
  order_id     Int          @db.UnsignedInt
  product_id   Int
  created_time DateTime?    @default(now()) @db.DateTime(0)
  updated_time DateTime?    @default(now()) @db.DateTime(0)
  deleted_time DateTime?    @db.DateTime(0)
  dr           Int          @default(0)
  presale_list presale_list @relation(fields: [presale_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "presale_record_ibfk_1")
  order        order        @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "presale_record_ibfk_2")
  product      product      @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "presale_record_ibfk_3")

  @@index([order_id], map: "idx_order_id")
  @@index([presale_id], map: "idx_presale_id")
  @@index([product_id], map: "product_id")
}

model print_style {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  name          String?         @db.VarChar(255)
  width         Int?
  height        Int?
  cutting_point String?         @db.VarChar(255)
  dr            Int?            @db.UnsignedTinyInt
  created_at    DateTime        @default(now()) @db.Timestamp(0)
  updated_at    DateTime        @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?       @db.Timestamp(0)
  form_template form_template[]
}

model prize {
  id                Int            @id @default(autoincrement())
  activity_id       Int            @db.UnsignedInt
  name              String?        @db.VarChar(50)
  prize_type        Int?           @default(0) @db.TinyInt
  prize_name        String?        @db.VarChar(100)
  prize_quantity    Int?
  winning_rate      Float?         @db.Float
  balance           Decimal?       @db.Decimal(10, 2)
  points            Int?
  product_id        Int?
  coupon_id         Int?
  gift_coupon_id    Int?
  prize_image       String?        @db.VarChar(255)
  prize_expire_time DateTime?      @db.DateTime(0)
  missed_prompt     String?        @db.VarChar(100)
  updated_time      DateTime?      @default(now()) @db.DateTime(0)
  deleted_time      DateTime?      @db.DateTime(0)
  dr                Int            @default(0)
  lucky_activity    lucky_activity @relation(fields: [activity_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "prize_ibfk_1")

  @@index([activity_id], map: "idx_activity_id")
}

model product {
  id                                 Int                                  @id @default(autoincrement())
  store_id                           Int?
  member_id                          Int?                                 @default(0)
  category_id                        Int?
  actrion_id                         Int?
  div_prd_id                         Int?                                 @default(0)
  sort                               Int?
  name                               String                               @db.VarChar(255)
  product_type                       Boolean?                             @default(false)
  type                               Int
  subtitle                           String?                              @db.VarChar(255)
  exchange_number                    Int?
  exchange_max_number                Int?
  divend_price                       Decimal?                             @db.Decimal(10, 2)
  sale_price                         Decimal?                             @db.Decimal(10, 2)
  marked_price                       Decimal?                             @db.Decimal(10, 2)
  purchase_cost                      Decimal?                             @db.Decimal(10, 2)
  stock                              Int
  stock_warning                      Int?
  stock_status                       Int?
  promotion_status                   Int?
  status_created                     DateTime?                            @db.DateTime(0)
  status                             Int                                  @db.TinyInt
  link_pc                            String?                              @db.VarChar(255)
  link_applet                        String?                              @db.VarChar(255)
  link_computer                      String?                              @db.VarChar(255)
  audi_status                        Int?                                 @db.TinyInt
  reason                             String?                              @db.VarChar(255)
  created_at                         DateTime?                            @default(now()) @db.DateTime(0)
  updated_at                         DateTime?                            @default(now()) @db.DateTime(0)
  deleted_at                         DateTime?                            @db.DateTime(0)
  is_deleted                         Int                                  @db.TinyInt
  product_categories                 product_categories?                  @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_ibfk_1")
  store_info                         store_info?                          @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_ibfk_3")
  product_action                     product_action?                      @relation(fields: [actrion_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_ibfk_4")
  agent_level_product                agent_level_product[]
  article_product                    article_product[]
  bargain_activity                   bargain_activity[]
  captain_level_product              captain_level_product[]
  coupon_product                     coupon_product[]
  discount_product                   discount_product[]
  distrbution_product                distrbution_product[]
  festival_activity                  festival_activity[]
  follow_activity                    follow_activity[]
  gift                               gift[]
  global_level_product               global_level_product[]
  group_buying                       group_buying[]
  group_purchase_list                group_purchase_list[]
  limited_time_product               limited_time_product[]
  material                           material[]
  member_cart                        member_cart[]
  member_favorite                    member_favorite[]
  member_product                     member_product[]
  member_shop_cart                   member_shop_cart[]
  order_products                     order_products[]
  payment_activity                   payment_activity[]
  pre_item                           pre_item[]
  presale_list                       presale_list[]
  presale_record                     presale_record[]
  product_abbreviation               product_abbreviation[]
  product_attribute                  product_attribute[]
  product_details                    product_details[]
  product_discount                   product_discount[]
  product_images                     product_images[]
  product_other_categories           product_other_categories[]
  product_permission                 product_permission[]
  product_price                      product_price[]
  product_review                     product_review[]
  product_shop_middle                product_shop_middle[]
  product_specification              product_specification[]
  product_specification_middle_price product_specification_middle_price[]
  product_tag_mapping                product_tag_mapping[]
  refund_pre_log                     refund_pre_log[]
  seckill_activity                   seckill_activity[]
  store_info_cart                    store_info_cart[]
  store_product                      store_product[]

  @@index([actrion_id], map: "actrion_id")
  @@index([category_id], map: "idx_category_id")
  @@index([is_deleted], map: "idx_is_deleted")
  @@index([status], map: "idx_status")
  @@index([store_id], map: "store_id")
}

model product_abbreviation {
  id           Int       @id @default(autoincrement()) @db.UnsignedInt
  product_id   Int?
  abbreviation String?   @db.VarChar(255)
  created_at   DateTime  @default(now()) @db.Timestamp(0)
  updated_at   DateTime  @default(now()) @db.Timestamp(0)
  deleted_at   DateTime? @db.Timestamp(0)
  product      product?  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_abbreviation_ibfk_1")

  @@index([product_id], map: "product_id")
}

model product_action {
  id                                 Int                                  @id @default(autoincrement())
  sales                              Int
  favorites                          Int
  created_time                       DateTime?                            @default(now()) @db.DateTime(0)
  dr                                 Int
  product                            product[]
  product_specification_middle_price product_specification_middle_price[]
}

model product_attribute {
  id               Int       @id @default(autoincrement())
  product_id       Int?
  name             String?   @db.VarChar(255)
  type             String?   @db.VarChar(255)
  attribute_values String?   @db.VarChar(255)
  sort             Int?
  created_at       DateTime? @default(now()) @db.Timestamp(0)
  updated_at       DateTime? @default(now()) @db.Timestamp(0)
  deleted_at       DateTime? @db.Timestamp(0)
  dr               Boolean?  @default(false)
  product          product?  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_attribute_ibfk_1")

  @@index([product_id], map: "idx_produc_id")
}

model product_brand {
  id              Int               @id @default(autoincrement())
  name            String?           @db.VarChar(255)
  initial         String?           @db.Char(1)
  image_url       String?           @db.VarChar(255)
  sort            Int?
  is_displayed    Boolean?          @default(false)
  created_at      DateTime?         @default(now()) @db.Timestamp(0)
  updated_at      DateTime?         @default(now()) @db.Timestamp(0)
  deleted_at      DateTime?         @db.Timestamp(0)
  dr              Boolean?
  category_brand  category_brand[]
  product_details product_details[]
}

model product_categories {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(255)
  img                      String?                    @db.VarChar(255)
  full_name                String?                    @db.VarChar(255)
  category_id              Int?
  is_visible               Int                        @default(1) @db.TinyInt
  sort_order               Int?
  platform_commission      Decimal?                   @db.Decimal(10, 2)
  parent_category_id       Int?                       @default(0)
  parent_category_name     String?                    @db.VarChar(255)
  created_at               DateTime?                  @default(now()) @db.DateTime(0)
  created_by               Int?
  updated_at               DateTime?                  @default(now()) @db.DateTime(0)
  deleted_at               DateTime?                  @db.DateTime(0)
  is_deleted               Int                        @db.TinyInt
  product_category         product_category?          @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_categories_ibfk_1")
  categories_image_middle  categories_image_middle[]
  category_classification  category_classification[]
  coupon_product           coupon_product[]
  discount_product         discount_product[]
  limited_time_product     limited_time_product[]
  product                  product[]
  product_other_categories product_other_categories[]

  @@index([category_id], map: "category_id")
  @@index([is_deleted], map: "idx_is_deleted")
  @@index([is_visible], map: "idx_is_visible")
  @@index([parent_category_id], map: "idx_parent_category_id")
}

model product_category {
  id                      Int                       @id @default(autoincrement())
  name                    String?                   @db.VarChar(255)
  sort                    Int?
  is_displayed            Int?                      @db.TinyInt
  created_at              DateTime?                 @default(now()) @db.Timestamp(0)
  updated_at              DateTime?                 @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?                 @db.Timestamp(0)
  dr                      Boolean?                  @default(false)
  category_attribute      category_attribute[]
  category_brand          category_brand[]
  category_classification category_classification[]
  category_specification  category_specification[]
  product_categories      product_categories[]
}

model product_details {
  id                        Int                 @id @default(autoincrement())
  product_id                Int
  details                   String?             @db.Text
  brand_id                  Int?
  sku_code                  String?             @db.VarChar(255)
  product_code              String?             @db.VarChar(255)
  limit_purchase            Int?
  min_purchase_quantity     Int?
  virtual_sales             Int?
  sort_order                Int?
  stock_warning             Int?
  logistics_type            Int?                @db.TinyInt
  shipping_template_id      Int?
  shipping_price            Decimal?            @db.Decimal(10, 2)
  address_components        String?             @db.Text
  bonus_percentage          Decimal?            @db.Decimal(5, 2)
  max_redemption_percentage Decimal?            @db.Decimal(5, 2)
  bonus_on_positive_review  Int?                @db.TinyInt
  is_open_form              Int?                @db.TinyInt
  form_id                   Int?
  is_order_form             Int?                @db.TinyInt
  verification_number       Int?
  card_mode                 Int?
  effectively_type          Int?
  effectively_time          DateTime?           @db.DateTime(0)
  is_open_voucher           Int?
  voucher_json              String?             @db.VarChar(255)
  created_at                DateTime?           @default(now()) @db.DateTime(0)
  updated_at                DateTime?           @default(now()) @db.DateTime(0)
  deleted_at                DateTime?           @db.DateTime(0)
  is_deleted                Int                 @default(0) @db.TinyInt
  product                   product             @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_details_ibfk_1")
  logistics_template        logistics_template? @relation(fields: [shipping_template_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_details_ibfk_2")
  product_brand             product_brand?      @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_details_ibfk_3")

  @@index([brand_id], map: "brand_id")
  @@index([is_deleted], map: "idx_is_deleted")
  @@index([product_id], map: "idx_product_id")
  @@index([shipping_template_id], map: "idx_shipping_template_id")
}

model product_discount {
  id                                    Int                                 @id @default(autoincrement())
  product_id                            Int?
  product_specification_middle_price_id Int?
  discount_status                       Boolean                             @default(false)
  discount_type                         Int                                 @db.TinyInt
  discount_mode                         Boolean                             @default(false)
  is_type                               Boolean?
  created_at                            DateTime                            @default(now()) @db.DateTime(0)
  updated_at                            DateTime                            @default(now()) @db.DateTime(0)
  deleted_at                            DateTime?                           @db.DateTime(0)
  is_deleted                            Int                                 @default(0) @db.TinyInt
  product                               product?                            @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_discount_ibfk_1")
  product_specification_middle_price    product_specification_middle_price? @relation(fields: [product_specification_middle_price_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_discount_ibfk_2")
  discount_details                      discount_details[]

  @@index([discount_type], map: "idx_discount_type")
  @@index([is_deleted], map: "idx_is_deleted")
  @@index([product_id], map: "idx_product_id")
  @@index([product_specification_middle_price_id], map: "product_specification_middle_price_id")
}

model product_dividend {
  id                      Int                @id @default(autoincrement())
  product_price_id        Int
  is_dividend             Int                @default(0) @db.TinyInt
  dividend_type           Int                @db.TinyInt
  is_custom_rule          Int                @default(0) @db.TinyInt
  is_doule_rule           Int                @default(0) @db.TinyInt
  is_custom_calculation   Int                @default(0) @db.TinyInt
  custom_calculation_type Int?               @db.TinyInt
  created_at              DateTime?          @db.DateTime(0)
  updated_at              DateTime           @db.DateTime(0)
  deleted_at              DateTime?          @db.DateTime(0)
  is_deleted              Int                @default(0) @db.TinyInt
  product_price           product_price      @relation(fields: [product_price_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_dividend_ibfk_1")
  dividend_details        dividend_details[]

  @@index([dividend_type], map: "idx_dividend_type")
  @@index([is_custom_rule], map: "idx_is_custom_rule")
  @@index([product_price_id], map: "product_id")
}

model product_images {
  id          Int       @id @default(autoincrement())
  product_id  Int
  image_type  String?   @db.VarChar(255)
  image_url   String?   @db.VarChar(255)
  poster_html String?   @db.LongText
  created_at  DateTime? @default(now()) @db.DateTime(0)
  updated_at  DateTime? @default(now()) @db.DateTime(0)
  deleted_at  DateTime? @db.DateTime(0)
  is_deleted  Int?      @default(0) @db.TinyInt
  product     product   @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_images_ibfk_1")

  @@index([is_deleted], map: "idx_is_deleted")
  @@index([product_id], map: "idx_product_id")
}

model product_other_categories {
  id                  Int                 @id @default(autoincrement())
  product_id          Int?
  other_category_id   Int?
  other_category_name String?             @db.VarChar(255)
  created_at          DateTime?           @default(now()) @db.Timestamp(0)
  updated_at          DateTime?           @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?           @db.Timestamp(0)
  dr                  Boolean?            @default(false)
  product             product?            @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_other_categories_ibfk_1")
  product_categories  product_categories? @relation(fields: [other_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_other_categories_ibfk_2")

  @@index([other_category_id], map: "other_category_id")
  @@index([product_id], map: "product_id")
}

model product_permission {
  id                        Int                         @id @default(autoincrement())
  product_id                Int?
  name                      String                      @db.VarChar(255)
  type                      Int
  created_at                DateTime?                   @default(now()) @db.Timestamp(0)
  updated_at                DateTime?                   @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?                   @db.Timestamp(0)
  dr                        Boolean?                    @default(false)
  product                   product?                    @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_permission_ibfk_1")
  product_permission_detail product_permission_detail[]

  @@index([deleted_at], map: "idx_deleted_at")
  @@index([name, type], map: "idx_name_type")
  @@index([product_id], map: "product_id")
}

model product_permission_detail {
  detail_id          Int                 @id @default(autoincrement())
  detail_name        String              @db.VarChar(255)
  permission_id      Int?
  created_at         DateTime?           @default(now()) @db.Timestamp(0)
  updated_at         DateTime?           @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?           @db.Timestamp(0)
  dr                 Boolean?            @default(false)
  product_permission product_permission? @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_permission_detail_ibfk_1")

  @@index([deleted_at], map: "idx_deleted_at")
  @@index([permission_id], map: "idx_permission_id")
}

model product_price {
  id                                 Int                                  @id @default(autoincrement())
  prd_id                             Int?
  pre_type                           Int
  sale_price                         Decimal                              @db.Decimal(10, 2)
  listing_id                         Int?
  listing_store_id                   Int?
  listing_status                     Int?                                 @default(0)
  min_order_quantity                 Int?                                 @default(0)
  coupon_amount                      Decimal?                             @default(0.00) @db.Decimal(10, 2)
  coupon_rebate                      Decimal?                             @default(0.00) @db.Decimal(10, 2)
  marked_price                       Decimal?                             @db.Decimal(10, 2)
  purchase_cost                      Decimal                              @db.Decimal(10, 2)
  participate_price                  Decimal?                             @db.Decimal(10, 2)
  max_discount_price                 Decimal?                             @db.Decimal(10, 2)
  actual_pay_price                   Decimal                              @db.Decimal(10, 2)
  profit                             Decimal?                             @db.Decimal(10, 2)
  min_sale_price                     Decimal?                             @db.Decimal(10, 2)
  max_sale_price                     Decimal?                             @db.Decimal(10, 2)
  channel_settlement_price           Decimal?                             @db.Decimal(10, 2)
  distribution_status                Int?                                 @default(0)
  distribution_commission            Decimal?                             @default(0.00) @db.Decimal(10, 2)
  first_level_commission             Decimal?                             @default(0.00) @db.Decimal(10, 2)
  second_level_commission            Decimal?                             @default(0.00) @db.Decimal(10, 2)
  team_bonus                         Decimal?                             @default(0.00) @db.Decimal(10, 2)
  regional_bonus                     Decimal?                             @default(0.00) @db.Decimal(10, 2)
  global_bonus                       Decimal?                             @default(0.00) @db.Decimal(10, 2)
  channel_rebate_status              Int?                                 @default(0)
  channel_rebate_ratio               Decimal?                             @default(0.00) @db.Decimal(10, 2)
  channel_rebate_amount              Decimal?                             @default(0.00) @db.Decimal(10, 2)
  merchant_rebate_amount             Decimal?                             @default(0.00) @db.Decimal(10, 2)
  province_agent_rebate_amount       Decimal?                             @default(0.00) @db.Decimal(10, 2)
  city_agent_rebate_amount           Decimal?                             @default(0.00) @db.Decimal(10, 2)
  district_agent_rebate_amount       Decimal?                             @default(0.00) @db.Decimal(10, 2)
  platform_rebate_amount             Decimal?                             @default(0.00) @db.Decimal(10, 2)
  merchant_deduction                 Decimal?                             @db.Decimal(10, 2)
  create_time                        DateTime?                            @default(now()) @db.Timestamp(0)
  update_time                        DateTime                             @default(now()) @db.Timestamp(0)
  delete_time                        DateTime?                            @db.Timestamp(0)
  dr                                 Int                                  @default(0)
  product                            product?                             @relation(fields: [prd_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_price_ibfk_3")
  product_dividend                   product_dividend[]
  product_specification_middle_price product_specification_middle_price[]

  @@index([prd_id], map: "prd_id")
}

model product_price_group_purchase {
  id                                    Int                                @id @default(autoincrement())
  group_purchase_id                     Int?
  group_purchase_list_id                Int?
  presale_list_id                       Int?
  product_specification_middle_price_id Int
  purchase_limit                        Decimal?                           @db.Decimal(10, 2)
  earnest_price                         Decimal?                           @db.Decimal(10, 2)
  group_price                           Decimal?                           @db.Decimal(10, 2)
  inventory                             Int?
  created_time                          DateTime?                          @default(now()) @db.DateTime(0)
  updated_time                          DateTime?                          @default(now()) @db.DateTime(0)
  deleted_time                          DateTime?                          @db.DateTime(0)
  dr                                    Int                                @default(0)
  product_specification_middle_price    product_specification_middle_price @relation(fields: [product_specification_middle_price_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_price_group_purchase_ibfk_1")
  group_buying                          group_buying?                      @relation(fields: [group_purchase_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_price_group_purchase_ibfk_2")
  group_purchase_list                   group_purchase_list?               @relation(fields: [group_purchase_list_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_price_group_purchase_ibfk_3")
  presale_list                          presale_list?                      @relation(fields: [presale_list_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_price_group_purchase_ibfk_4")

  @@index([group_purchase_id], map: "group_purchase_id")
  @@index([group_purchase_list_id], map: "group_purchase_list_id")
  @@index([presale_list_id], map: "presale_list_id")
  @@index([product_specification_middle_price_id], map: "product_specification_middle_price_id")
}

model product_review {
  id                   Int              @id @default(autoincrement())
  product_id           Int?
  rating               Int?             @db.TinyInt
  comment              String?          @db.Text
  parent_id            Int?
  member_id            Int?
  created_at           DateTime?        @db.Timestamp(0)
  updated_at           DateTime?        @db.Timestamp(0)
  deleted_at           DateTime?        @db.Timestamp(0)
  dr                   Boolean?
  product              product?         @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_review_ibfk_1")
  member               member?          @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_review_ibfk_3")
  product_review       product_review?  @relation("product_reviewToproduct_review", fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_review_ibfk_4")
  other_product_review product_review[] @relation("product_reviewToproduct_review")
  review_image         review_image[]

  @@index([product_id], map: "idx_product_id")
  @@index([member_id], map: "member_id")
  @@index([parent_id], map: "parent_id")
}

model product_shop_middle {
  id         Int     @id @default(autoincrement())
  product_id Int
  shop_id    BigInt
  creat_at   String? @db.VarChar(255)
  update_at  String? @db.VarChar(255)
  delect_at  String? @db.VarChar(255)
  dr         String? @db.VarChar(255)
  product    product @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_shop_middle_ibfk_1")
  shop       shop    @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_shop_middle_ibfk_2")

  @@index([product_id], map: "product_id")
  @@index([shop_id], map: "shop_id")
}

model product_specification {
  id             Int            @id @default(autoincrement())
  secifcation_id Int?
  product_id     Int
  name           String?        @db.VarChar(255)
  spec_value     String         @db.VarChar(255)
  display_method String?        @db.VarChar(255)
  status         Int?           @default(0)
  created_at     DateTime       @default(now()) @db.DateTime(0)
  updated_at     DateTime       @default(now()) @db.DateTime(0)
  deleted_at     DateTime?      @db.DateTime(0)
  dr             Int            @db.TinyInt
  product        product        @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_specification_ibfk_1")
  specification  specification? @relation(fields: [secifcation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_specification_ibfk_2")

  @@index([product_id], map: "idx_product_id")
  @@index([secifcation_id], map: "secifcation_id")
}

model product_specification_middle_price {
  id                           Int                            @id @default(autoincrement())
  product_id                   Int
  product_price_id             Int?
  pre_type                     Int?
  action_id                    Int?
  spec_value                   String                         @db.VarChar(255)
  selling_price                Decimal                        @db.Decimal(10, 2)
  market_price                 Decimal?                       @db.Decimal(10, 2)
  cost_price                   Decimal?                       @db.Decimal(10, 2)
  activity_price               Decimal?                       @db.Decimal(10, 2)
  earnest_price                Decimal?                       @db.Decimal(10, 2)
  stock                        Int?                           @default(0)
  product_code                 String?                        @db.VarChar(255)
  purchase_limit               Int?
  dr                           Int?                           @default(0)
  product                      product                        @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_specification_middle_price_ibfk_1")
  product_action               product_action?                @relation(fields: [action_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_specification_middle_price_ibfk_2")
  product_price                product_price?                 @relation(fields: [product_price_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_specification_middle_price_ibfk_3")
  member_cart                  member_cart[]
  member_shop_cart             member_shop_cart[]
  order_products               order_products[]
  product_discount             product_discount[]
  product_price_group_purchase product_price_group_purchase[]
  refund_pre_log               refund_pre_log[]
  store_info_cart              store_info_cart[]

  @@index([action_id], map: "action_id")
  @@index([product_id], map: "idx_product_id")
  @@index([spec_value], map: "idx_spec_value")
  @@index([product_price_id], map: "product_price_id")
}

model product_tag_mapping {
  id           Int           @id @default(autoincrement())
  product_id   Int
  tag_id       Int?
  created_at   DateTime      @default(now()) @db.DateTime(0)
  updated_at   DateTime      @default(now()) @db.DateTime(0)
  deleted_at   DateTime?     @db.DateTime(0)
  dr           Int           @db.TinyInt
  product_tags product_tags? @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_tag_mapping_ibfk_1")
  product      product       @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_tag_mapping_ibfk_2")

  @@index([product_id], map: "idx_product_id")
  @@index([tag_id], map: "tag_id")
}

model product_tags {
  id                  Int                   @id @default(autoincrement())
  tag_name            String                @db.VarChar(255)
  created_at          DateTime              @default(now()) @db.DateTime(0)
  updated_at          DateTime              @default(now()) @db.DateTime(0)
  deleted_at          DateTime?             @db.DateTime(0)
  is_deleted          Int                   @db.TinyInt
  product_tag_mapping product_tag_mapping[]

  @@index([is_deleted], map: "idx_is_deleted")
}

model purchase_order {
  id                                             Int                      @id @default(autoincrement()) @db.UnsignedInt
  order_id                                       Int                      @db.UnsignedInt
  store_id                                       Int
  pay_money                                      Decimal                  @db.Decimal(10, 2)
  status                                         Int
  user_id                                        Int
  pay_time                                       DateTime?                @db.DateTime(0)
  create_time                                    DateTime                 @default(now()) @db.Timestamp(0)
  delete_time                                    DateTime?                @db.Timestamp(0)
  update_time                                    DateTime                 @default(now()) @db.Timestamp(0)
  dr                                             Int                      @default(0) @db.UnsignedTinyInt
  order                                          order                    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "purchase_order_ibfk_1")
  store_info_purchase_order_store_idTostore_info store_info               @relation("purchase_order_store_idTostore_info", fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "purchase_order_ibfk_2")
  store_info_purchase_order_user_idTostore_info  store_info               @relation("purchase_order_user_idTostore_info", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "purchase_order_ibfk_3")
  purchase_order_product                         purchase_order_product[]
  supply_order                                   supply_order[]

  @@index([order_id], map: "order_id")
  @@index([store_id], map: "store_id")
  @@index([user_id], map: "user_id")
}

model purchase_order_product {
  id                Int            @id @default(autoincrement()) @db.UnsignedInt
  order_id          Int            @db.UnsignedInt
  order_products_id Int            @db.UnsignedInt
  create_time       DateTime       @default(now()) @db.Timestamp(0)
  delete_time       DateTime?      @db.Timestamp(0)
  update_time       DateTime       @default(now()) @db.Timestamp(0)
  dr                Int            @default(0) @db.UnsignedTinyInt
  purchase_order    purchase_order @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "purchase_order_product_ibfk_1")
  order_products    order_products @relation(fields: [order_products_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "purchase_order_product_ibfk_2")

  @@index([order_id], map: "order_id")
  @@index([order_products_id], map: "order_products_id")
}

model question {
  id                Int                @id @default(autoincrement()) @db.UnsignedInt
  question_name     String             @db.VarChar(255)
  category_id       Int?
  content           String             @db.Text
  sort              Int
  is_displayed      Boolean
  dr                Int
  created_at        DateTime           @db.DateTime(0)
  updated_at        DateTime           @db.DateTime(0)
  deleted_at        DateTime?          @db.DateTime(0)
  question_category question_category? @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "question_ibfk_1")

  @@index([category_id], map: "category_id")
}

model question_category {
  id            Int        @id @default(autoincrement())
  sort          Int        @default(0)
  category_name String     @db.VarChar(50)
  is_displayed  Boolean    @default(false)
  created_time  DateTime?  @db.DateTime(0)
  updated_time  DateTime?  @db.DateTime(0)
  deleted_time  DateTime?  @db.DateTime(0)
  dr            Boolean?
  question      question[]
}

model refund_log {
  id                Int                 @id @default(autoincrement()) @db.UnsignedInt
  order_id          Int                 @db.UnsignedInt
  action_type       Int                 @db.TinyInt
  mony_type         Int?                @db.TinyInt
  refund_amount     Decimal?            @db.Decimal(10, 2)
  remark            String?             @db.VarChar(255)
  reason            String?             @db.VarChar(255)
  company_code      String?             @db.VarChar(255)
  code              String?             @db.VarChar(255)
  operator          String?             @db.VarChar(255)
  action_time       DateTime            @db.DateTime(0)
  dr                Boolean?            @default(false)
  created_at        DateTime?           @db.DateTime(0)
  updated_at        DateTime?           @db.DateTime(0)
  deleted_at        DateTime?           @default(now()) @db.Timestamp(0)
  order             order               @relation(fields: [order_id], references: [id], onDelete: Cascade, map: "fk_order_refund_log")
  refund_log_images refund_log_images[]
  refund_pre_log    refund_pre_log[]

  @@index([order_id], map: "fk_order_refund_log")
}

model refund_log_images {
  id            Int        @id @default(autoincrement()) @db.UnsignedInt
  refund_log_id Int        @db.UnsignedInt
  image_url     String?    @db.VarChar(255)
  created_at    DateTime?  @default(now()) @db.DateTime(0)
  updated_at    DateTime?  @default(now()) @db.DateTime(0)
  deleted_at    DateTime?  @db.DateTime(0)
  is_deleted    Int?       @default(0) @db.TinyInt
  refund_log    refund_log @relation(fields: [refund_log_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_refund_log_images_refund_log_id")

  @@index([is_deleted], map: "idx_is_deleted")
  @@index([refund_log_id], map: "idx_refund_log_id")
}

model refund_pre_log {
  id                                 Int                                 @id @default(autoincrement())
  refund_log_id                      Int?                                @db.UnsignedInt
  product_id                         Int?
  product_specification_id           Int?
  num                                Int?
  create_at                          DateTime?                           @db.DateTime(0)
  update_at                          DateTime?                           @db.DateTime(0)
  dr                                 Int?                                @db.TinyInt
  refund_log                         refund_log?                         @relation(fields: [refund_log_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "refund_pre_log_ibfk_1")
  product                            product?                            @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "refund_pre_log_ibfk_2")
  product_specification_middle_price product_specification_middle_price? @relation(fields: [product_specification_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "refund_pre_log_ibfk_3")

  @@index([product_id], map: "prd_id")
  @@index([product_specification_id], map: "product_specification_id")
  @@index([refund_log_id], map: "refund_log_id")
}

model revenue {
  id                      Int       @id @default(autoincrement()) @db.UnsignedInt
  external_transaction_id String    @db.VarChar(255)
  consumption_type        Int       @db.TinyInt
  revenue_type            Int       @db.TinyInt
  income_platform         Int       @db.TinyInt
  payment_type            Int       @db.TinyInt
  income_amount           Decimal   @default(0.00) @db.Decimal(10, 2)
  created_at              DateTime? @default(now()) @db.Timestamp(0)
  dr                      Boolean?
}

model review_image {
  id             Int            @id @default(autoincrement())
  review_id      Int
  image_name     String?        @db.VarChar(255)
  image_url      String?        @db.VarChar(255)
  created_at     DateTime?      @default(now()) @db.Timestamp(0)
  updated_at     DateTime?      @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?      @db.Timestamp(0)
  dr             Boolean?
  product_review product_review @relation(fields: [review_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "review_image_ibfk_1")

  @@index([review_id], map: "review_id")
}

model role_version_permissions {
  id               Int           @id @default(autoincrement())
  role_versions_id Int
  permission_id    Int
  create_time      DateTime?     @db.DateTime(0)
  update_time      DateTime?     @db.DateTime(0)
  delete_time      DateTime?     @db.DateTime(0)
  dr               Int           @default(0) @db.TinyInt
  role_versions    role_versions @relation(fields: [role_versions_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "role_version_permissions_ibfk_1")
  permissions      permissions   @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "role_version_permissions_ibfk_2")

  @@index([permission_id], map: "idx_permission_id")
  @@index([role_versions_id], map: "idx_version_id")
}

model role_versions {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(50)
  remarks                  String?                    @db.VarChar(100)
  sort                     Int?
  create_time              DateTime?                  @default(now()) @db.DateTime(0)
  update_time              DateTime?                  @default(now()) @db.DateTime(0)
  delete_time              DateTime?                  @default(now()) @db.DateTime(0)
  dr                       Int                        @default(0) @db.TinyInt
  role_version_permissions role_version_permissions[]
  store_employee           store_employee[]
}

model route_address {
  id   Int     @id @default(autoincrement())
  url  String? @db.VarChar(255)
  name String? @db.VarChar(255)
}

model ruler_field {
  id        Int       @id
  name      String    @db.VarChar(255)
  describe  String?   @db.VarChar(255)
  type      String    @db.VarChar(255)
  create_at String?   @db.VarChar(255)
  update_at DateTime? @db.DateTime(0)
  dr        Boolean?
}

model sales_level_list {
  id                      Int                       @id @default(autoincrement())
  type                    Int?
  downgrade_level_id      Int?
  is_published            Int?
  agreement_name          String?                   @db.VarChar(255)
  agreement_content       String?                   @db.Text
  introduction_name       String?                   @db.VarChar(255)
  introduction_content    String?                   @db.Text
  created_time            DateTime?                 @db.DateTime(0)
  modified_time           DateTime?                 @db.DateTime(0)
  dr                      Int?
  level_package           level_package[]
  sales_level_list_record sales_level_list_record[]
}

model sales_level_list_record {
  id                  Int               @id @default(autoincrement())
  sales_level_list_id Int?
  level_package_id    Int?
  member_id           Int?
  no                  String?           @db.VarChar(255)
  order_id            Int?
  create_at           DateTime?         @db.DateTime(0)
  end_at              DateTime?         @db.DateTime(0)
  member              member?           @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sales_level_list_record_ibfk_2")
  sales_level_list    sales_level_list? @relation(fields: [sales_level_list_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sales_level_list_record_ibfk_3")

  @@index([member_id], map: "member_id")
  @@index([sales_level_list_id], map: "sales_level_list_id")
}

model schedule {
  id                   Int       @id @default(autoincrement())
  name                 String?   @db.VarChar(50)
  advance_booking_days Int?
  booking_days         Int?
  start_time           DateTime? @db.DateTime(0)
  end_time             DateTime? @db.DateTime(0)
  open_days            String?   @db.VarChar(255)
  time_rules           String?   @db.Text
  created_at           DateTime? @default(now()) @db.DateTime(0)
  updated_at           DateTime? @db.DateTime(0)
  deleted_at           DateTime? @db.DateTime(0)
  dr                   Int?      @default(0) @db.TinyInt
}

model search_history {
  id             Int       @id @default(autoincrement())
  member_id      Int
  search_content String    @db.VarChar(255)
  created_at     DateTime? @default(now()) @db.Timestamp(0)

  @@index([created_at], map: "idx_created_at")
  @@index([member_id], map: "idx_member_id")
}

model seckill_activity {
  id                Int        @id @default(autoincrement())
  shop_id           Int
  status            Int?
  start_time        DateTime   @db.DateTime(0)
  product_id        Int
  stock             Int
  price             Decimal    @db.Decimal(10, 2)
  limit_purchase    Int
  min_purchase      Int
  virtual_purchased Int
  create_time       DateTime   @default(now()) @db.Timestamp(0)
  update_time       DateTime?  @default(now()) @db.Timestamp(0)
  delete_time       DateTime?  @db.Timestamp(0)
  dr                Int        @default(0)
  store_info        store_info @relation(fields: [shop_id], references: [id], onDelete: Cascade, map: "seckill_activity_ibfk_1")
  product           product    @relation(fields: [product_id], references: [id], onDelete: Cascade, map: "seckill_activity_ibfk_2")

  @@index([product_id], map: "idx_product_id")
  @@index([shop_id], map: "idx_shop_id")
  @@index([start_time], map: "idx_start_time")
}

model shop {
  id                                 BigInt                 @id @default(autoincrement())
  name                               String                 @db.VarChar(255)
  img                                String                 @db.VarChar(255)
  phone                              String                 @db.VarChar(20)
  province                           String?                @db.VarChar(255)
  city                               String?                @db.VarChar(255)
  district                           String?                @db.VarChar(255)
  address                            String                 @db.VarChar(255)
  lat                                Decimal?               @db.Decimal(10, 6)
  lng                                Decimal?               @db.Decimal(10, 6)
  status                             Boolean
  cashier_commission_enabled         Boolean?
  cashier_commission_type            Boolean
  cashier_commission_percentage      Decimal?               @db.Decimal(5, 2)
  cashier_commission_amount          Decimal?               @db.Decimal(10, 2)
  verification_commission_type       Boolean
  verification_commission_percentage Decimal?               @db.Decimal(5, 2)
  verification_commission_amount     Decimal?               @db.Decimal(10, 2)
  opening_time                       DateTime?              @db.Time(0)
  closing_time                       DateTime?              @db.Time(0)
  opening_day                        String?                @db.VarChar(255)
  created_at                         DateTime               @default(now()) @db.Timestamp(0)
  updated_at                         DateTime               @default(now()) @db.Timestamp(0)
  deleted_at                         DateTime               @default(now()) @db.Timestamp(0)
  dr                                 Boolean?
  employee                           employee[]
  gift_coupon_record                 gift_coupon_record[]
  member_shop_cart                   member_shop_cart[]
  order_products                     order_products[]
  product_shop_middle                product_shop_middle[]
  shop_action                        shop_action[]
  shop_employee_middle               shop_employee_middle[]
  store_product                      store_product[]

  @@index([name], map: "idx_shop_name")
}

model shop_action {
  id           Int       @id @default(autoincrement())
  shop_id      BigInt?
  Score        Int
  member_id    Int?
  created_time DateTime? @default(now()) @db.DateTime(0)
  dr           Int
  member       member?   @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "shop_action_ibfk_1")
  shop         shop?     @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "shop_action_ibfk_2")

  @@index([member_id], map: "member_id")
  @@index([shop_id], map: "shop_id")
}

model shop_employee_middle {
  id          Int       @id @default(autoincrement())
  shop_id     BigInt?
  employee_id Int?
  creat_at    DateTime? @default(now()) @db.Timestamp(0)
  update_at   DateTime? @default(now()) @db.Timestamp(0)
  dr          Boolean?  @default(false)
  shop        shop?     @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "shop_employee_middle_ibfk_1")
  employee    employee? @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "shop_employee_middle_ibfk_2")

  @@index([employee_id], map: "employee_id")
  @@index([shop_id], map: "shop_id")
}

model shopkeeper {
  id                Int               @id @default(autoincrement())
  member_id         Int
  mobile            String            @db.VarChar(20)
  shopkeeper_id     Int?
  total_income      Decimal?          @db.Decimal(10, 2)
  remain_income     Decimal?          @db.Decimal(10, 2)
  withdrawal_income Decimal?          @db.Decimal(10, 2)
  dr                Int?              @default(0) @db.UnsignedTinyInt
  updated_at        DateTime          @default(now()) @db.Timestamp(0)
  modified_at       DateTime          @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?         @db.Timestamp(0)
  shopkeeper_level  shopkeeper_level? @relation(fields: [shopkeeper_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "shopkeeper_ibfk_1")
  member            member            @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "shopkeeper_ibfk_2")

  @@index([member_id], map: "member_id")
  @@index([shopkeeper_id], map: "shopkeeper_id")
}

model shopkeeper_level {
  id                                  Int          @id @default(autoincrement())
  level_name                          String       @db.VarChar(50)
  first_income_percentage             Decimal?     @db.Decimal(5, 2)
  second_income_percentage            Decimal?     @db.Decimal(5, 2)
  third_income_percentage             Decimal?     @db.Decimal(5, 2)
  self_purchase_rebate_percentage     Decimal?     @db.Decimal(5, 2)
  subordinate_store_rebate_percentage Decimal?     @db.Decimal(5, 2)
  upgrade_condition_product_id        String?      @db.VarChar(255)
  validity_period                     Int?
  validity_type                       Int?         @db.TinyInt
  weight                              Int?
  dr                                  Int?         @default(0) @db.UnsignedTinyInt
  updated_at                          DateTime     @default(now()) @db.Timestamp(0)
  modified_at                         DateTime     @default(now()) @db.Timestamp(0)
  deleted_at                          DateTime?    @db.Timestamp(0)
  shopkeeper                          shopkeeper[]
}

model specification {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @db.VarChar(255)
  spec_values            String                   @db.Text
  spec_sort              Int
  is_enabled             Boolean
  created_at             DateTime                 @default(now()) @db.DateTime(0)
  updated_at             DateTime                 @default(now()) @db.DateTime(0)
  deleted_at             DateTime?                @db.DateTime(0)
  dr                     Boolean                  @default(false)
  category_specification category_specification[]
  product_specification  product_specification[]
}

model statement {
  id         Int       @id @default(autoincrement())
  no         String?   @db.VarChar(255)
  member_id  Int
  type       Int
  type_name  Int
  bonus_type Int?      @db.TinyInt
  operate    String?   @db.VarChar(255)
  number     Decimal?  @db.Decimal(10, 2)
  charge     Decimal?  @db.Decimal(10, 2)
  data_id    String?   @db.VarChar(255)
  pay_id     String?   @db.VarChar(255)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @default(now()) @db.Timestamp(0)
  dr         Boolean?
  member     member    @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "statement_ibfk_1")

  @@index([member_id], map: "member_id")
}

model store_account {
  id                  Int        @id @default(autoincrement()) @db.UnsignedInt
  store_id            Int
  total_revenue       Decimal    @default(0.00) @db.Decimal(10, 2)
  available_balance   Decimal    @default(0.00) @db.Decimal(10, 2)
  frozen_balance      Decimal    @default(0.00) @db.Decimal(10, 2)
  withdrawn_amount    Decimal    @default(0.00) @db.Decimal(10, 2)
  withdrawing_amount  Decimal    @default(0.00) @db.Decimal(10, 2)
  platform_commission Decimal?   @db.Decimal(10, 2)
  withdrawal_fee      Decimal?   @db.Decimal(10, 2)
  created_at          DateTime?  @default(now()) @db.Timestamp(0)
  updated_at          DateTime?  @default(now()) @db.Timestamp(0)
  dr                  Boolean?   @default(false)
  store_info          store_info @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_account_ibfk_1")

  @@index([store_id], map: "store_id")
}

model store_address {
  id            Int        @id @default(autoincrement())
  store_id      Int
  status        Boolean
  consignee     String     @db.VarChar(50)
  contact       String     @db.VarChar(20)
  province_name String     @db.VarChar(20)
  city_name     String     @db.VarChar(20)
  district_name String     @db.VarChar(20)
  address       String     @db.VarChar(100)
  zip_code      String     @db.VarChar(20)
  dr            Boolean    @default(false)
  created_time  DateTime?  @db.DateTime(0)
  updated_time  DateTime?  @db.DateTime(0)
  deleted_time  DateTime?  @db.DateTime(0)
  store_info    store_info @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_address_ibfk_1")

  @@index([store_id], map: "store_id")
}

model store_agreements {
  id          Int       @id @default(autoincrement())
  type        Int
  title       String?   @db.VarChar(500)
  content     String    @db.Text
  create_time DateTime  @db.DateTime(0)
  update_time DateTime? @db.DateTime(0)
  delete_time DateTime? @db.DateTime(0)
  dr          Int       @default(0) @db.TinyInt
}

model store_categories {
  id          Int          @id @default(autoincrement())
  type        Int?
  name        String       @db.VarChar(50)
  sort        Int?         @default(0)
  is_display  Int          @default(0) @db.TinyInt
  create_time DateTime     @db.DateTime(0)
  update_time DateTime     @db.DateTime(0)
  delete_time DateTime?    @db.DateTime(0)
  dr          Int          @default(0) @db.TinyInt
  store_info  store_info[]
}

model store_collection {
  id         Int         @id @default(autoincrement())
  store_id   Int?
  collection Int?        @default(0)
  following  Int?        @default(0)
  dr         Int?        @default(0)
  store_info store_info? @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_collection_ibfk_1")

  @@index([store_id], map: "store_id")
}

model store_employee {
  id               Int           @id @default(autoincrement())
  name             String        @db.VarChar(255)
  avatar           String?       @db.VarChar(255)
  store_id         Int?
  role_versions_id Int
  phone            String        @db.VarChar(20)
  pwd              String        @db.VarChar(255)
  status           Boolean?
  created_at       DateTime?     @default(now()) @db.Timestamp(0)
  updated_at       DateTime?     @default(now()) @db.Timestamp(0)
  deleted_at       DateTime?     @default(now()) @db.Timestamp(0)
  dr               Boolean?      @default(false)
  role_versions    role_versions @relation(fields: [role_versions_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_employee_ibfk_1")
  store_info       store_info?   @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_employee_ibfk_2")

  @@index([role_versions_id], map: "role_versions_id")
  @@index([store_id], map: "store_id")
}

model store_info {
  id                                                 Int                        @id @default(autoincrement())
  type                                               Int?
  name                                               String                     @db.VarChar(50)
  img                                                String?                    @db.VarChar(255)
  member_id                                          Int?
  category_id                                        Int
  version_id                                         Int
  lat                                                Decimal?                   @db.Decimal(10, 6)
  lng                                                Decimal?                   @db.Decimal(10, 6)
  platform_commission                                Decimal?                   @db.Decimal(10, 2)
  deposit                                            Decimal                    @db.Decimal(10, 2)
  status                                             Boolean                    @default(false)
  is_review_goods                                    Boolean                    @default(false)
  is_review_status                                   Boolean                    @default(false)
  sort                                               Int                        @default(0)
  token                                              String?                    @db.VarChar(255)
  created_time                                       DateTime?                  @default(now()) @db.DateTime(0)
  updated_time                                       DateTime?                  @db.DateTime(0)
  deleted_time                                       DateTime?                  @db.DateTime(0)
  dr                                                 Int?                       @db.TinyInt
  store_categories                                   store_categories           @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_info_ibfk_1")
  store_versions                                     store_versions             @relation(fields: [version_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_info_ibfk_3")
  member                                             member?                    @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_info_ibfk_4")
  account                                            account[]
  article                                            article[]
  coupon                                             coupon[]
  discount_activity                                  discount_activity[]
  employee_shop                                      employee_shop[]
  festival_activity                                  festival_activity[]
  follow_activity                                    follow_activity[]
  gift                                               gift[]
  gift_coupon                                        gift_coupon[]
  gift_package_combination                           gift_package_combination[]
  global                                             global[]
  limited_time_activity                              limited_time_activity[]
  lucky_activity                                     lucky_activity[]
  member_article                                     member_article[]
  member_favorite                                    member_favorite[]
  member_store_info                                  member_store_info[]
  order_products                                     order_products[]
  package_list                                       package_list[]
  payment_activity                                   payment_activity[]
  presale_list                                       presale_list[]
  product                                            product[]
  purchase_order_purchase_order_store_idTostore_info purchase_order[]           @relation("purchase_order_store_idTostore_info")
  purchase_order_purchase_order_user_idTostore_info  purchase_order[]           @relation("purchase_order_user_idTostore_info")
  seckill_activity                                   seckill_activity[]
  store_account                                      store_account[]
  store_address                                      store_address[]
  store_collection                                   store_collection[]
  store_employee                                     store_employee[]
  store_info_action                                  store_info_action[]
  store_info_cart                                    store_info_cart[]
  store_meber_bonus                                  store_meber_bonus[]
  store_registration_info                            store_registration_info[]
  supply_order_store_infoTosupply_order_store_id     supply_order[]             @relation("store_infoTosupply_order_store_id")
  supply_order_store_infoTosupply_order_user_id      supply_order[]             @relation("store_infoTosupply_order_user_id")

  @@index([category_id], map: "idx_category_id")
  @@index([created_time], map: "idx_created_time")
  @@index([member_id], map: "member_id")
  @@index([version_id], map: "version_id")
}

model store_info_action {
  id            Int         @id @default(autoincrement())
  store_info_id Int?
  Score         Int
  member_id     Int?
  created_time  DateTime?   @default(now()) @db.DateTime(0)
  dr            Int
  member        member?     @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_info_action_ibfk_1")
  store_info    store_info? @relation(fields: [store_info_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_info_action_ibfk_2")

  @@index([member_id], map: "member_id")
  @@index([store_info_id], map: "store_info_id")
}

model store_info_cart {
  id                                    Int                                 @id @default(autoincrement())
  store_info_id                         Int
  product_specification_middle_price_id Int?
  product_id                            Int?
  type                                  Int?
  num                                   Int?
  selected                              Boolean?                            @default(false)
  price                                 Decimal?                            @db.Decimal(10, 2)
  preferential_price                    Decimal?                            @db.Decimal(10, 2)
  points_deduction                      String?                             @db.VarChar(255)
  freight                               String?                             @db.VarChar(255)
  created_time                          DateTime?                           @default(now()) @db.DateTime(0)
  dr                                    Int?                                @default(0)
  product_specification_middle_price    product_specification_middle_price? @relation(fields: [product_specification_middle_price_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_info_cart_ibfk_2")
  product                               product?                            @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_info_cart_ibfk_3")
  store_info                            store_info                          @relation(fields: [store_info_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_info_cartt_ibfk_1")

  @@index([store_info_id], map: "idx_store_info_id")
  @@index([product_specification_middle_price_id], map: "store_info_cart_ibfk_2")
  @@index([product_id], map: "store_info_cart_ibfk_3")
}

model store_meber_bonus {
  id         Int         @id @default(autoincrement())
  store_id   Int?
  member_id  Int?
  price      Decimal?    @db.Decimal(10, 2)
  create_at  DateTime?   @db.DateTime(0)
  store_info store_info? @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_meber_bonus_ibfk_1")
  member     member?     @relation(fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_meber_bonus_ibfk_2")

  @@index([member_id], map: "member_id")
  @@index([store_id], map: "store_id")
}

model store_product {
  id         Int       @id @default(autoincrement())
  shop_id    BigInt?
  product_id Int?
  status     Boolean?  @default(false)
  quantity   Int?
  price      Decimal?  @db.Decimal(10, 2)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime? @db.DateTime(0)
  dr         Boolean?  @default(false)
  product    product?  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_product_ibfk_2")
  shop       shop?     @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_product_ibfk_3")

  @@index([product_id], map: "product_id")
  @@index([shop_id], map: "shop_product_ibfk_1")
}

model store_registration_info {
  id                                Int        @id @default(autoincrement())
  store_id                          Int
  apply_type                        Boolean    @default(false)
  company_name                      String?    @db.VarChar(50)
  province                          String?    @db.VarChar(20)
  city                              String?    @db.VarChar(20)
  district                          String?    @db.VarChar(20)
  address                           String?    @db.VarChar(100)
  company_type                      Int        @default(1) @db.TinyInt
  company_tel                       String?    @db.VarChar(20)
  employee_count                    Int?
  registered_capital                Decimal?   @db.Decimal(10, 2)
  contact_name                      String?    @db.VarChar(20)
  contact_tel                       String?    @db.VarChar(20)
  email                             String?    @db.VarChar(50)
  business_license_number           String?    @db.VarChar(50)
  business_scope                    String?    @db.VarChar(100)
  business_license_url              String?    @db.VarChar(100)
  legal_person_id_card_number       String?    @db.VarChar(50)
  legal_person_id_card_handheld_url String?    @db.VarChar(100)
  legal_person_id_card_front_url    String?    @db.VarChar(100)
  legal_person_id_card_back_url     String?    @db.VarChar(100)
  created_time                      DateTime?  @db.DateTime(0)
  updated_time                      DateTime?  @db.DateTime(0)
  deleted_time                      DateTime?  @db.DateTime(0)
  dr                                Int?       @default(0)
  store_info                        store_info @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "store_registration_info_ibfk_1")

  @@index([company_name], map: "idx_company_name")
  @@index([created_time], map: "idx_created_time")
  @@index([store_id], map: "idx_store_id")
}

model store_verification_record_table {
  id                  Int       @id
  shop_id             BigInt?
  verification_method Int?      @db.TinyInt
  data_id             Int?
  verification_amount String?   @db.VarChar(255)
  verification_staff  String?   @db.VarChar(255)
  create_at           DateTime? @db.Timestamp(0)
}

model store_versions {
  id          Int          @id @default(autoincrement())
  name        String       @db.VarChar(50)
  type        Int?
  price       Decimal?     @db.Decimal(10, 2)
  remarks     String?      @db.VarChar(100)
  sort        Int?
  create_time DateTime?    @default(now()) @db.DateTime(0)
  update_time DateTime?    @default(now()) @db.DateTime(0)
  delete_time DateTime?    @default(now()) @db.DateTime(0)
  dr          Int          @default(0) @db.TinyInt
  store_info  store_info[]
}

model super_poster {
  id                       Int             @id @default(autoincrement()) @db.UnsignedInt
  name                     String?         @db.VarChar(255)
  type                     Int?            @db.UnsignedInt
  waiting_reply            String?         @db.Text
  is_default               Int?            @db.UnsignedTinyInt
  poster_bg                String?         @db.VarChar(255)
  content                  String?         @db.Text
  notice_type              Int?            @db.UnsignedInt
  notice_template_id       String?         @db.VarChar(255)
  website_id               Int?            @db.UnsignedInt
  shop_id                  Int?            @db.UnsignedInt
  is_distribution          Int?            @db.UnsignedTinyInt
  is_perm                  Int?            @db.UnsignedTinyInt
  is_sub                   Int?            @db.UnsignedTinyInt
  is_system_default        Int?            @db.UnsignedTinyInt
  px_type                  Int?            @db.UnsignedInt
  scan_times               Int?            @db.UnsignedInt
  customer_service_message String?         @db.Text
  explanation_link         String?         @db.VarChar(255)
  template_logo            String?         @db.VarChar(255)
  dr                       Int?            @db.UnsignedTinyInt
  created_at               DateTime        @default(now()) @db.Timestamp(0)
  updated_at               DateTime        @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?       @db.Timestamp(0)
  poster_record            poster_record[]
}

model supply_order {
  id                                           Int                    @id @default(autoincrement()) @db.UnsignedInt
  purchase_order_id                            Int                    @db.UnsignedInt
  store_id                                     Int
  pay_money                                    Decimal                @db.Decimal(10, 2)
  status                                       Int
  shipping                                     Int
  user_id                                      Int
  create_time                                  DateTime               @default(now()) @db.Timestamp(0)
  delete_time                                  DateTime?              @db.Timestamp(0)
  update_time                                  DateTime               @default(now()) @db.Timestamp(0)
  dr                                           Int                    @default(0) @db.UnsignedTinyInt
  purchase_order                               purchase_order         @relation(fields: [purchase_order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "supply_order_ibfk_1")
  store_info_store_infoTosupply_order_store_id store_info             @relation("store_infoTosupply_order_store_id", fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "supply_order_ibfk_2")
  store_info_store_infoTosupply_order_user_id  store_info             @relation("store_infoTosupply_order_user_id", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "supply_order_ibfk_3")
  supply_order_product                         supply_order_product[]

  @@index([purchase_order_id], map: "purchase_order_id")
  @@index([store_id], map: "store_id")
  @@index([user_id], map: "user_id")
}

model supply_order_product {
  id                Int            @id @default(autoincrement()) @db.UnsignedInt
  supply_order_id   Int            @db.UnsignedInt
  order_products_id Int            @db.UnsignedInt
  create_time       DateTime       @default(now()) @db.Timestamp(0)
  delete_time       DateTime?      @db.Timestamp(0)
  update_time       DateTime       @default(now()) @db.Timestamp(0)
  dr                Int            @default(0) @db.UnsignedTinyInt
  supply_order      supply_order   @relation(fields: [supply_order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "supply_order_product_ibfk_1")
  order_products    order_products @relation(fields: [order_products_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "supply_order_product_ibfk_2")

  @@index([order_products_id], map: "order_products_id")
  @@index([supply_order_id], map: "supply_order_id")
}

model sys_dict {
  id                 Int                  @id @default(autoincrement())
  label              String               @db.VarChar(255)
  intro              String               @db.VarChar(255)
  revision           Boolean?             @default(true)
  store_id           Int?
  created_at         DateTime             @default(now()) @db.Timestamp(0)
  updated_at         DateTime             @default(now()) @db.Timestamp(0)
  deleted_at         DateTime             @default(now()) @db.Timestamp(0)
  position_privilege position_privilege[]
  sys_dict_item      sys_dict_item[]
}

model sys_dict_item {
  dict_id    Int?
  id         Int       @id @default(autoincrement())
  label      String    @db.VarChar(255)
  nick_name  String?   @db.VarChar(255)
  sort       Int?      @default(1)
  intro      String    @db.Text
  revision   Boolean?  @default(true)
  parent     String?   @db.VarChar(255)
  created_at DateTime  @default(now()) @db.Timestamp(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime  @default(now()) @db.Timestamp(0)
  dr         Int?      @default(0) @db.TinyInt
  sys_dict   sys_dict? @relation(fields: [dict_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sys_dict_item_ibfk_1")

  @@index([dict_id], map: "dict_id")
}

model system_template {
  id                            Int                             @id @default(autoincrement()) @db.UnsignedInt
  template_name                 String?                         @db.VarChar(255)
  template_label_id             Int?                            @db.UnsignedInt
  image                         String?                         @db.VarChar(255)
  user_id                       Int?                            @db.UnsignedInt
  type                          Int?                            @db.UnsignedInt
  dr                            Int?                            @db.UnsignedInt
  created_at                    DateTime                        @default(now()) @db.Timestamp(0)
  updated_at                    DateTime                        @default(now()) @db.Timestamp(0)
  deleted_at                    DateTime?                       @db.Timestamp(0)
  system_template_label         system_template_label?          @relation(fields: [template_label_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "system_template_ibfk_1")
  member_system_template_recold member_system_template_recold[]
  system_template_fields        system_template_fields[]

  @@index([template_label_id], map: "template_label_id")
}

model system_template_fields {
  id                                    Int                                     @id @default(autoincrement()) @db.UnsignedInt
  template_id                           Int?                                    @db.UnsignedInt
  tag                                   String?                                 @db.VarChar(255)
  name                                  String?                                 @db.VarChar(255)
  label                                 String?                                 @db.VarChar(255)
  required                              Boolean?                                @default(false)
  end_default                           String?                                 @db.VarChar(255)
  end_type                              Int?
  start_type                            Int?
  start_default                         String?                                 @db.VarChar(255)
  options                               String?                                 @db.Text
  default_value                         String?                                 @default("9") @db.VarChar(255)
  placeholder                           String?                                 @default("6") @db.VarChar(255)
  type                                  Int?
  value                                 String?                                 @db.VarChar(255)
  dr                                    Int?                                    @default(0) @db.UnsignedInt
  created_at                            DateTime                                @default(now()) @db.Timestamp(0)
  updated_at                            DateTime                                @default(now()) @db.Timestamp(0)
  deleted_at                            DateTime?                               @db.Timestamp(0)
  system_template                       system_template?                        @relation(fields: [template_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "system_template_fields_ibfk_1")
  member_system_template_recold_details member_system_template_recold_details[]

  @@index([template_id], map: "template_id")
}

model system_template_label {
  id              Int               @id @default(autoincrement()) @db.UnsignedInt
  template_name   String?           @db.VarChar(255)
  dr              Int?              @db.UnsignedInt
  created_at      DateTime          @default(now()) @db.Timestamp(0)
  updated_at      DateTime          @default(now()) @db.Timestamp(0)
  deleted_at      DateTime?         @db.Timestamp(0)
  system_template system_template[]
}

model tables {
  id                 Int       @id @default(autoincrement())
  table_name         String    @db.VarChar(100)
  number             String?   @db.VarChar(255)
  min_seats          Int
  max_seats          Int
  uuid               String?   @db.VarChar(255)
  status             Int?      @db.TinyInt
  order_mode         Boolean
  remark             String?   @db.Text
  responsible_person String?   @db.VarChar(100)
  queue_group        Boolean
  created_at         DateTime  @default(now()) @db.Timestamp(0)
  updated_at         DateTime  @default(now()) @db.Timestamp(0)
  deleted_at         DateTime? @db.Timestamp(0)
  dr                 Int       @default(0) @db.TinyInt
}

model task {
  id                 Int          @id @default(autoincrement())
  name               String       @db.VarChar(50)
  type               Int          @db.TinyInt
  image              String?      @db.VarChar(100)
  start_time         DateTime     @db.DateTime(0)
  end_time           DateTime     @db.DateTime(0)
  time_limit         Int
  description        String?      @db.VarChar(500)
  points             Int          @default(0)
  balance            Decimal      @default(0.00) @db.Decimal(10, 2)
  wechat_red_packet  Decimal      @default(0.00) @db.Decimal(10, 2)
  membership_growth  Int          @default(0)
  gift_voucher_id    Int?
  discount_coupon_id Int?
  created_time       DateTime     @default(now()) @db.DateTime(0)
  updated_time       DateTime?    @db.DateTime(0)
  deleted_time       DateTime?    @db.DateTime(0)
  dr                 Int          @default(0) @db.TinyInt
  coupon             coupon?      @relation(fields: [discount_coupon_id], references: [id], onDelete: Cascade, map: "fk_discount_coupon_id")
  gift_coupon        gift_coupon? @relation(fields: [gift_voucher_id], references: [id], onDelete: Cascade, map: "fk_gift_voucher_id")
  task_rule          task_rule[]

  @@index([discount_coupon_id], map: "discount_coupon_id")
  @@index([gift_voucher_id], map: "gift_voucher_id")
}

model task_reward {
  id                    Int               @id @default(autoincrement())
  task_id               Int
  rule_id               Int?
  reward_type           Int               @db.TinyInt
  send_points           Int?
  send_balance          Decimal?          @db.Decimal(10, 2)
  send_red_packet       Decimal?          @db.Decimal(10, 2)
  increase_growth_value Int?
  gift_card_id          Int?
  coupon_id             Int?
  created_time          DateTime          @default(now()) @db.DateTime(0)
  updated_time          DateTime?         @db.DateTime(0)
  deleted_time          DateTime?         @db.DateTime(0)
  dr                    Int               @default(0) @db.TinyInt
  poster_task           poster_task       @relation(fields: [task_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "task_reward_ibfk_1")
  poster_task_rule      poster_task_rule? @relation(fields: [rule_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "task_reward_ibfk_2")

  @@index([rule_id], map: "rule_id")
  @@index([task_id], map: "task_id")
}

model task_rule {
  id           Int       @id @default(autoincrement())
  task_id      Int
  rule_type    Int       @db.TinyInt
  rule         String    @db.VarChar(500)
  created_time DateTime  @default(now()) @db.DateTime(0)
  updated_time DateTime? @db.DateTime(0)
  deleted_time DateTime? @db.DateTime(0)
  dr           Int       @default(0) @db.TinyInt
  task         task      @relation(fields: [task_id], references: [id], onDelete: Cascade, map: "fk_task_id")

  @@index([task_id], map: "task_id")
}

model template {
  id          Int       @id @default(autoincrement())
  title       String?   @db.VarChar(500)
  type        String?   @db.VarChar(50)
  notify_type String?   @db.VarChar(50)
  status      Int?      @db.TinyInt
  content     String?   @db.Text
  sample      String?   @db.Text
  sign        String?   @db.VarChar(100)
  enable      Int?      @db.TinyInt
  modify_time BigInt?
  website_id  Int?
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  updated_at  DateTime? @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.Timestamp(0)
  dr          Int?      @default(0) @db.TinyInt
}

model trace_data {
  id                  Int             @id @default(autoincrement())
  state_ex            String          @db.VarChar(50)
  pre_coordinates     String?         @db.Text
  shipper_code        String          @db.VarChar(50)
  trace_push_data_id  Int
  e_business_id       String          @db.VarChar(50)
  city_is_null        Boolean?        @default(false)
  success             Boolean?        @default(false)
  delivery_man_tel    String?         @db.VarChar(50)
  route_map_url       String?         @db.VarChar(200)
  logistic_code       String          @db.VarChar(50)
  state               String          @db.VarChar(50)
  sender_city_lat_lng String?         @db.VarChar(50)
  location            String?         @db.VarChar(50)
  trace_push_data     trace_push_data @relation(fields: [trace_push_data_id], references: [id], onDelete: Cascade, map: "trace_data_ibfk_1")
  trace_item          trace_item[]

  @@index([trace_push_data_id], map: "trace_push_data_id")
}

model trace_item {
  id             Int        @id @default(autoincrement())
  action         String?    @db.VarChar(255)
  accept_station String     @db.Text
  accept_time    String     @db.VarChar(50)
  remark         String     @db.VarChar(200)
  location       String     @db.VarChar(200)
  trace_data_id  Int
  trace_data     trace_data @relation(fields: [trace_data_id], references: [id], onDelete: Cascade, map: "trace_item_ibfk_1")

  @@index([trace_data_id], map: "trace_data_id")
}

model trace_push_data {
  id            Int          @id @default(autoincrement())
  push_time     String       @db.VarChar(50)
  e_business_id String       @db.VarChar(50)
  trace_data    trace_data[]
}

model upgrade_conditions {
  id              Int       @id @default(autoincrement()) @db.UnsignedInt
  level_id        Int       @db.UnsignedInt
  condition_type  Int       @db.UnsignedTinyInt
  required_type   Int       @db.UnsignedTinyInt
  condition_value Decimal?  @db.Decimal(10, 2)
  created_at      DateTime? @default(now()) @db.Timestamp(0)
  updated_at      DateTime? @default(now()) @db.Timestamp(0)
  deleted_at      DateTime? @db.Timestamp(0)
  level           level     @relation(fields: [level_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "upgrade_conditions_ibfk_1")

  @@index([level_id], map: "level_id")
}
