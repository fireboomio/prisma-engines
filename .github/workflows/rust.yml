name: Rust

on:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            platform: linux/amd64
          - target: aarch64-unknown-linux-gnu
            platform: linux/arm64
          - target: x86_64-pc-windows-msvc
            platform: windows/amd64
          - target: aarch64-pc-windows-msvc
            platform: windows/arm64
          - target: x86_64-apple-darwin
            platform: darwin/amd64
          - target: aarch64-apple-darwin
            platform: darwin/arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build
        run: |
          echo "FROM rust:1.54" > Dockerfile
          echo "WORKDIR /usr/src/myapp" >> Dockerfile
          echo "COPY . ." >> Dockerfile
          echo "RUN rustup target add ${{ matrix.target }}" >> Dockerfile
          echo "RUN cargo build --verbose --release -p schema-engine-cli --target ${{ matrix.target }}" >> Dockerfile
          docker buildx create --use
          docker buildx build --platform ${{ matrix.platform }} --output type=local,dest=./target --file Dockerfile .
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: |
            ./target/*
